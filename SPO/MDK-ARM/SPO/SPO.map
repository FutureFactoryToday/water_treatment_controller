Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    startup_stm32f103xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(RESET) refers to startup_stm32f103xe.o(STACK) for __initial_sp
    startup_stm32f103xe.o(RESET) refers to startup_stm32f103xe.o(.text) for Reset_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.DMA1_Channel2_IRQHandler) for DMA1_Channel2_IRQHandler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.DMA1_Channel3_IRQHandler) for DMA1_Channel3_IRQHandler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) for DMA1_Channel4_IRQHandler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) for DMA1_Channel5_IRQHandler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.SPI1_IRQHandler) for SPI1_IRQHandler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.SPI2_IRQHandler) for SPI2_IRQHandler
    startup_stm32f103xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(.text) refers to system_stm32f1xx.o(.text.SystemInit) for SystemInit
    startup_stm32f103xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f103xe.o(.text) refers to startup_stm32f103xe.o(HEAP) for Heap_Mem
    startup_stm32f103xe.o(.text) refers to startup_stm32f103xe.o(STACK) for Stack_Mem
    main.o(.text.main) refers to main.o(.bss._1ms_cnt) for _1ms_cnt
    main.o(.text.main) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    main.o(.text.main) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    main.o(.text.main) refers to main.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    main.o(.text.main) refers to main.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    main.o(.text.main) refers to main.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    main.o(.text.main) refers to main.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    main.o(.text.main) refers to main.o(.text.LL_GPIO_AF_Remap_SWJ_NOJTAG) for LL_GPIO_AF_Remap_SWJ_NOJTAG
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to gpio.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to dma.o(.text.MX_DMA_Init) for MX_DMA_Init
    main.o(.text.main) refers to spi.o(.text.MX_SPI1_Init) for MX_SPI1_Init
    main.o(.text.main) refers to spi.o(.text.MX_SPI2_Init) for MX_SPI2_Init
    main.o(.text.main) refers to usart.o(.text.MX_USART1_UART_Init) for MX_USART1_UART_Init
    main.o(.text.main) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    main.o(.text.main) refers to main.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    main.o(.text.main) refers to main.o(.text.LL_SYSTICK_EnableIT) for LL_SYSTICK_EnableIT
    main.o(.text.main) refers to tft.o(.text.initTFT) for initTFT
    main.o(.text.main) refers to test.o(.text.main_test) for main_test
    main.o(.text.main) refers to test.o(.text.Test_Color) for Test_Color
    main.o(.text.main) refers to test.o(.text.Test_FillRec) for Test_FillRec
    main.o(.text.main) refers to test.o(.text.Test_Circle) for Test_Circle
    main.o(.text.main) refers to test.o(.text.Test_Triangle) for Test_Triangle
    main.o(.text.main) refers to test.o(.text.English_Font_test) for English_Font_test
    main.o(.text.main) refers to test.o(.text.Chinese_Font_test) for Chinese_Font_test
    main.o(.text.main) refers to test.o(.text.Pic_test) for Pic_test
    main.o(.text.main) refers to test.o(.text.Rotate_Test) for Rotate_Test
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to main.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_SetPriority) refers to main.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.NVIC_EncodePriority) refers to main.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to main.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_GPIO_AF_Remap_SWJ_NOJTAG) refers to main.o(.text.LL_GPIO_AF_Remap_SWJ_NOJTAG) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_HSE_Enable) for LL_RCC_HSE_Enable
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_PWR_EnableBkUpAccess) for LL_PWR_EnableBkUpAccess
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_EnableRTC) for LL_RCC_EnableRTC
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAPB2Prescaler) for LL_RCC_SetAPB2Prescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    main.o(.text.SystemClock_Config) refers to stm32f1xx_ll_utils.o(.text.LL_Init1msTick) for LL_Init1msTick
    main.o(.text.SystemClock_Config) refers to stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_GPIO_SetOutputPin) refers to main.o(.text.LL_GPIO_SetOutputPin) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_SYSTICK_EnableIT) refers to main.o(.text.LL_SYSTICK_EnableIT) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to main.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to main.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_HSE_Enable) refers to main.o(.text.LL_RCC_HSE_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to main.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess) refers to main.o(.text.LL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_EnableRTC) refers to main.o(.text.LL_RCC_EnableRTC) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS) refers to main.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to main.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to main.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler) refers to main.o(.text.LL_RCC_SetAPB2Prescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to main.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to main.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.assert_failed) refers to main.o(.text.assert_failed) for [Anonymous Symbol]
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    gpio.o(.text.MX_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_GPIO_AF_SetEXTISource) for LL_GPIO_AF_SetEXTISource
    gpio.o(.text.MX_GPIO_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) for LL_EXTI_Init
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_GPIO_SetPinMode) for LL_GPIO_SetPinMode
    gpio.o(.ARM.exidx.text.MX_GPIO_Init) refers to gpio.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to gpio.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin) refers to gpio.o(.text.LL_GPIO_ResetOutputPin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_GPIO_AF_SetEXTISource) refers to gpio.o(.text.LL_GPIO_AF_SetEXTISource) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode) refers to gpio.o(.text.LL_GPIO_SetPinMode) for [Anonymous Symbol]
    gpio.o(.text.initSPI_TFT) refers to gpio.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    gpio.o(.text.initSPI_TFT) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    gpio.o(.text.initSPI_TFT) refers to gpio.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    gpio.o(.ARM.exidx.text.initSPI_TFT) refers to gpio.o(.text.initSPI_TFT) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_GPIO_SetOutputPin) refers to gpio.o(.text.LL_GPIO_SetOutputPin) for [Anonymous Symbol]
    gpio.o(.text.initParal_TFT) refers to gpio.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    gpio.o(.text.initParal_TFT) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    gpio.o(.text.initParal_TFT) refers to gpio.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    gpio.o(.ARM.exidx.text.initParal_TFT) refers to gpio.o(.text.initParal_TFT) for [Anonymous Symbol]
    gpio.o(.text.deInitSPI_TFT) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_StructInit) for LL_GPIO_StructInit
    gpio.o(.text.deInitSPI_TFT) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    gpio.o(.ARM.exidx.text.deInitSPI_TFT) refers to gpio.o(.text.deInitSPI_TFT) for [Anonymous Symbol]
    gpio.o(.text.deInitParal_TFT) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_StructInit) for LL_GPIO_StructInit
    gpio.o(.text.deInitParal_TFT) refers to gpio.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    gpio.o(.text.deInitParal_TFT) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    gpio.o(.ARM.exidx.text.deInitParal_TFT) refers to gpio.o(.text.deInitParal_TFT) for [Anonymous Symbol]
    dma.o(.text.MX_DMA_Init) refers to dma.o(.text.LL_AHB1_GRP1_EnableClock) for LL_AHB1_GRP1_EnableClock
    dma.o(.text.MX_DMA_Init) refers to dma.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    dma.o(.text.MX_DMA_Init) refers to dma.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    dma.o(.text.MX_DMA_Init) refers to dma.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    dma.o(.text.MX_DMA_Init) refers to dma.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    dma.o(.ARM.exidx.text.MX_DMA_Init) refers to dma.o(.text.MX_DMA_Init) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.LL_AHB1_GRP1_EnableClock) refers to dma.o(.text.LL_AHB1_GRP1_EnableClock) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.__NVIC_SetPriority) refers to dma.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.NVIC_EncodePriority) refers to dma.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to dma.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    dma.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to dma.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    rtc.o(.text.MX_RTC_Init) refers to rtc.o(.text.LL_PWR_EnableBkUpAccess) for LL_PWR_EnableBkUpAccess
    rtc.o(.text.MX_RTC_Init) refers to rtc.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    rtc.o(.text.MX_RTC_Init) refers to rtc.o(.text.LL_RCC_EnableRTC) for LL_RCC_EnableRTC
    rtc.o(.text.MX_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) for LL_RTC_Init
    rtc.o(.text.MX_RTC_Init) refers to rtc.o(.text.LL_RTC_SetAsynchPrescaler) for LL_RTC_SetAsynchPrescaler
    rtc.o(.text.MX_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) for LL_RTC_TIME_Init
    rtc.o(.ARM.exidx.text.MX_RTC_Init) refers to rtc.o(.text.MX_RTC_Init) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess) refers to rtc.o(.text.LL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to rtc.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.LL_RCC_EnableRTC) refers to rtc.o(.text.LL_RCC_EnableRTC) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler) refers to rtc.o(.text.LL_RTC_SetAsynchPrescaler) for [Anonymous Symbol]
    spi.o(.text.MX_SPI1_Init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    spi.o(.text.MX_SPI1_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_DMA_SetDataTransferDirection) for LL_DMA_SetDataTransferDirection
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_DMA_SetChannelPriorityLevel) for LL_DMA_SetChannelPriorityLevel
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_DMA_SetMode) for LL_DMA_SetMode
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_DMA_SetPeriphIncMode) for LL_DMA_SetPeriphIncMode
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_DMA_SetMemoryIncMode) for LL_DMA_SetMemoryIncMode
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_DMA_SetPeriphSize) for LL_DMA_SetPeriphSize
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_DMA_SetMemorySize) for LL_DMA_SetMemorySize
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    spi.o(.text.MX_SPI1_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_Init) for LL_SPI_Init
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_SPI_Enable) for LL_SPI_Enable
    spi.o(.ARM.exidx.text.MX_SPI1_Init) refers to spi.o(.text.MX_SPI1_Init) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to spi.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    spi.o(.text.LL_DMA_SetDataTransferDirection) refers to spi.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    spi.o(.ARM.exidx.text.LL_DMA_SetDataTransferDirection) refers to spi.o(.text.LL_DMA_SetDataTransferDirection) for [Anonymous Symbol]
    spi.o(.text.LL_DMA_SetChannelPriorityLevel) refers to spi.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    spi.o(.ARM.exidx.text.LL_DMA_SetChannelPriorityLevel) refers to spi.o(.text.LL_DMA_SetChannelPriorityLevel) for [Anonymous Symbol]
    spi.o(.text.LL_DMA_SetMode) refers to spi.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    spi.o(.ARM.exidx.text.LL_DMA_SetMode) refers to spi.o(.text.LL_DMA_SetMode) for [Anonymous Symbol]
    spi.o(.text.LL_DMA_SetPeriphIncMode) refers to spi.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    spi.o(.ARM.exidx.text.LL_DMA_SetPeriphIncMode) refers to spi.o(.text.LL_DMA_SetPeriphIncMode) for [Anonymous Symbol]
    spi.o(.text.LL_DMA_SetMemoryIncMode) refers to spi.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    spi.o(.ARM.exidx.text.LL_DMA_SetMemoryIncMode) refers to spi.o(.text.LL_DMA_SetMemoryIncMode) for [Anonymous Symbol]
    spi.o(.text.LL_DMA_SetPeriphSize) refers to spi.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    spi.o(.ARM.exidx.text.LL_DMA_SetPeriphSize) refers to spi.o(.text.LL_DMA_SetPeriphSize) for [Anonymous Symbol]
    spi.o(.text.LL_DMA_SetMemorySize) refers to spi.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    spi.o(.ARM.exidx.text.LL_DMA_SetMemorySize) refers to spi.o(.text.LL_DMA_SetMemorySize) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.__NVIC_SetPriority) refers to spi.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.NVIC_EncodePriority) refers to spi.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to spi.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to spi.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.LL_SPI_Enable) refers to spi.o(.text.LL_SPI_Enable) for [Anonymous Symbol]
    spi.o(.text.MX_SPI2_Init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    spi.o(.text.MX_SPI2_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_DMA_SetDataTransferDirection) for LL_DMA_SetDataTransferDirection
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_DMA_SetChannelPriorityLevel) for LL_DMA_SetChannelPriorityLevel
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_DMA_SetMode) for LL_DMA_SetMode
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_DMA_SetPeriphIncMode) for LL_DMA_SetPeriphIncMode
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_DMA_SetMemoryIncMode) for LL_DMA_SetMemoryIncMode
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_DMA_SetPeriphSize) for LL_DMA_SetPeriphSize
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_DMA_SetMemorySize) for LL_DMA_SetMemorySize
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    spi.o(.text.MX_SPI2_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_Init) for LL_SPI_Init
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_SPI_Enable) for LL_SPI_Enable
    spi.o(.ARM.exidx.text.MX_SPI2_Init) refers to spi.o(.text.MX_SPI2_Init) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to spi.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    tim.o(.text.MX_TIM3_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_Init) for LL_TIM_Init
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_DisableARRPreload) for LL_TIM_DisableARRPreload
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_OC_EnablePreload) for LL_TIM_OC_EnablePreload
    tim.o(.text.MX_TIM3_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) for LL_TIM_OC_Init
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_OC_DisableFast) for LL_TIM_OC_DisableFast
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_SetTriggerOutput) for LL_TIM_SetTriggerOutput
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_DisableMasterSlaveMode) for LL_TIM_DisableMasterSlaveMode
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    tim.o(.text.MX_TIM3_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_GPIO_AF_EnableRemap_TIM3) for LL_GPIO_AF_EnableRemap_TIM3
    tim.o(.ARM.exidx.text.MX_TIM3_Init) refers to tim.o(.text.MX_TIM3_Init) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to tim.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_DisableARRPreload) refers to tim.o(.text.LL_TIM_DisableARRPreload) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_EnablePreload) refers to tim.o(.rodata.OFFSET_TAB_CCMRx) for OFFSET_TAB_CCMRx
    tim.o(.text.LL_TIM_OC_EnablePreload) refers to tim.o(.rodata.SHIFT_TAB_OCxx) for SHIFT_TAB_OCxx
    tim.o(.ARM.exidx.text.LL_TIM_OC_EnablePreload) refers to tim.o(.text.LL_TIM_OC_EnablePreload) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_DisableFast) refers to tim.o(.rodata.OFFSET_TAB_CCMRx) for OFFSET_TAB_CCMRx
    tim.o(.text.LL_TIM_OC_DisableFast) refers to tim.o(.rodata.SHIFT_TAB_OCxx) for SHIFT_TAB_OCxx
    tim.o(.ARM.exidx.text.LL_TIM_OC_DisableFast) refers to tim.o(.text.LL_TIM_OC_DisableFast) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput) refers to tim.o(.text.LL_TIM_SetTriggerOutput) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_DisableMasterSlaveMode) refers to tim.o(.text.LL_TIM_DisableMasterSlaveMode) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to tim.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_GPIO_AF_EnableRemap_TIM3) refers to tim.o(.text.LL_GPIO_AF_EnableRemap_TIM3) for [Anonymous Symbol]
    usart.o(.text.MX_USART1_UART_Init) refers to usart.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    usart.o(.text.MX_USART1_UART_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    usart.o(.text.MX_USART1_UART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_Init) for LL_USART_Init
    usart.o(.text.MX_USART1_UART_Init) refers to usart.o(.text.LL_USART_ConfigAsyncMode) for LL_USART_ConfigAsyncMode
    usart.o(.text.MX_USART1_UART_Init) refers to usart.o(.text.LL_USART_Enable) for LL_USART_Enable
    usart.o(.ARM.exidx.text.MX_USART1_UART_Init) refers to usart.o(.text.MX_USART1_UART_Init) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to usart.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode) refers to usart.o(.text.LL_USART_ConfigAsyncMode) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.LL_USART_Enable) refers to usart.o(.text.LL_USART_Enable) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32f1xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32f1xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32f1xx_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32f1xx_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32f1xx_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.SVC_Handler) refers to stm32f1xx_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32f1xx_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.PendSV_Handler) refers to stm32f1xx_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.text.SysTick_Handler) refers to main.o(.bss._1ms_cnt) for _1ms_cnt
    stm32f1xx_it.o(.text.SysTick_Handler) refers to stm32f1xx_it.o(.text.LL_GPIO_TogglePin) for LL_GPIO_TogglePin
    stm32f1xx_it.o(.ARM.exidx.text.SysTick_Handler) refers to stm32f1xx_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.LL_GPIO_TogglePin) refers to stm32f1xx_it.o(.text.LL_GPIO_TogglePin) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel2_IRQHandler) refers to stm32f1xx_it.o(.text.DMA1_Channel2_IRQHandler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel3_IRQHandler) refers to stm32f1xx_it.o(.text.DMA1_Channel3_IRQHandler) for [Anonymous Symbol]
    stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) refers to tft_ll.o(.text.tftSpiHandler) for tftSpiHandler
    stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_GI4) for LL_DMA_ClearFlag_GI4
    stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_HT4) for LL_DMA_ClearFlag_HT4
    stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TC4) for LL_DMA_ClearFlag_TC4
    stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TE4) for LL_DMA_ClearFlag_TE4
    stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel4_IRQHandler) refers to stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_GI4) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_HT4) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_HT4) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_TC4) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TC4) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_TE4) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TE4) for [Anonymous Symbol]
    stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) refers to tft_ll.o(.text.tftSpiHandler) for tftSpiHandler
    stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_GI5) for LL_DMA_ClearFlag_GI5
    stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_HT5) for LL_DMA_ClearFlag_HT5
    stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TC5) for LL_DMA_ClearFlag_TC5
    stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TE5) for LL_DMA_ClearFlag_TE5
    stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel5_IRQHandler) refers to stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_GI5) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_HT5) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_HT5) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_TC5) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TC5) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_TE5) refers to stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TE5) for [Anonymous Symbol]
    stm32f1xx_it.o(.text.SPI1_IRQHandler) refers to spi_handler.o(.text.spiInterruptHandler) for spiInterruptHandler
    stm32f1xx_it.o(.ARM.exidx.text.SPI1_IRQHandler) refers to stm32f1xx_it.o(.text.SPI1_IRQHandler) for [Anonymous Symbol]
    stm32f1xx_it.o(.text.SPI2_IRQHandler) refers to stm32f1xx_it.o(.bss.itCnt) for itCnt
    stm32f1xx_it.o(.text.SPI2_IRQHandler) refers to spi_handler.o(.text.spiInterruptHandler) for spiInterruptHandler
    stm32f1xx_it.o(.ARM.exidx.text.SPI2_IRQHandler) refers to stm32f1xx_it.o(.text.SPI2_IRQHandler) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32f1xx_ll_gpio.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for LL_GPIO_SetPinPull
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for LL_GPIO_SetPinMode
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for LL_GPIO_SetPinSpeed
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for LL_GPIO_SetPinOutputType
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for LL_DMA_ClearFlag_GI1
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for LL_DMA_ClearFlag_GI2
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for LL_DMA_ClearFlag_GI3
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4) for LL_DMA_ClearFlag_GI4
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5) for LL_DMA_ClearFlag_GI5
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI6) for LL_DMA_ClearFlag_GI6
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI7) for LL_DMA_ClearFlag_GI7
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI6) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI6) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI7) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI7) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for LL_DMA_ConfigTransfer
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for LL_DMA_SetMemoryAddress
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for LL_DMA_SetPeriphAddress
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetDataLength) for LL_DMA_SetDataLength
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_Init) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) refers to stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) refers to stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) refers to stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_SetDataLength) refers to stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetDataLength) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for LL_RTC_WaitForSynchro
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for LL_RTC_ClearFlag_RS
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF) for LL_RTC_IsActiveFlag_RTOF
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF) for LL_RTC_IsActiveFlag_RTOF
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for LL_RTC_ClearFlag_RS
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS) for LL_RTC_IsActiveFlag_RS
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_RS) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for LL_RTC_WaitForSynchro
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR) for LL_RTC_ClearFlag_ALR
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW) for LL_RTC_ClearFlag_OW
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC) for LL_RTC_ClearFlag_SEC
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TAMPER_Disable) for LL_RTC_TAMPER_Disable
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_SetOutputSource) for LL_RTC_SetOutputSource
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler) for LL_RTC_SetAsynchPrescaler
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_ALR) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_OW) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_SEC) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TAMPER_Disable) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TAMPER_Disable) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetOutputSource) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_SetOutputSource) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_StructInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Set) for LL_RTC_TIME_Set
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Set) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Set) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_StructInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Set) for LL_RTC_ALARM_Set
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Set) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Set) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_StructInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RTOF) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag) refers to stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Set) for LL_RTC_TIME_Set
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Set) for LL_RTC_ALARM_Set
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RS) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for LL_RCC_HSI_SetCalibTrimming
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_ClearResetFlags) for LL_RCC_ClearResetFlags
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_ClearResetFlags) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_ClearResetFlags) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for LL_RCC_GetAPB1Prescaler
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to system_stm32f1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for LL_RCC_GetAPB2Prescaler
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to system_stm32f1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource) for LL_RCC_GetUSBClockSource
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetPrediv) for LL_RCC_PLL_GetPrediv
    stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator) for LL_RCC_PLL_GetMultiplicator
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockSource) for LL_RCC_GetADCClockSource
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetPrediv) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetPrediv) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMultiplicator) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_Init1msTick) refers to stm32f1xx_ll_utils.o(.text.LL_InitTick) for LL_InitTick
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to stm32f1xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_InitTick) refers to stm32f1xx_ll_utils.o(.text.LL_InitTick) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_stm32f1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f1xx_ll_utils.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f1xx_ll_utils.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency) refers to stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to stm32f1xx_ll_utils.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to stm32f1xx_ll_utils.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) refers to stm32f1xx_ll_utils.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency) refers to stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency) for LL_SetFlashLatency
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for LL_RCC_SetAPB2Prescaler
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) for UTILS_PLL_HSE_ConfigSystemClock
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for LL_RCC_HSE_EnableBypass
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for LL_RCC_HSE_DisableBypass
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for LL_RCC_HSE_Enable
    stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31) for LL_EXTI_DisableEvent_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31) for LL_EXTI_EnableIT_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31) for LL_EXTI_DisableIT_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31) for LL_EXTI_EnableEvent_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31) for LL_EXTI_DisableFallingTrig_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31) for LL_EXTI_EnableRisingTrig_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31) for LL_EXTI_DisableRisingTrig_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31) for LL_EXTI_EnableFallingTrig_0_31
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_SPI_Init) refers to stm32f1xx_ll_spi.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_spi.o(.text.LL_SPI_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_spi.o(.text.LL_SPI_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_IsEnabled) for LL_SPI_IsEnabled
    stm32f1xx_ll_spi.o(.text.LL_SPI_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial) for LL_SPI_SetCRCPolynomial
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_Init) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_IsEnabled) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_IsEnabled) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_SetCRCPolynomial) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_StructInit) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_I2S_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) for LL_SPI_DeInit
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_I2S_Init) refers to stm32f1xx_ll_spi.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_spi.o(.text.LL_I2S_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_spi.o(.text.LL_I2S_Init) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_IsEnabled) for LL_I2S_IsEnabled
    stm32f1xx_ll_spi.o(.text.LL_I2S_Init) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_Init) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_Init) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_IsEnabled) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_IsEnabled) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_StructInit) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler) refers to stm32f1xx_ll_spi.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_ConfigPrescaler) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit) refers to stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for LL_TIM_SetAutoReload
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for LL_TIM_SetPrescaler
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter) for LL_TIM_SetRepetitionCounter
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for LL_TIM_GenerateEvent_UPDATE
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetRepetitionCounter) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.OC1Config) for OC1Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.OC2Config) for OC2Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.OC3Config) for OC3Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.OC4Config) for OC4Config
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.OC1Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.OC1Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.OC1Config) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for LL_TIM_OC_SetCompareCH1
    stm32f1xx_ll_tim.o(.ARM.exidx.text.OC1Config) refers to stm32f1xx_ll_tim.o(.text.OC1Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.OC2Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.OC2Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.OC2Config) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    stm32f1xx_ll_tim.o(.ARM.exidx.text.OC2Config) refers to stm32f1xx_ll_tim.o(.text.OC2Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.OC3Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.OC3Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.OC3Config) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for LL_TIM_OC_SetCompareCH3
    stm32f1xx_ll_tim.o(.ARM.exidx.text.OC3Config) refers to stm32f1xx_ll_tim.o(.text.OC3Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.OC4Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.OC4Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.OC4Config) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for LL_TIM_OC_SetCompareCH4
    stm32f1xx_ll_tim.o(.ARM.exidx.text.OC4Config) refers to stm32f1xx_ll_tim.o(.text.OC4Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_IC_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.IC1Config) for IC1Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.IC2Config) for IC2Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.IC3Config) for IC3Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.IC4Config) for IC4Config
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.IC1Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.IC1Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.IC1Config) refers to stm32f1xx_ll_tim.o(.text.IC1Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.IC2Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.IC2Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.IC2Config) refers to stm32f1xx_ll_tim.o(.text.IC2Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.IC3Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.IC3Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.IC3Config) refers to stm32f1xx_ll_tim.o(.text.IC3Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.IC4Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.IC4Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.IC4Config) refers to stm32f1xx_ll_tim.o(.text.IC4Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for LL_TIM_SetEncoderMode
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_Init) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled) for LL_USART_IsEnabled
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetStopBitsLength) for LL_USART_SetStopBitsLength
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl) for LL_USART_SetHWFlowCtrl
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetBaudRate) for LL_USART_SetBaudRate
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_Init) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_IsEnabled) refers to stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetStopBitsLength) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetStopBitsLength) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetBaudRate) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetBaudRate) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) refers to stm32f1xx_ll_usart.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled) for LL_USART_IsEnabled
    stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput) for LL_USART_DisableSCLKOutput
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DisableSCLKOutput) refers to stm32f1xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_ClockStructInit) for [Anonymous Symbol]
    system_stm32f1xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f1xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f1xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f1xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f1xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    tft.o(.text.LCD_WR_REG) refers to tft_ll.o(.text.processMsg) for processMsg
    tft.o(.ARM.exidx.text.LCD_WR_REG) refers to tft.o(.text.LCD_WR_REG) for [Anonymous Symbol]
    tft.o(.text.LCD_WR_DATA) refers to tft_ll.o(.text.processMsg) for processMsg
    tft.o(.ARM.exidx.text.LCD_WR_DATA) refers to tft.o(.text.LCD_WR_DATA) for [Anonymous Symbol]
    tft.o(.text.initTFT) refers to tft_ll.o(.text.initTFT_LL) for initTFT_LL
    tft.o(.text.initTFT) refers to tft_ll.o(.text.rebootTFT) for rebootTFT
    tft.o(.text.initTFT) refers to tft.o(.text.LCD_WR_REG) for LCD_WR_REG
    tft.o(.text.initTFT) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    tft.o(.text.initTFT) refers to tft.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    tft.o(.ARM.exidx.text.initTFT) refers to tft.o(.text.initTFT) for [Anonymous Symbol]
    tft.o(.text.readID) refers to tft_ll.o(.text.processMsg) for processMsg
    tft.o(.ARM.exidx.text.readID) refers to tft.o(.text.readID) for [Anonymous Symbol]
    tft.o(.text.LCD_SetWindows) refers to tft.o(.bss.lcddev) for lcddev
    tft.o(.text.LCD_SetWindows) refers to tft.o(.text.LCD_WR_REG) for LCD_WR_REG
    tft.o(.text.LCD_SetWindows) refers to tft.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    tft.o(.text.LCD_SetWindows) refers to tft.o(.text.LCD_WriteRAM_Prepare) for LCD_WriteRAM_Prepare
    tft.o(.ARM.exidx.text.LCD_SetWindows) refers to tft.o(.text.LCD_SetWindows) for [Anonymous Symbol]
    tft.o(.text.LCD_WriteRAM_Prepare) refers to tft.o(.bss.lcddev) for lcddev
    tft.o(.text.LCD_WriteRAM_Prepare) refers to tft.o(.text.LCD_WR_REG) for LCD_WR_REG
    tft.o(.ARM.exidx.text.LCD_WriteRAM_Prepare) refers to tft.o(.text.LCD_WriteRAM_Prepare) for [Anonymous Symbol]
    tft.o(.text.LCD_SetCursor) refers to tft.o(.text.LCD_SetWindows) for LCD_SetWindows
    tft.o(.ARM.exidx.text.LCD_SetCursor) refers to tft.o(.text.LCD_SetCursor) for [Anonymous Symbol]
    tft.o(.text.LCD_direction) refers to tft.o(.bss.lcddev) for lcddev
    tft.o(.text.LCD_direction) refers to tft.o(.text.LCD_WriteReg) for LCD_WriteReg
    tft.o(.ARM.exidx.text.LCD_direction) refers to tft.o(.text.LCD_direction) for [Anonymous Symbol]
    tft.o(.text.LCD_WriteReg) refers to tft.o(.text.LCD_WR_REG) for LCD_WR_REG
    tft.o(.text.LCD_WriteReg) refers to tft.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    tft.o(.ARM.exidx.text.LCD_WriteReg) refers to tft.o(.text.LCD_WriteReg) for [Anonymous Symbol]
    tft.o(.text.Lcd_WriteData_16Bit) refers to tft.o(.text.LCD_WR_DATA) for LCD_WR_DATA
    tft.o(.ARM.exidx.text.Lcd_WriteData_16Bit) refers to tft.o(.text.Lcd_WriteData_16Bit) for [Anonymous Symbol]
    tft.o(.text.LCD_DrawPoint) refers to tft.o(.text.LCD_SetCursor) for LCD_SetCursor
    tft.o(.text.LCD_DrawPoint) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    tft.o(.text.LCD_DrawPoint) refers to tft.o(.text.Lcd_WriteData_16Bit) for Lcd_WriteData_16Bit
    tft.o(.ARM.exidx.text.LCD_DrawPoint) refers to tft.o(.text.LCD_DrawPoint) for [Anonymous Symbol]
    tft.o(.text.LCD_Clear) refers to tft.o(.bss.lcddev) for lcddev
    tft.o(.text.LCD_Clear) refers to tft.o(.text.LCD_SetWindows) for LCD_SetWindows
    tft.o(.text.LCD_Clear) refers to tft.o(.text.Lcd_WriteData_16Bit) for Lcd_WriteData_16Bit
    tft.o(.text.LCD_Clear) refers to tft.o(.text.LCD_WR_REG) for LCD_WR_REG
    tft.o(.ARM.exidx.text.LCD_Clear) refers to tft.o(.text.LCD_Clear) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.initHandler) refers to spi_handler.o(.text.initHandler) for [Anonymous Symbol]
    spi_handler.o(.text.findHandler) refers to spi_handler.o(.bss.handlerList) for handlerList
    spi_handler.o(.ARM.exidx.text.findHandler) refers to spi_handler.o(.text.findHandler) for [Anonymous Symbol]
    spi_handler.o(.text.findOrCreateHandler) refers to spi_handler.o(.bss.handlerList) for handlerList
    spi_handler.o(.text.findOrCreateHandler) refers to spi_handler.o(.text.createHandler) for createHandler
    spi_handler.o(.ARM.exidx.text.findOrCreateHandler) refers to spi_handler.o(.text.findOrCreateHandler) for [Anonymous Symbol]
    spi_handler.o(.text.createHandler) refers to h1_alloc.o(.text) for malloc
    spi_handler.o(.text.createHandler) refers to fifo.o(.text.initFifo) for initFifo
    spi_handler.o(.ARM.exidx.text.createHandler) refers to spi_handler.o(.text.createHandler) for [Anonymous Symbol]
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.bss.hCnt) for hCnt
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.bss.spiStep) for spiStep
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.text.findHandler) for findHandler
    spi_handler.o(.text.spiInterruptHandler) refers to fifo.o(.text.pop) for pop
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.text.LL_SPI_IsActiveFlag_TXE) for LL_SPI_IsActiveFlag_TXE
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.text.LL_SPI_IsEnabledIT_TXE) for LL_SPI_IsEnabledIT_TXE
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.text.LL_SPI_DisableIT_TXE) for LL_SPI_DisableIT_TXE
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.text.LL_SPI_IsActiveFlag_RXNE) for LL_SPI_IsActiveFlag_RXNE
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.text.LL_SPI_IsEnabledIT_RXNE) for LL_SPI_IsEnabledIT_RXNE
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.text.LL_SPI_DisableIT_RXNE) for LL_SPI_DisableIT_RXNE
    spi_handler.o(.ARM.exidx.text.spiInterruptHandler) refers to spi_handler.o(.text.spiInterruptHandler) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_TXE) refers to spi_handler.o(.text.LL_SPI_IsActiveFlag_TXE) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.LL_SPI_IsEnabledIT_TXE) refers to spi_handler.o(.text.LL_SPI_IsEnabledIT_TXE) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_TXE) refers to spi_handler.o(.text.LL_SPI_DisableIT_TXE) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_RXNE) refers to spi_handler.o(.text.LL_SPI_IsActiveFlag_RXNE) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.LL_SPI_IsEnabledIT_RXNE) refers to spi_handler.o(.text.LL_SPI_IsEnabledIT_RXNE) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_RXNE) refers to spi_handler.o(.text.LL_SPI_DisableIT_RXNE) for [Anonymous Symbol]
    spi_handler.o(.text.registerHandler) refers to spi_handler.o(.bss.spiStep) for spiStep
    spi_handler.o(.text.registerHandler) refers to spi_handler.o(.text.findOrCreateHandler) for findOrCreateHandler
    spi_handler.o(.text.registerHandler) refers to fifo.o(.text.push) for push
    spi_handler.o(.ARM.exidx.text.registerHandler) refers to spi_handler.o(.text.registerHandler) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.pop) refers to fifo.o(.text.pop) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.push) refers to fifo.o(.text.push) for [Anonymous Symbol]
    fifo.o(.text.initFifo) refers to h1_alloc.o(.text) for malloc
    fifo.o(.text.initFifo) refers to h1_free.o(.text) for free
    fifo.o(.ARM.exidx.text.initFifo) refers to fifo.o(.text.initFifo) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.isEmpty) refers to fifo.o(.text.isEmpty) for [Anonymous Symbol]
    fifo.o(.text.testFifo) refers to fifo.o(.text.initFifo) for initFifo
    fifo.o(.text.testFifo) refers to main.o(.text.Error_Handler) for Error_Handler
    fifo.o(.text.testFifo) refers to fifo.o(.text.push) for push
    fifo.o(.text.testFifo) refers to fifo.o(.text.pop) for pop
    fifo.o(.text.testFifo) refers to h1_free.o(.text) for free
    fifo.o(.ARM.exidx.text.testFifo) refers to fifo.o(.text.testFifo) for [Anonymous Symbol]
    tft_ll.o(.text.initTFT_LL) refers to fifo.o(.text.initFifo) for initFifo
    tft_ll.o(.text.initTFT_LL) refers to tft_ll.o(.bss.msgFifo) for msgFifo
    tft_ll.o(.text.initTFT_LL) refers to tft_ll.o(.bss.curMsg) for curMsg
    tft_ll.o(.text.initTFT_LL) refers to tft_ll.o(.bss.curEl) for curEl
    tft_ll.o(.text.initTFT_LL) refers to tft_ll.o(.bss.firstByte) for firstByte
    tft_ll.o(.text.initTFT_LL) refers to tft_ll.o(.bss.handlerStatus) for handlerStatus
    tft_ll.o(.text.initTFT_LL) refers to tft_ll.o(.bss.tftStatus) for tftStatus
    tft_ll.o(.text.initTFT_LL) refers to tft_ll.o(.text.initPerifTFT) for initPerifTFT
    tft_ll.o(.ARM.exidx.text.initTFT_LL) refers to tft_ll.o(.text.initTFT_LL) for [Anonymous Symbol]
    tft_ll.o(.text.initPerifTFT) refers to gpio.o(.text.deInitParal_TFT) for deInitParal_TFT
    tft_ll.o(.text.initPerifTFT) refers to spi.o(.text.MX_SPI2_Init) for MX_SPI2_Init
    tft_ll.o(.text.initPerifTFT) refers to gpio.o(.text.initSPI_TFT) for initSPI_TFT
    tft_ll.o(.text.initPerifTFT) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) for LL_SPI_DeInit
    tft_ll.o(.text.initPerifTFT) refers to gpio.o(.text.deInitSPI_TFT) for deInitSPI_TFT
    tft_ll.o(.text.initPerifTFT) refers to gpio.o(.text.initParal_TFT) for initParal_TFT
    tft_ll.o(.ARM.exidx.text.initPerifTFT) refers to tft_ll.o(.text.initPerifTFT) for [Anonymous Symbol]
    tft_ll.o(.text.processMsg) refers to tft_ll.o(.bss.step) for step
    tft_ll.o(.text.processMsg) refers to h1_alloc.o(.text) for malloc
    tft_ll.o(.text.processMsg) refers to tft_ll.o(.bss.msgFifo) for msgFifo
    tft_ll.o(.text.processMsg) refers to fifo.o(.text.push) for push
    tft_ll.o(.text.processMsg) refers to tft_ll.o(.bss.handlerStatus) for handlerStatus
    tft_ll.o(.text.processMsg) refers to tft_ll.o(.text.tftSpiHandler) for tftSpiHandler
    tft_ll.o(.text.processMsg) refers to spi_handler.o(.text.registerHandler) for registerHandler
    tft_ll.o(.ARM.exidx.text.processMsg) refers to tft_ll.o(.text.processMsg) for [Anonymous Symbol]
    tft_ll.o(.text.tftSpiHandler) refers to tft_ll.o(.bss.tCnt) for tCnt
    tft_ll.o(.text.tftSpiHandler) refers to tft_ll.o(.bss.step) for step
    tft_ll.o(.text.tftSpiHandler) refers to tft_ll.o(.bss.tftStatus) for tftStatus
    tft_ll.o(.text.tftSpiHandler) refers to tft_ll.o(.text.transNewMsg) for transNewMsg
    tft_ll.o(.text.tftSpiHandler) refers to tft_ll.o(.bss.curMsg) for curMsg
    tft_ll.o(.text.tftSpiHandler) refers to tft_ll.o(.bss.handlerStatus) for handlerStatus
    tft_ll.o(.text.tftSpiHandler) refers to tft_ll.o(.text.transCurMsg) for transCurMsg
    tft_ll.o(.ARM.exidx.text.tftSpiHandler) refers to tft_ll.o(.text.tftSpiHandler) for [Anonymous Symbol]
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.bss.step) for step
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.bss.msgFifo) for msgFifo
    tft_ll.o(.text.transNewMsg) refers to fifo.o(.text.pop) for pop
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.bss.curMsg) for curMsg
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.bss.handlerStatus) for handlerStatus
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.bss.tftStatus) for tftStatus
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.bss.firstByte) for firstByte
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.bss.curEl) for curEl
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.text.selectData) for selectData
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.text.selectCommand) for selectCommand
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.text.initDMA) for initDMA
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.text.LL_SPI_EnableDMAReq_TX) for LL_SPI_EnableDMAReq_TX
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.text.LL_SPI_TransmitData8) for LL_SPI_TransmitData8
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.text.LL_SPI_EnableIT_TXE) for LL_SPI_EnableIT_TXE
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.text.LL_SPI_EnableDMAReq_RX) for LL_SPI_EnableDMAReq_RX
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.text.LL_SPI_EnableIT_RXNE) for LL_SPI_EnableIT_RXNE
    tft_ll.o(.text.transNewMsg) refers to tft_ll.o(.data.dummyByte) for dummyByte
    tft_ll.o(.ARM.exidx.text.transNewMsg) refers to tft_ll.o(.text.transNewMsg) for [Anonymous Symbol]
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.bss.step) for step
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.bss.handlerStatus) for handlerStatus
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.bss.curMsg) for curMsg
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.bss.curEl) for curEl
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.text.LL_SPI_TransmitData8) for LL_SPI_TransmitData8
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.text.finishTransmission) for finishTransmission
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.bss.tftStatus) for tftStatus
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.text.transNewMsg) for transNewMsg
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.text.LL_SPI_ReceiveData8) for LL_SPI_ReceiveData8
    tft_ll.o(.text.transCurMsg) refers to tft_ll.o(.text.tftSpiHandler) for tftSpiHandler
    tft_ll.o(.ARM.exidx.text.transCurMsg) refers to tft_ll.o(.text.transCurMsg) for [Anonymous Symbol]
    tft_ll.o(.text.enableTFTCommunication) refers to tft_ll.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft_ll.o(.ARM.exidx.text.enableTFTCommunication) refers to tft_ll.o(.text.enableTFTCommunication) for [Anonymous Symbol]
    tft_ll.o(.text.selectData) refers to tft_ll.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft_ll.o(.ARM.exidx.text.selectData) refers to tft_ll.o(.text.selectData) for [Anonymous Symbol]
    tft_ll.o(.text.selectCommand) refers to tft_ll.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft_ll.o(.ARM.exidx.text.selectCommand) refers to tft_ll.o(.text.selectCommand) for [Anonymous Symbol]
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.bss.curMsg) for curMsg
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.text.LL_DMA_ConfigTransfer) for LL_DMA_ConfigTransfer
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.text.LL_DMA_SetDataLength) for LL_DMA_SetDataLength
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.text.LL_DMA_SetMemoryAddress) for LL_DMA_SetMemoryAddress
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.text.LL_SPI_DMA_GetRegAddr) for LL_SPI_DMA_GetRegAddr
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.text.LL_DMA_SetPeriphAddress) for LL_DMA_SetPeriphAddress
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.text.LL_DMA_EnableIT_TC) for LL_DMA_EnableIT_TC
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.text.LL_DMA_EnableIT_TE) for LL_DMA_EnableIT_TE
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.text.LL_DMA_EnableChannel) for LL_DMA_EnableChannel
    tft_ll.o(.text.initDMA) refers to tft_ll.o(.data.dummyByte) for dummyByte
    tft_ll.o(.ARM.exidx.text.initDMA) refers to tft_ll.o(.text.initDMA) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_EnableDMAReq_TX) refers to tft_ll.o(.text.LL_SPI_EnableDMAReq_TX) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_TransmitData8) refers to tft_ll.o(.text.LL_SPI_TransmitData8) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_EnableIT_TXE) refers to tft_ll.o(.text.LL_SPI_EnableIT_TXE) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_EnableDMAReq_RX) refers to tft_ll.o(.text.LL_SPI_EnableDMAReq_RX) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_EnableIT_RXNE) refers to tft_ll.o(.text.LL_SPI_EnableIT_RXNE) for [Anonymous Symbol]
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.bss.handlerStatus) for handlerStatus
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.LL_SPI_DisableIT_ERR) for LL_SPI_DisableIT_ERR
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.LL_SPI_DisableIT_RXNE) for LL_SPI_DisableIT_RXNE
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.LL_SPI_DisableIT_TXE) for LL_SPI_DisableIT_TXE
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.LL_SPI_DisableDMAReq_RX) for LL_SPI_DisableDMAReq_RX
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.LL_SPI_DisableDMAReq_TX) for LL_SPI_DisableDMAReq_TX
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.LL_DMA_DisableChannel) for LL_DMA_DisableChannel
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.LL_DMA_DisableIT_HT) for LL_DMA_DisableIT_HT
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.LL_DMA_DisableIT_TC) for LL_DMA_DisableIT_TC
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.LL_DMA_DisableIT_TE) for LL_DMA_DisableIT_TE
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.bss.tftStatus) for tftStatus
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.bss.curMsg) for curMsg
    tft_ll.o(.text.finishTransmission) refers to h1_free.o(.text) for free
    tft_ll.o(.text.finishTransmission) refers to tft_ll.o(.text.disableTFTCommunication) for disableTFTCommunication
    tft_ll.o(.ARM.exidx.text.finishTransmission) refers to tft_ll.o(.text.finishTransmission) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_ReceiveData8) refers to tft_ll.o(.text.LL_SPI_ReceiveData8) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_DisableIT_ERR) refers to tft_ll.o(.text.LL_SPI_DisableIT_ERR) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_DisableIT_RXNE) refers to tft_ll.o(.text.LL_SPI_DisableIT_RXNE) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_DisableIT_TXE) refers to tft_ll.o(.text.LL_SPI_DisableIT_TXE) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_DisableDMAReq_RX) refers to tft_ll.o(.text.LL_SPI_DisableDMAReq_RX) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_DisableDMAReq_TX) refers to tft_ll.o(.text.LL_SPI_DisableDMAReq_TX) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_DisableChannel) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_DisableChannel) refers to tft_ll.o(.text.LL_DMA_DisableChannel) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_DisableIT_HT) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_DisableIT_HT) refers to tft_ll.o(.text.LL_DMA_DisableIT_HT) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_DisableIT_TC) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_DisableIT_TC) refers to tft_ll.o(.text.LL_DMA_DisableIT_TC) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_DisableIT_TE) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_DisableIT_TE) refers to tft_ll.o(.text.LL_DMA_DisableIT_TE) for [Anonymous Symbol]
    tft_ll.o(.text.disableTFTCommunication) refers to tft_ll.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft_ll.o(.ARM.exidx.text.disableTFTCommunication) refers to tft_ll.o(.text.disableTFTCommunication) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_ConfigTransfer) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_ConfigTransfer) refers to tft_ll.o(.text.LL_DMA_ConfigTransfer) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_SetDataLength) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_SetDataLength) refers to tft_ll.o(.text.LL_DMA_SetDataLength) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_SetMemoryAddress) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress) refers to tft_ll.o(.text.LL_DMA_SetMemoryAddress) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_SetPeriphAddress) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress) refers to tft_ll.o(.text.LL_DMA_SetPeriphAddress) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_DMA_GetRegAddr) refers to tft_ll.o(.text.LL_SPI_DMA_GetRegAddr) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_EnableIT_TC) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_EnableIT_TC) refers to tft_ll.o(.text.LL_DMA_EnableIT_TC) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_EnableIT_TE) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_EnableIT_TE) refers to tft_ll.o(.text.LL_DMA_EnableIT_TE) for [Anonymous Symbol]
    tft_ll.o(.text.LL_DMA_EnableChannel) refers to tft_ll.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    tft_ll.o(.ARM.exidx.text.LL_DMA_EnableChannel) refers to tft_ll.o(.text.LL_DMA_EnableChannel) for [Anonymous Symbol]
    tft_ll.o(.text.spiManualSend) refers to tft_ll.o(.bss.tftStatus) for tftStatus
    tft_ll.o(.text.spiManualSend) refers to tft_ll.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft_ll.o(.text.spiManualSend) refers to tft_ll.o(.text.LL_SPI_TransmitData8) for LL_SPI_TransmitData8
    tft_ll.o(.text.spiManualSend) refers to tft_ll.o(.text.LL_SPI_IsActiveFlag_BSY) for LL_SPI_IsActiveFlag_BSY
    tft_ll.o(.text.spiManualSend) refers to tft_ll.o(.text.disableTFTCommunication) for disableTFTCommunication
    tft_ll.o(.ARM.exidx.text.spiManualSend) refers to tft_ll.o(.text.spiManualSend) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_BSY) refers to tft_ll.o(.text.LL_SPI_IsActiveFlag_BSY) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.spiDMASend) refers to tft_ll.o(.text.spiDMASend) for [Anonymous Symbol]
    tft_ll.o(.text.spiITSend) refers to tft_ll.o(.bss.curEl) for curEl
    tft_ll.o(.text.spiITSend) refers to tft_ll.o(.text.LL_SPI_TransmitData8) for LL_SPI_TransmitData8
    tft_ll.o(.ARM.exidx.text.spiITSend) refers to tft_ll.o(.text.spiITSend) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.spiManualReceive) refers to tft_ll.o(.text.spiManualReceive) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.spiDMAReceive) refers to tft_ll.o(.text.spiDMAReceive) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.spiITReceive) refers to tft_ll.o(.text.spiITReceive) for [Anonymous Symbol]
    tft_ll.o(.text.manualParalRead) refers to tft_ll.o(.bss.tftStatus) for tftStatus
    tft_ll.o(.text.manualParalRead) refers to tft_ll.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft_ll.o(.text.manualParalRead) refers to tft_ll.o(.text.selectData) for selectData
    tft_ll.o(.text.manualParalRead) refers to tft_ll.o(.text.selectCommand) for selectCommand
    tft_ll.o(.text.manualParalRead) refers to tft_ll.o(.text.disableTFTCommunication) for disableTFTCommunication
    tft_ll.o(.text.manualParalRead) refers to tft_ll.o(.text.SetParalPortInput) for SetParalPortInput
    tft_ll.o(.text.manualParalRead) refers to tft_ll.o(.text.writeStrobe) for writeStrobe
    tft_ll.o(.text.manualParalRead) refers to tft_ll.o(.text.LL_GPIO_ReadInputPort) for LL_GPIO_ReadInputPort
    tft_ll.o(.ARM.exidx.text.manualParalRead) refers to tft_ll.o(.text.manualParalRead) for [Anonymous Symbol]
    tft_ll.o(.text.SetParalPortInput) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    tft_ll.o(.ARM.exidx.text.SetParalPortInput) refers to tft_ll.o(.text.SetParalPortInput) for [Anonymous Symbol]
    tft_ll.o(.text.writeStrobe) refers to tft_ll.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft_ll.o(.text.writeStrobe) refers to tft_ll.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft_ll.o(.ARM.exidx.text.writeStrobe) refers to tft_ll.o(.text.writeStrobe) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_GPIO_ReadInputPort) refers to tft_ll.o(.text.LL_GPIO_ReadInputPort) for [Anonymous Symbol]
    tft_ll.o(.text.manualParalSend) refers to tft_ll.o(.bss.tftStatus) for tftStatus
    tft_ll.o(.text.manualParalSend) refers to tft_ll.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft_ll.o(.text.manualParalSend) refers to tft_ll.o(.text.selectData) for selectData
    tft_ll.o(.text.manualParalSend) refers to tft_ll.o(.text.selectCommand) for selectCommand
    tft_ll.o(.text.manualParalSend) refers to tft_ll.o(.text.disableTFTCommunication) for disableTFTCommunication
    tft_ll.o(.text.manualParalSend) refers to tft_ll.o(.text.SetParalPortOutput) for SetParalPortOutput
    tft_ll.o(.text.manualParalSend) refers to tft_ll.o(.text.LL_GPIO_WriteOutputPort) for LL_GPIO_WriteOutputPort
    tft_ll.o(.text.manualParalSend) refers to tft_ll.o(.text.writeStrobe) for writeStrobe
    tft_ll.o(.ARM.exidx.text.manualParalSend) refers to tft_ll.o(.text.manualParalSend) for [Anonymous Symbol]
    tft_ll.o(.text.SetParalPortOutput) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    tft_ll.o(.ARM.exidx.text.SetParalPortOutput) refers to tft_ll.o(.text.SetParalPortOutput) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_GPIO_WriteOutputPort) refers to tft_ll.o(.text.LL_GPIO_WriteOutputPort) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.paralItSend) refers to tft_ll.o(.text.paralItSend) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.paralDMASend) refers to tft_ll.o(.text.paralDMASend) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.paralItRead) refers to tft_ll.o(.text.paralItRead) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.paralDMARead) refers to tft_ll.o(.text.paralDMARead) for [Anonymous Symbol]
    tft_ll.o(.text.rebootTFT) refers to tft_ll.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft_ll.o(.text.rebootTFT) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    tft_ll.o(.text.rebootTFT) refers to tft_ll.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft_ll.o(.ARM.exidx.text.rebootTFT) refers to tft_ll.o(.text.rebootTFT) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin) refers to tft_ll.o(.text.LL_GPIO_ResetOutputPin) for [Anonymous Symbol]
    tft_ll.o(.ARM.exidx.text.LL_GPIO_SetOutputPin) refers to tft_ll.o(.text.LL_GPIO_SetOutputPin) for [Anonymous Symbol]
    tft_ll.o(.text.readStrobe) refers to tft_ll.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft_ll.o(.text.readStrobe) refers to tft_ll.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft_ll.o(.ARM.exidx.text.readStrobe) refers to tft_ll.o(.text.readStrobe) for [Anonymous Symbol]
    tft_ll.o(.text.manIDRead) refers to tft_ll.o(.text.initPerifTFT) for initPerifTFT
    tft_ll.o(.text.manIDRead) refers to tft_ll.o(.text.rebootTFT) for rebootTFT
    tft_ll.o(.text.manIDRead) refers to tft_ll.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft_ll.o(.text.manIDRead) refers to tft_ll.o(.text.selectCommand) for selectCommand
    tft_ll.o(.text.manIDRead) refers to tft_ll.o(.text.LL_SPI_TransmitData8) for LL_SPI_TransmitData8
    tft_ll.o(.text.manIDRead) refers to tft_ll.o(.text.LL_SPI_IsActiveFlag_BSY) for LL_SPI_IsActiveFlag_BSY
    tft_ll.o(.text.manIDRead) refers to tft_ll.o(.text.selectData) for selectData
    tft_ll.o(.text.manIDRead) refers to tft_ll.o(.text.LL_SPI_ReceiveData8) for LL_SPI_ReceiveData8
    tft_ll.o(.text.manIDRead) refers to tft_ll.o(.text.disableTFTCommunication) for disableTFTCommunication
    tft_ll.o(.ARM.exidx.text.manIDRead) refers to tft_ll.o(.text.manIDRead) for [Anonymous Symbol]
    test.o(.text.DrawTestPage) refers to tft.o(.text.LCD_Clear) for LCD_Clear
    test.o(.text.DrawTestPage) refers to tft.o(.bss.lcddev) for lcddev
    test.o(.text.DrawTestPage) refers to gui.o(.text.LCD_Fill) for LCD_Fill
    test.o(.text.DrawTestPage) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    test.o(.text.DrawTestPage) refers to gui.o(.text.Gui_StrCenter) for Gui_StrCenter
    test.o(.text.DrawTestPage) refers to test.o(.rodata.str1.1) for .L.str
    test.o(.ARM.exidx.text.DrawTestPage) refers to test.o(.text.DrawTestPage) for [Anonymous Symbol]
    test.o(.text.main_test) refers to test.o(.rodata.str1.1) for .L.str.1
    test.o(.text.main_test) refers to test.o(.text.DrawTestPage) for DrawTestPage
    test.o(.text.main_test) refers to gui.o(.text.Gui_StrCenter) for Gui_StrCenter
    test.o(.text.main_test) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    test.o(.ARM.exidx.text.main_test) refers to test.o(.text.main_test) for [Anonymous Symbol]
    test.o(.text.Test_Color) refers to tft.o(.bss.lcddev) for lcddev
    test.o(.text.Test_Color) refers to gui.o(.text.LCD_Fill) for LCD_Fill
    test.o(.text.Test_Color) refers to test.o(.rodata.str1.1) for .L.str.6
    test.o(.text.Test_Color) refers to gui.o(.text.Show_Str) for Show_Str
    test.o(.text.Test_Color) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    test.o(.ARM.exidx.text.Test_Color) refers to test.o(.text.Test_Color) for [Anonymous Symbol]
    test.o(.text.Test_FillRec) refers to test.o(.rodata.str1.1) for .L.str.10
    test.o(.text.Test_FillRec) refers to test.o(.text.DrawTestPage) for DrawTestPage
    test.o(.text.Test_FillRec) refers to tft.o(.bss.lcddev) for lcddev
    test.o(.text.Test_FillRec) refers to gui.o(.text.LCD_Fill) for LCD_Fill
    test.o(.text.Test_FillRec) refers to test.o(.data.ColorTab) for ColorTab
    test.o(.text.Test_FillRec) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    test.o(.text.Test_FillRec) refers to gui.o(.text.LCD_DrawRectangle) for LCD_DrawRectangle
    test.o(.text.Test_FillRec) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    test.o(.text.Test_FillRec) refers to gui.o(.text.LCD_DrawFillRectangle) for LCD_DrawFillRectangle
    test.o(.ARM.exidx.text.Test_FillRec) refers to test.o(.text.Test_FillRec) for [Anonymous Symbol]
    test.o(.text.Test_Circle) refers to test.o(.rodata.str1.1) for .L.str.11
    test.o(.text.Test_Circle) refers to test.o(.text.DrawTestPage) for DrawTestPage
    test.o(.text.Test_Circle) refers to tft.o(.bss.lcddev) for lcddev
    test.o(.text.Test_Circle) refers to gui.o(.text.LCD_Fill) for LCD_Fill
    test.o(.text.Test_Circle) refers to test.o(.data.ColorTab) for ColorTab
    test.o(.text.Test_Circle) refers to gui.o(.text.gui_circle) for gui_circle
    test.o(.text.Test_Circle) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    test.o(.ARM.exidx.text.Test_Circle) refers to test.o(.text.Test_Circle) for [Anonymous Symbol]
    test.o(.text.English_Font_test) refers to test.o(.rodata.str1.1) for .L.str.12
    test.o(.text.English_Font_test) refers to test.o(.text.DrawTestPage) for DrawTestPage
    test.o(.text.English_Font_test) refers to gui.o(.text.Show_Str) for Show_Str
    test.o(.text.English_Font_test) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    test.o(.ARM.exidx.text.English_Font_test) refers to test.o(.text.English_Font_test) for [Anonymous Symbol]
    test.o(.text.Test_Triangle) refers to test.o(.rodata.str1.1) for .L.str.19
    test.o(.text.Test_Triangle) refers to test.o(.text.DrawTestPage) for DrawTestPage
    test.o(.text.Test_Triangle) refers to tft.o(.bss.lcddev) for lcddev
    test.o(.text.Test_Triangle) refers to gui.o(.text.LCD_Fill) for LCD_Fill
    test.o(.text.Test_Triangle) refers to test.o(.data.ColorTab) for ColorTab
    test.o(.text.Test_Triangle) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    test.o(.text.Test_Triangle) refers to gui.o(.text.Draw_Triangel) for Draw_Triangel
    test.o(.text.Test_Triangle) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    test.o(.text.Test_Triangle) refers to gui.o(.text.Fill_Triangel) for Fill_Triangel
    test.o(.ARM.exidx.text.Test_Triangle) refers to test.o(.text.Test_Triangle) for [Anonymous Symbol]
    test.o(.text.Chinese_Font_test) refers to test.o(.rodata.str1.1) for .L.str.20
    test.o(.text.Chinese_Font_test) refers to test.o(.text.DrawTestPage) for DrawTestPage
    test.o(.text.Chinese_Font_test) refers to gui.o(.text.Show_Str) for Show_Str
    test.o(.text.Chinese_Font_test) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    test.o(.ARM.exidx.text.Chinese_Font_test) refers to test.o(.text.Chinese_Font_test) for [Anonymous Symbol]
    test.o(.text.Pic_test) refers to test.o(.rodata.str1.1) for .L.str.25
    test.o(.text.Pic_test) refers to test.o(.text.DrawTestPage) for DrawTestPage
    test.o(.text.Pic_test) refers to test.o(.rodata.gImage_qq) for gImage_qq
    test.o(.text.Pic_test) refers to gui.o(.text.Gui_Drawbmp16) for Gui_Drawbmp16
    test.o(.text.Pic_test) refers to gui.o(.text.Show_Str) for Show_Str
    test.o(.text.Pic_test) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    test.o(.ARM.exidx.text.Pic_test) refers to test.o(.text.Pic_test) for [Anonymous Symbol]
    test.o(.text.Rotate_Test) refers to test.o(.rodata..L__const.Rotate_Test.Direction) for .L__const.Rotate_Test.Direction
    test.o(.text.Rotate_Test) refers to tft.o(.text.LCD_direction) for LCD_direction
    test.o(.text.Rotate_Test) refers to test.o(.rodata.str1.1) for .L.str.31
    test.o(.text.Rotate_Test) refers to test.o(.text.DrawTestPage) for DrawTestPage
    test.o(.text.Rotate_Test) refers to gui.o(.text.Show_Str) for Show_Str
    test.o(.text.Rotate_Test) refers to test.o(.rodata.gImage_qq) for gImage_qq
    test.o(.text.Rotate_Test) refers to gui.o(.text.Gui_Drawbmp16) for Gui_Drawbmp16
    test.o(.text.Rotate_Test) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    test.o(.ARM.exidx.text.Rotate_Test) refers to test.o(.text.Rotate_Test) for [Anonymous Symbol]
    test.o(.rodata..L__const.Rotate_Test.Direction) refers to test.o(.rodata.str1.1) for [Anonymous Symbol]
    gui.o(.text.GUI_DrawPoint) refers to tft.o(.text.LCD_SetCursor) for LCD_SetCursor
    gui.o(.text.GUI_DrawPoint) refers to tft.o(.text.Lcd_WriteData_16Bit) for Lcd_WriteData_16Bit
    gui.o(.ARM.exidx.text.GUI_DrawPoint) refers to gui.o(.text.GUI_DrawPoint) for [Anonymous Symbol]
    gui.o(.text.LCD_Fill) refers to tft.o(.text.LCD_SetWindows) for LCD_SetWindows
    gui.o(.text.LCD_Fill) refers to tft.o(.text.Lcd_WriteData_16Bit) for Lcd_WriteData_16Bit
    gui.o(.text.LCD_Fill) refers to tft.o(.bss.lcddev) for lcddev
    gui.o(.ARM.exidx.text.LCD_Fill) refers to gui.o(.text.LCD_Fill) for [Anonymous Symbol]
    gui.o(.text.LCD_DrawLine) refers to tft.o(.text.LCD_DrawPoint) for LCD_DrawPoint
    gui.o(.ARM.exidx.text.LCD_DrawLine) refers to gui.o(.text.LCD_DrawLine) for [Anonymous Symbol]
    gui.o(.text.LCD_DrawRectangle) refers to gui.o(.text.LCD_DrawLine) for LCD_DrawLine
    gui.o(.ARM.exidx.text.LCD_DrawRectangle) refers to gui.o(.text.LCD_DrawRectangle) for [Anonymous Symbol]
    gui.o(.text.LCD_DrawFillRectangle) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    gui.o(.text.LCD_DrawFillRectangle) refers to gui.o(.text.LCD_Fill) for LCD_Fill
    gui.o(.ARM.exidx.text.LCD_DrawFillRectangle) refers to gui.o(.text.LCD_DrawFillRectangle) for [Anonymous Symbol]
    gui.o(.text._draw_circle_8) refers to gui.o(.text.GUI_DrawPoint) for GUI_DrawPoint
    gui.o(.ARM.exidx.text._draw_circle_8) refers to gui.o(.text._draw_circle_8) for [Anonymous Symbol]
    gui.o(.text.gui_circle) refers to gui.o(.text._draw_circle_8) for _draw_circle_8
    gui.o(.ARM.exidx.text.gui_circle) refers to gui.o(.text.gui_circle) for [Anonymous Symbol]
    gui.o(.text.Draw_Triangel) refers to gui.o(.text.LCD_DrawLine) for LCD_DrawLine
    gui.o(.ARM.exidx.text.Draw_Triangel) refers to gui.o(.text.Draw_Triangel) for [Anonymous Symbol]
    gui.o(.text.Fill_Triangel) refers to gui.o(.text._swap) for _swap
    gui.o(.text.Fill_Triangel) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    gui.o(.text.Fill_Triangel) refers to gui.o(.text.LCD_Fill) for LCD_Fill
    gui.o(.ARM.exidx.text.Fill_Triangel) refers to gui.o(.text.Fill_Triangel) for [Anonymous Symbol]
    gui.o(.ARM.exidx.text._swap) refers to gui.o(.text._swap) for [Anonymous Symbol]
    gui.o(.text.LCD_ShowChar) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    gui.o(.text.LCD_ShowChar) refers to tft.o(.text.LCD_SetWindows) for LCD_SetWindows
    gui.o(.text.LCD_ShowChar) refers to gui.o(.rodata.asc2_1206) for asc2_1206
    gui.o(.text.LCD_ShowChar) refers to gui.o(.rodata.asc2_1608) for asc2_1608
    gui.o(.text.LCD_ShowChar) refers to tft.o(.text.Lcd_WriteData_16Bit) for Lcd_WriteData_16Bit
    gui.o(.text.LCD_ShowChar) refers to tft.o(.text.LCD_DrawPoint) for LCD_DrawPoint
    gui.o(.text.LCD_ShowChar) refers to tft.o(.bss.lcddev) for lcddev
    gui.o(.ARM.exidx.text.LCD_ShowChar) refers to gui.o(.text.LCD_ShowChar) for [Anonymous Symbol]
    gui.o(.text.LCD_ShowString) refers to tft.o(.bss.lcddev) for lcddev
    gui.o(.text.LCD_ShowString) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    gui.o(.text.LCD_ShowString) refers to tft.o(.data.BACK_COLOR) for BACK_COLOR
    gui.o(.text.LCD_ShowString) refers to gui.o(.text.LCD_ShowChar) for LCD_ShowChar
    gui.o(.ARM.exidx.text.LCD_ShowString) refers to gui.o(.text.LCD_ShowString) for [Anonymous Symbol]
    gui.o(.ARM.exidx.text.mypow) refers to gui.o(.text.mypow) for [Anonymous Symbol]
    gui.o(.text.LCD_ShowNum) refers to gui.o(.text.mypow) for mypow
    gui.o(.text.LCD_ShowNum) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    gui.o(.text.LCD_ShowNum) refers to tft.o(.data.BACK_COLOR) for BACK_COLOR
    gui.o(.text.LCD_ShowNum) refers to gui.o(.text.LCD_ShowChar) for LCD_ShowChar
    gui.o(.ARM.exidx.text.LCD_ShowNum) refers to gui.o(.text.LCD_ShowNum) for [Anonymous Symbol]
    gui.o(.text.GUI_DrawFont16) refers to gui.o(.rodata.tfont16) for tfont16
    gui.o(.text.GUI_DrawFont16) refers to tft.o(.text.LCD_SetWindows) for LCD_SetWindows
    gui.o(.text.GUI_DrawFont16) refers to tft.o(.text.Lcd_WriteData_16Bit) for Lcd_WriteData_16Bit
    gui.o(.text.GUI_DrawFont16) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    gui.o(.text.GUI_DrawFont16) refers to tft.o(.text.LCD_DrawPoint) for LCD_DrawPoint
    gui.o(.text.GUI_DrawFont16) refers to tft.o(.bss.lcddev) for lcddev
    gui.o(.ARM.exidx.text.GUI_DrawFont16) refers to gui.o(.text.GUI_DrawFont16) for [Anonymous Symbol]
    gui.o(.text.GUI_DrawFont24) refers to gui.o(.rodata.tfont24) for tfont24
    gui.o(.text.GUI_DrawFont24) refers to tft.o(.text.LCD_SetWindows) for LCD_SetWindows
    gui.o(.text.GUI_DrawFont24) refers to tft.o(.text.Lcd_WriteData_16Bit) for Lcd_WriteData_16Bit
    gui.o(.text.GUI_DrawFont24) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    gui.o(.text.GUI_DrawFont24) refers to tft.o(.text.LCD_DrawPoint) for LCD_DrawPoint
    gui.o(.text.GUI_DrawFont24) refers to tft.o(.bss.lcddev) for lcddev
    gui.o(.ARM.exidx.text.GUI_DrawFont24) refers to gui.o(.text.GUI_DrawFont24) for [Anonymous Symbol]
    gui.o(.text.GUI_DrawFont32) refers to gui.o(.rodata.tfont32) for tfont32
    gui.o(.text.GUI_DrawFont32) refers to tft.o(.text.LCD_SetWindows) for LCD_SetWindows
    gui.o(.text.GUI_DrawFont32) refers to tft.o(.text.Lcd_WriteData_16Bit) for Lcd_WriteData_16Bit
    gui.o(.text.GUI_DrawFont32) refers to tft.o(.bss.POINT_COLOR) for POINT_COLOR
    gui.o(.text.GUI_DrawFont32) refers to tft.o(.text.LCD_DrawPoint) for LCD_DrawPoint
    gui.o(.text.GUI_DrawFont32) refers to tft.o(.bss.lcddev) for lcddev
    gui.o(.ARM.exidx.text.GUI_DrawFont32) refers to gui.o(.text.GUI_DrawFont32) for [Anonymous Symbol]
    gui.o(.text.Show_Str) refers to tft.o(.bss.lcddev) for lcddev
    gui.o(.text.Show_Str) refers to gui.o(.text.LCD_ShowChar) for LCD_ShowChar
    gui.o(.text.Show_Str) refers to gui.o(.text.GUI_DrawFont32) for GUI_DrawFont32
    gui.o(.text.Show_Str) refers to gui.o(.text.GUI_DrawFont24) for GUI_DrawFont24
    gui.o(.text.Show_Str) refers to gui.o(.text.GUI_DrawFont16) for GUI_DrawFont16
    gui.o(.ARM.exidx.text.Show_Str) refers to gui.o(.text.Show_Str) for [Anonymous Symbol]
    gui.o(.text.Gui_StrCenter) refers to strlen.o(.text) for strlen
    gui.o(.text.Gui_StrCenter) refers to tft.o(.bss.lcddev) for lcddev
    gui.o(.text.Gui_StrCenter) refers to gui.o(.text.Show_Str) for Show_Str
    gui.o(.ARM.exidx.text.Gui_StrCenter) refers to gui.o(.text.Gui_StrCenter) for [Anonymous Symbol]
    gui.o(.text.Gui_Drawbmp16) refers to tft.o(.text.LCD_SetWindows) for LCD_SetWindows
    gui.o(.text.Gui_Drawbmp16) refers to tft.o(.text.Lcd_WriteData_16Bit) for Lcd_WriteData_16Bit
    gui.o(.text.Gui_Drawbmp16) refers to tft.o(.bss.lcddev) for lcddev
    gui.o(.ARM.exidx.text.Gui_Drawbmp16) refers to gui.o(.text.Gui_Drawbmp16) for [Anonymous Symbol]
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to mutex_dummy.o(.text) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc1.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init.o(.text) for __Heap_Initialize
    h1_init_threads.o(.text) refers to mutex_dummy.o(.text) for _mutex_initialize
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f103xe.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final.o(.text) for __Heap_Finalize
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing main.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_GPIO_AF_Remap_SWJ_NOJTAG), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_GPIO_SetOutputPin), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_SYSTICK_EnableIT), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_HSE_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_EnableRTC), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing main.o(.text.Error_Handler), (14 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.assert_failed), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_GPIO_AF_SetEXTISource), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.initSPI_TFT), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_GPIO_SetOutputPin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.initParal_TFT), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.deInitSPI_TFT), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.deInitParal_TFT), (8 bytes).
    Removing dma.o(.text), (0 bytes).
    Removing dma.o(.ARM.exidx.text.MX_DMA_Init), (8 bytes).
    Removing dma.o(.ARM.exidx.text.LL_AHB1_GRP1_EnableClock), (8 bytes).
    Removing dma.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing dma.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing dma.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing dma.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing rtc.o(.text), (0 bytes).
    Removing rtc.o(.text.MX_RTC_Init), (98 bytes).
    Removing rtc.o(.ARM.exidx.text.MX_RTC_Init), (8 bytes).
    Removing rtc.o(.text.LL_PWR_EnableBkUpAccess), (18 bytes).
    Removing rtc.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess), (8 bytes).
    Removing rtc.o(.text.LL_APB1_GRP1_EnableClock), (34 bytes).
    Removing rtc.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing rtc.o(.text.LL_RCC_EnableRTC), (18 bytes).
    Removing rtc.o(.ARM.exidx.text.LL_RCC_EnableRTC), (8 bytes).
    Removing rtc.o(.text.LL_RTC_SetAsynchPrescaler), (42 bytes).
    Removing rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler), (8 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.ARM.exidx.text.MX_SPI1_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_DMA_SetDataTransferDirection), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_DMA_SetChannelPriorityLevel), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_DMA_SetMode), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_DMA_SetPeriphIncMode), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_DMA_SetMemoryIncMode), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_DMA_SetPeriphSize), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_DMA_SetMemorySize), (8 bytes).
    Removing spi.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing spi.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing spi.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing spi.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_SPI_Enable), (8 bytes).
    Removing spi.o(.ARM.exidx.text.MX_SPI2_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing tim.o(.text), (0 bytes).
    Removing tim.o(.text.MX_TIM3_Init), (192 bytes).
    Removing tim.o(.ARM.exidx.text.MX_TIM3_Init), (8 bytes).
    Removing tim.o(.text.LL_APB1_GRP1_EnableClock), (34 bytes).
    Removing tim.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing tim.o(.text.LL_TIM_DisableARRPreload), (18 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_DisableARRPreload), (8 bytes).
    Removing tim.o(.text.LL_TIM_OC_EnablePreload), (178 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_OC_EnablePreload), (8 bytes).
    Removing tim.o(.text.LL_TIM_OC_DisableFast), (178 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_OC_DisableFast), (8 bytes).
    Removing tim.o(.text.LL_TIM_SetTriggerOutput), (26 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput), (8 bytes).
    Removing tim.o(.text.LL_TIM_DisableMasterSlaveMode), (18 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_DisableMasterSlaveMode), (8 bytes).
    Removing tim.o(.text.LL_APB2_GRP1_EnableClock), (34 bytes).
    Removing tim.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing tim.o(.text.LL_GPIO_AF_EnableRemap_TIM3), (22 bytes).
    Removing tim.o(.ARM.exidx.text.LL_GPIO_AF_EnableRemap_TIM3), (8 bytes).
    Removing tim.o(.rodata.OFFSET_TAB_CCMRx), (7 bytes).
    Removing tim.o(.rodata.SHIFT_TAB_OCxx), (7 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.MX_USART1_UART_Init), (8 bytes).
    Removing usart.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing usart.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode), (8 bytes).
    Removing usart.o(.ARM.exidx.text.LL_USART_Enable), (8 bytes).
    Removing stm32f1xx_it.o(.text), (0 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.LL_GPIO_TogglePin), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel2_IRQHandler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel3_IRQHandler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel4_IRQHandler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_HT4), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_TC4), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_TE4), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.DMA1_Channel5_IRQHandler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_HT5), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_TC5), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.LL_DMA_ClearFlag_TE5), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.SPI1_IRQHandler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.SPI2_IRQHandler), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.text), (0 bytes).
    Removing stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit), (396 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text), (0 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit), (788 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1), (14 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2), (14 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI6), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI6), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI7), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI7), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_Init), (592 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ConfigTransfer), (54 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress), (36 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress), (36 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_SetDataLength), (58 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_StructInit), (50 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.rodata.str1.1), (55 bytes).
    Removing stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB), (7 bytes).
    Removing stm32f1xx_ll_rtc.o(.text), (0 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit), (180 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DeInit), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection), (18 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode), (152 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnterInitMode), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode), (152 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ExitInitMode), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro), (152 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_WaitForSynchro), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS), (18 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_RS), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection), (18 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_Init), (254 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_Init), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR), (18 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_ALR), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW), (18 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_OW), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC), (18 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_SEC), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_TAMPER_Disable), (24 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TAMPER_Disable), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_SetOutputSource), (26 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetOutputSource), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler), (42 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_StructInit), (22 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_StructInit), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init), (472 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Init), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Set), (26 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Set), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_StructInit), (22 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_StructInit), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init), (488 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Init), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Set), (26 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Set), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_StructInit), (22 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_StructInit), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF), (16 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RTOF), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag), (16 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter), (92 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_SetCounter), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter), (92 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_SetCounter), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS), (16 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RS), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.rodata.str1.1), (55 bytes).
    Removing stm32f1xx_ll_rcc.o(.text), (0 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit), (126 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_Enable), (18 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_SetSysClkSource), (28 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady), (16 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming), (30 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_ClearResetFlags), (18 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_ClearResetFlags), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq), (112 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource), (22 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq), (96 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockSource), (22 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetPrediv), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMultiplicator), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.rodata.str1.1), (55 bytes).
    Removing stm32f1xx_ll_utils.o(.text), (0 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_InitTick), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency), (190 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_FLASH_SetLatency), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_FLASH_GetLatency), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI), (118 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy), (34 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency), (280 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_Enable), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS), (38 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem), (470 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE), (216 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock), (94 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_HSE_ConfigSystemClock), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_IsReady), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_Enable), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_IsReady), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_GetAHBPrescaler), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_Enable), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_SetSysClkSource), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_GetSysClkSource), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.rodata.str1.1), (57 bytes).
    Removing stm32f1xx_ll_exti.o(.text), (0 bytes).
    Removing stm32f1xx_ll_exti.o(.text.LL_EXTI_DeInit), (72 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.text.LL_EXTI_StructInit), (28 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text), (0 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_DeInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_Init), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_IsEnabled), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_SetCRCPolynomial), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_SPI_StructInit), (52 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_StructInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_DeInit), (16 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_DeInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_Init), (662 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_Init), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_IsEnabled), (16 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_IsEnabled), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_StructInit), (36 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_StructInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler), (152 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_ConfigPrescaler), (8 bytes).
    Removing stm32f1xx_ll_pwr.o(.text), (0 bytes).
    Removing stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit), (26 bytes).
    Removing stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit), (8 bytes).
    Removing stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text), (0 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit), (436 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_StructInit), (34 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_Init), (570 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_SetAutoReload), (16 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_SetPrescaler), (16 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter), (16 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetRepetitionCounter), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE), (18 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_OC_StructInit), (42 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init), (120 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.OC1Config), (656 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.OC1Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.OC2Config), (664 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.OC2Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.OC3Config), (662 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.OC3Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.OC4Config), (616 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.OC4Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_IC_StructInit), (30 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init), (120 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.IC1Config), (552 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.IC1Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.IC2Config), (554 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.IC2Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.IC3Config), (554 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.IC3Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.IC4Config), (554 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.IC4Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit), (52 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init), (1074 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_SetEncoderMode), (26 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit), (26 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init), (622 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2), (16 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit), (38 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_Init), (446 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1), (16 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3), (16 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4), (16 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.rodata.str1.1), (55 bytes).
    Removing stm32f1xx_ll_usart.o(.text), (0 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_DeInit), (304 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_IsEnabled), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetStopBitsLength), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetBaudRate), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_StructInit), (40 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit), (420 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput), (18 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DisableSCLKOutput), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_ClockStructInit), (26 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit), (8 bytes).
    Removing system_stm32f1xx.o(.text), (0 bytes).
    Removing system_stm32f1xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f1xx.o(.text.SystemCoreClockUpdate), (290 bytes).
    Removing system_stm32f1xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing tft.o(.text), (0 bytes).
    Removing tft.o(.ARM.exidx.text.LCD_WR_REG), (8 bytes).
    Removing tft.o(.ARM.exidx.text.LCD_WR_DATA), (8 bytes).
    Removing tft.o(.ARM.exidx.text.initTFT), (8 bytes).
    Removing tft.o(.text.readID), (94 bytes).
    Removing tft.o(.ARM.exidx.text.readID), (8 bytes).
    Removing tft.o(.ARM.exidx.text.LCD_SetWindows), (8 bytes).
    Removing tft.o(.ARM.exidx.text.LCD_WriteRAM_Prepare), (8 bytes).
    Removing tft.o(.ARM.exidx.text.LCD_SetCursor), (8 bytes).
    Removing tft.o(.ARM.exidx.text.LCD_direction), (8 bytes).
    Removing tft.o(.ARM.exidx.text.LCD_WriteReg), (8 bytes).
    Removing tft.o(.ARM.exidx.text.Lcd_WriteData_16Bit), (8 bytes).
    Removing tft.o(.ARM.exidx.text.LCD_DrawPoint), (8 bytes).
    Removing tft.o(.ARM.exidx.text.LCD_Clear), (8 bytes).
    Removing tft.o(.data.BACK_COLOR), (2 bytes).
    Removing tft.o(.bss.TFT_ID), (4 bytes).
    Removing spi_handler.o(.text), (0 bytes).
    Removing spi_handler.o(.text.initHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.initHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.findHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.findOrCreateHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.createHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.spiInterruptHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_TXE), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.LL_SPI_IsEnabledIT_TXE), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_TXE), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_RXNE), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.LL_SPI_IsEnabledIT_RXNE), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_RXNE), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.registerHandler), (8 bytes).
    Removing fifo.o(.text), (0 bytes).
    Removing fifo.o(.ARM.exidx.text.pop), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.push), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.initFifo), (8 bytes).
    Removing fifo.o(.text.isEmpty), (44 bytes).
    Removing fifo.o(.ARM.exidx.text.isEmpty), (8 bytes).
    Removing fifo.o(.text.testFifo), (468 bytes).
    Removing fifo.o(.ARM.exidx.text.testFifo), (8 bytes).
    Removing fifo.o(.rodata..L__const.testFifo.fBuf), (5 bytes).
    Removing fifo.o(.rodata..L__const.testFifo.tBuf), (6 bytes).
    Removing wtc_logic.o(.text), (0 bytes).
    Removing tft_ll.o(.text), (0 bytes).
    Removing tft_ll.o(.ARM.exidx.text.initTFT_LL), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.initPerifTFT), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.processMsg), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.tftSpiHandler), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.transNewMsg), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.transCurMsg), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.enableTFTCommunication), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.selectData), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.selectCommand), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.initDMA), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_EnableDMAReq_TX), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_TransmitData8), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_EnableIT_TXE), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_EnableDMAReq_RX), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_EnableIT_RXNE), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.finishTransmission), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_ReceiveData8), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_DisableIT_ERR), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_DisableIT_RXNE), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_DisableIT_TXE), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_DisableDMAReq_RX), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_DisableDMAReq_TX), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_DisableChannel), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_DisableIT_HT), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_DisableIT_TC), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_DisableIT_TE), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.disableTFTCommunication), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_ConfigTransfer), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_SetDataLength), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_DMA_GetRegAddr), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_EnableIT_TC), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_EnableIT_TE), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_DMA_EnableChannel), (8 bytes).
    Removing tft_ll.o(.text.spiManualSend), (190 bytes).
    Removing tft_ll.o(.ARM.exidx.text.spiManualSend), (8 bytes).
    Removing tft_ll.o(.text.LL_SPI_IsActiveFlag_BSY), (16 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_BSY), (8 bytes).
    Removing tft_ll.o(.text.spiDMASend), (12 bytes).
    Removing tft_ll.o(.ARM.exidx.text.spiDMASend), (8 bytes).
    Removing tft_ll.o(.text.spiITSend), (50 bytes).
    Removing tft_ll.o(.ARM.exidx.text.spiITSend), (8 bytes).
    Removing tft_ll.o(.text.spiManualReceive), (12 bytes).
    Removing tft_ll.o(.ARM.exidx.text.spiManualReceive), (8 bytes).
    Removing tft_ll.o(.text.spiDMAReceive), (12 bytes).
    Removing tft_ll.o(.ARM.exidx.text.spiDMAReceive), (8 bytes).
    Removing tft_ll.o(.text.spiITReceive), (12 bytes).
    Removing tft_ll.o(.ARM.exidx.text.spiITReceive), (8 bytes).
    Removing tft_ll.o(.text.manualParalRead), (194 bytes).
    Removing tft_ll.o(.ARM.exidx.text.manualParalRead), (8 bytes).
    Removing tft_ll.o(.text.SetParalPortInput), (48 bytes).
    Removing tft_ll.o(.ARM.exidx.text.SetParalPortInput), (8 bytes).
    Removing tft_ll.o(.text.writeStrobe), (38 bytes).
    Removing tft_ll.o(.ARM.exidx.text.writeStrobe), (8 bytes).
    Removing tft_ll.o(.text.LL_GPIO_ReadInputPort), (12 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_GPIO_ReadInputPort), (8 bytes).
    Removing tft_ll.o(.text.manualParalSend), (230 bytes).
    Removing tft_ll.o(.ARM.exidx.text.manualParalSend), (8 bytes).
    Removing tft_ll.o(.text.SetParalPortOutput), (50 bytes).
    Removing tft_ll.o(.ARM.exidx.text.SetParalPortOutput), (8 bytes).
    Removing tft_ll.o(.text.LL_GPIO_WriteOutputPort), (16 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_GPIO_WriteOutputPort), (8 bytes).
    Removing tft_ll.o(.text.paralItSend), (14 bytes).
    Removing tft_ll.o(.ARM.exidx.text.paralItSend), (8 bytes).
    Removing tft_ll.o(.text.paralDMASend), (14 bytes).
    Removing tft_ll.o(.ARM.exidx.text.paralDMASend), (8 bytes).
    Removing tft_ll.o(.text.paralItRead), (14 bytes).
    Removing tft_ll.o(.ARM.exidx.text.paralItRead), (8 bytes).
    Removing tft_ll.o(.text.paralDMARead), (14 bytes).
    Removing tft_ll.o(.ARM.exidx.text.paralDMARead), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.rebootTFT), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin), (8 bytes).
    Removing tft_ll.o(.ARM.exidx.text.LL_GPIO_SetOutputPin), (8 bytes).
    Removing tft_ll.o(.text.readStrobe), (38 bytes).
    Removing tft_ll.o(.ARM.exidx.text.readStrobe), (8 bytes).
    Removing tft_ll.o(.text.manIDRead), (280 bytes).
    Removing tft_ll.o(.ARM.exidx.text.manIDRead), (8 bytes).
    Removing test.o(.text), (0 bytes).
    Removing test.o(.ARM.exidx.text.DrawTestPage), (8 bytes).
    Removing test.o(.ARM.exidx.text.main_test), (8 bytes).
    Removing test.o(.ARM.exidx.text.Test_Color), (8 bytes).
    Removing test.o(.ARM.exidx.text.Test_FillRec), (8 bytes).
    Removing test.o(.ARM.exidx.text.Test_Circle), (8 bytes).
    Removing test.o(.ARM.exidx.text.English_Font_test), (8 bytes).
    Removing test.o(.ARM.exidx.text.Test_Triangle), (8 bytes).
    Removing test.o(.ARM.exidx.text.Chinese_Font_test), (8 bytes).
    Removing test.o(.ARM.exidx.text.Pic_test), (8 bytes).
    Removing test.o(.ARM.exidx.text.Rotate_Test), (8 bytes).
    Removing gui.o(.text), (0 bytes).
    Removing gui.o(.ARM.exidx.text.GUI_DrawPoint), (8 bytes).
    Removing gui.o(.ARM.exidx.text.LCD_Fill), (8 bytes).
    Removing gui.o(.ARM.exidx.text.LCD_DrawLine), (8 bytes).
    Removing gui.o(.ARM.exidx.text.LCD_DrawRectangle), (8 bytes).
    Removing gui.o(.ARM.exidx.text.LCD_DrawFillRectangle), (8 bytes).
    Removing gui.o(.ARM.exidx.text._draw_circle_8), (8 bytes).
    Removing gui.o(.ARM.exidx.text.gui_circle), (8 bytes).
    Removing gui.o(.ARM.exidx.text.Draw_Triangel), (8 bytes).
    Removing gui.o(.ARM.exidx.text.Fill_Triangel), (8 bytes).
    Removing gui.o(.ARM.exidx.text._swap), (8 bytes).
    Removing gui.o(.ARM.exidx.text.LCD_ShowChar), (8 bytes).
    Removing gui.o(.text.LCD_ShowString), (204 bytes).
    Removing gui.o(.ARM.exidx.text.LCD_ShowString), (8 bytes).
    Removing gui.o(.text.mypow), (48 bytes).
    Removing gui.o(.ARM.exidx.text.mypow), (8 bytes).
    Removing gui.o(.text.LCD_ShowNum), (320 bytes).
    Removing gui.o(.ARM.exidx.text.LCD_ShowNum), (8 bytes).
    Removing gui.o(.ARM.exidx.text.GUI_DrawFont16), (8 bytes).
    Removing gui.o(.ARM.exidx.text.GUI_DrawFont24), (8 bytes).
    Removing gui.o(.ARM.exidx.text.GUI_DrawFont32), (8 bytes).
    Removing gui.o(.ARM.exidx.text.Show_Str), (8 bytes).
    Removing gui.o(.ARM.exidx.text.Gui_StrCenter), (8 bytes).
    Removing gui.o(.ARM.exidx.text.Gui_Drawbmp16), (8 bytes).
    Removing logo_main.o(.text), (0 bytes).
    Removing logo_main.o(.rodata.gImage_LOGO_MAIN), (90008 bytes).

613 unused section(s) (total 114691 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  mutex_dummy.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    FIFO.c                                   0x00000000   Number         0  fifo.o ABSOLUTE
    GUI.c                                    0x00000000   Number         0  gui.o ABSOLUTE
    LOGO_MAIN.c                              0x00000000   Number         0  logo_main.o ABSOLUTE
    SPI_Handler.c                            0x00000000   Number         0  spi_handler.o ABSOLUTE
    TFT.c                                    0x00000000   Number         0  tft.o ABSOLUTE
    TFT_LL.c                                 0x00000000   Number         0  tft_ll.o ABSOLUTE
    WTC_Logic.c                              0x00000000   Number         0  wtc_logic.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    dma.c                                    0x00000000   Number         0  dma.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    rtc.c                                    0x00000000   Number         0  rtc.o ABSOLUTE
    spi.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    startup_stm32f103xe.s                    0x00000000   Number         0  startup_stm32f103xe.o ABSOLUTE
    stm32f1xx_it.c                           0x00000000   Number         0  stm32f1xx_it.o ABSOLUTE
    stm32f1xx_ll_dma.c                       0x00000000   Number         0  stm32f1xx_ll_dma.o ABSOLUTE
    stm32f1xx_ll_exti.c                      0x00000000   Number         0  stm32f1xx_ll_exti.o ABSOLUTE
    stm32f1xx_ll_gpio.c                      0x00000000   Number         0  stm32f1xx_ll_gpio.o ABSOLUTE
    stm32f1xx_ll_pwr.c                       0x00000000   Number         0  stm32f1xx_ll_pwr.o ABSOLUTE
    stm32f1xx_ll_rcc.c                       0x00000000   Number         0  stm32f1xx_ll_rcc.o ABSOLUTE
    stm32f1xx_ll_rtc.c                       0x00000000   Number         0  stm32f1xx_ll_rtc.o ABSOLUTE
    stm32f1xx_ll_spi.c                       0x00000000   Number         0  stm32f1xx_ll_spi.o ABSOLUTE
    stm32f1xx_ll_tim.c                       0x00000000   Number         0  stm32f1xx_ll_tim.o ABSOLUTE
    stm32f1xx_ll_usart.c                     0x00000000   Number         0  stm32f1xx_ll_usart.o ABSOLUTE
    stm32f1xx_ll_utils.c                     0x00000000   Number         0  stm32f1xx_ll_utils.o ABSOLUTE
    system_stm32f1xx.c                       0x00000000   Number         0  system_stm32f1xx.o ABSOLUTE
    test.c                                   0x00000000   Number         0  test.o ABSOLUTE
    tim.c                                    0x00000000   Number         0  tim.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    RESET                                    0x08000000   Section      304  startup_stm32f103xe.o(RESET)
    !!!main                                  0x08000130   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000138   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x0800016c   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000188   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x080001a4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x080001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x080001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x080001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000007          0x080001a6   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000007)
    .ARM.Collect$$libinit$$0000000C          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x080001ae   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x080001b0   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x080001b2   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x080001b4   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x080001b4   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x080001b4   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x080001ba   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x080001ba   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001be   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001be   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001c6   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001c8   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001c8   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001cc   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x080001d4   Section       64  startup_stm32f103xe.o(.text)
    .text                                    0x08000214   Section        0  h1_alloc.o(.text)
    .text                                    0x08000272   Section        0  h1_free.o(.text)
    .text                                    0x080002c0   Section        0  strlen.o(.text)
    .text                                    0x080002fe   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0800034c   Section        0  heapauxi.o(.text)
    .text                                    0x08000354   Section        8  rt_heap_descriptor_intlibspace.o(.text)
    .text                                    0x0800035c   Section        0  hguard.o(.text)
    .text                                    0x08000360   Section        0  init_alloc.o(.text)
    .text                                    0x080003ea   Section        0  h1_init.o(.text)
    .text                                    0x080003f8   Section        8  libspace.o(.text)
    .text                                    0x08000400   Section        0  maybetermalloc1.o(.text)
    .text                                    0x08000400   Section        0  h1_extend.o(.text)
    .text                                    0x08000434   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x08000442   Section        2  use_no_semi.o(.text)
    .text                                    0x08000444   Section        0  indicate_semi.o(.text)
    .text                                    0x08000444   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800048e   Section        0  exit.o(.text)
    .text                                    0x080004a0   Section        0  defsig_exit.o(.text)
    .text                                    0x080004ac   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x080004fc   Section        0  sys_exit.o(.text)
    .text                                    0x08000508   Section        0  defsig_general.o(.text)
    .text                                    0x0800053a   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x08000548   Section        0  stm32f1xx_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x0800054c   Section        0  test.o(.text.Chinese_Font_test)
    [Anonymous Symbol]                       0x0800060c   Section        0  stm32f1xx_it.o(.text.DMA1_Channel2_IRQHandler)
    [Anonymous Symbol]                       0x08000610   Section        0  stm32f1xx_it.o(.text.DMA1_Channel3_IRQHandler)
    [Anonymous Symbol]                       0x08000614   Section        0  stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler)
    [Anonymous Symbol]                       0x08000640   Section        0  stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler)
    [Anonymous Symbol]                       0x0800066c   Section        0  stm32f1xx_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08000670   Section        0  test.o(.text.DrawTestPage)
    [Anonymous Symbol]                       0x0800071c   Section        0  gui.o(.text.Draw_Triangel)
    [Anonymous Symbol]                       0x08000780   Section        0  test.o(.text.English_Font_test)
    [Anonymous Symbol]                       0x08000894   Section        0  gui.o(.text.Fill_Triangel)
    [Anonymous Symbol]                       0x08000b80   Section        0  gui.o(.text.GUI_DrawFont16)
    [Anonymous Symbol]                       0x08000d50   Section        0  gui.o(.text.GUI_DrawFont24)
    [Anonymous Symbol]                       0x08000f18   Section        0  gui.o(.text.GUI_DrawFont32)
    [Anonymous Symbol]                       0x080010e8   Section        0  gui.o(.text.GUI_DrawPoint)
    [Anonymous Symbol]                       0x08001110   Section        0  gui.o(.text.Gui_Drawbmp16)
    [Anonymous Symbol]                       0x0800119c   Section        0  gui.o(.text.Gui_StrCenter)
    [Anonymous Symbol]                       0x0800121c   Section        0  stm32f1xx_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x08001220   Section        0  tft.o(.text.LCD_Clear)
    [Anonymous Symbol]                       0x080012a0   Section        0  gui.o(.text.LCD_DrawFillRectangle)
    [Anonymous Symbol]                       0x080012e0   Section        0  gui.o(.text.LCD_DrawLine)
    [Anonymous Symbol]                       0x08001404   Section        0  tft.o(.text.LCD_DrawPoint)
    [Anonymous Symbol]                       0x08001430   Section        0  gui.o(.text.LCD_DrawRectangle)
    [Anonymous Symbol]                       0x08001490   Section        0  gui.o(.text.LCD_Fill)
    [Anonymous Symbol]                       0x08001550   Section        0  tft.o(.text.LCD_SetCursor)
    [Anonymous Symbol]                       0x08001570   Section        0  tft.o(.text.LCD_SetWindows)
    [Anonymous Symbol]                       0x08001604   Section        0  gui.o(.text.LCD_ShowChar)
    [Anonymous Symbol]                       0x0800182c   Section        0  tft.o(.text.LCD_WR_DATA)
    [Anonymous Symbol]                       0x0800186c   Section        0  tft.o(.text.LCD_WR_REG)
    [Anonymous Symbol]                       0x080018ac   Section        0  tft.o(.text.LCD_WriteRAM_Prepare)
    [Anonymous Symbol]                       0x080018c0   Section        0  tft.o(.text.LCD_WriteReg)
    [Anonymous Symbol]                       0x080018e4   Section        0  tft.o(.text.LCD_direction)
    LL_AHB1_GRP1_EnableClock                 0x08001995   Thumb Code    34  dma.o(.text.LL_AHB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001994   Section        0  dma.o(.text.LL_AHB1_GRP1_EnableClock)
    LL_APB1_GRP1_EnableClock                 0x080019b9   Thumb Code    34  main.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x080019b8   Section        0  main.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB1_GRP1_EnableClock                 0x080019dd   Thumb Code    34  spi.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x080019dc   Section        0  spi.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB1_GRP1_ForceReset                  0x08001a01   Thumb Code    24  stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset)
    [Anonymous Symbol]                       0x08001a00   Section        0  stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset)
    LL_APB1_GRP1_ReleaseReset                0x08001a19   Thumb Code    24  stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset)
    [Anonymous Symbol]                       0x08001a18   Section        0  stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset)
    LL_APB2_GRP1_EnableClock                 0x08001a31   Thumb Code    34  main.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001a30   Section        0  main.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08001a55   Thumb Code    34  gpio.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001a54   Section        0  gpio.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08001a79   Thumb Code    34  spi.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001a78   Section        0  spi.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08001a9d   Thumb Code    34  usart.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08001a9c   Section        0  usart.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_ForceReset                  0x08001ac1   Thumb Code    24  stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset)
    [Anonymous Symbol]                       0x08001ac0   Section        0  stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset)
    LL_APB2_GRP1_ReleaseReset                0x08001ad9   Thumb Code    24  stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset)
    [Anonymous Symbol]                       0x08001ad8   Section        0  stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset)
    LL_DMA_ClearFlag_GI4                     0x08001af1   Thumb Code    16  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_GI4)
    [Anonymous Symbol]                       0x08001af0   Section        0  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_GI4)
    LL_DMA_ClearFlag_GI5                     0x08001b01   Thumb Code    16  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_GI5)
    [Anonymous Symbol]                       0x08001b00   Section        0  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_GI5)
    LL_DMA_ClearFlag_HT4                     0x08001b11   Thumb Code    16  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_HT4)
    [Anonymous Symbol]                       0x08001b10   Section        0  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_HT4)
    LL_DMA_ClearFlag_HT5                     0x08001b21   Thumb Code    16  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_HT5)
    [Anonymous Symbol]                       0x08001b20   Section        0  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_HT5)
    LL_DMA_ClearFlag_TC4                     0x08001b31   Thumb Code    16  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TC4)
    [Anonymous Symbol]                       0x08001b30   Section        0  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TC4)
    LL_DMA_ClearFlag_TC5                     0x08001b41   Thumb Code    16  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TC5)
    [Anonymous Symbol]                       0x08001b40   Section        0  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TC5)
    LL_DMA_ClearFlag_TE4                     0x08001b51   Thumb Code    16  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TE4)
    [Anonymous Symbol]                       0x08001b50   Section        0  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TE4)
    LL_DMA_ClearFlag_TE5                     0x08001b61   Thumb Code    16  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TE5)
    [Anonymous Symbol]                       0x08001b60   Section        0  stm32f1xx_it.o(.text.LL_DMA_ClearFlag_TE5)
    LL_DMA_ConfigTransfer                    0x08001b71   Thumb Code    54  tft_ll.o(.text.LL_DMA_ConfigTransfer)
    [Anonymous Symbol]                       0x08001b70   Section        0  tft_ll.o(.text.LL_DMA_ConfigTransfer)
    LL_DMA_DisableChannel                    0x08001ba9   Thumb Code    36  tft_ll.o(.text.LL_DMA_DisableChannel)
    [Anonymous Symbol]                       0x08001ba8   Section        0  tft_ll.o(.text.LL_DMA_DisableChannel)
    LL_DMA_DisableIT_HT                      0x08001bcd   Thumb Code    36  tft_ll.o(.text.LL_DMA_DisableIT_HT)
    [Anonymous Symbol]                       0x08001bcc   Section        0  tft_ll.o(.text.LL_DMA_DisableIT_HT)
    LL_DMA_DisableIT_TC                      0x08001bf1   Thumb Code    36  tft_ll.o(.text.LL_DMA_DisableIT_TC)
    [Anonymous Symbol]                       0x08001bf0   Section        0  tft_ll.o(.text.LL_DMA_DisableIT_TC)
    LL_DMA_DisableIT_TE                      0x08001c15   Thumb Code    36  tft_ll.o(.text.LL_DMA_DisableIT_TE)
    [Anonymous Symbol]                       0x08001c14   Section        0  tft_ll.o(.text.LL_DMA_DisableIT_TE)
    LL_DMA_EnableChannel                     0x08001c39   Thumb Code    36  tft_ll.o(.text.LL_DMA_EnableChannel)
    [Anonymous Symbol]                       0x08001c38   Section        0  tft_ll.o(.text.LL_DMA_EnableChannel)
    LL_DMA_EnableIT_TC                       0x08001c5d   Thumb Code    36  tft_ll.o(.text.LL_DMA_EnableIT_TC)
    [Anonymous Symbol]                       0x08001c5c   Section        0  tft_ll.o(.text.LL_DMA_EnableIT_TC)
    LL_DMA_EnableIT_TE                       0x08001c81   Thumb Code    36  tft_ll.o(.text.LL_DMA_EnableIT_TE)
    [Anonymous Symbol]                       0x08001c80   Section        0  tft_ll.o(.text.LL_DMA_EnableIT_TE)
    LL_DMA_SetChannelPriorityLevel           0x08001ca5   Thumb Code    52  spi.o(.text.LL_DMA_SetChannelPriorityLevel)
    [Anonymous Symbol]                       0x08001ca4   Section        0  spi.o(.text.LL_DMA_SetChannelPriorityLevel)
    LL_DMA_SetDataLength                     0x08001cd9   Thumb Code    58  tft_ll.o(.text.LL_DMA_SetDataLength)
    [Anonymous Symbol]                       0x08001cd8   Section        0  tft_ll.o(.text.LL_DMA_SetDataLength)
    LL_DMA_SetDataTransferDirection          0x08001d15   Thumb Code    54  spi.o(.text.LL_DMA_SetDataTransferDirection)
    [Anonymous Symbol]                       0x08001d14   Section        0  spi.o(.text.LL_DMA_SetDataTransferDirection)
    LL_DMA_SetMemoryAddress                  0x08001d4d   Thumb Code    36  tft_ll.o(.text.LL_DMA_SetMemoryAddress)
    [Anonymous Symbol]                       0x08001d4c   Section        0  tft_ll.o(.text.LL_DMA_SetMemoryAddress)
    LL_DMA_SetMemoryIncMode                  0x08001d71   Thumb Code    52  spi.o(.text.LL_DMA_SetMemoryIncMode)
    [Anonymous Symbol]                       0x08001d70   Section        0  spi.o(.text.LL_DMA_SetMemoryIncMode)
    LL_DMA_SetMemorySize                     0x08001da5   Thumb Code    52  spi.o(.text.LL_DMA_SetMemorySize)
    [Anonymous Symbol]                       0x08001da4   Section        0  spi.o(.text.LL_DMA_SetMemorySize)
    LL_DMA_SetMode                           0x08001dd9   Thumb Code    52  spi.o(.text.LL_DMA_SetMode)
    [Anonymous Symbol]                       0x08001dd8   Section        0  spi.o(.text.LL_DMA_SetMode)
    LL_DMA_SetPeriphAddress                  0x08001e0d   Thumb Code    36  tft_ll.o(.text.LL_DMA_SetPeriphAddress)
    [Anonymous Symbol]                       0x08001e0c   Section        0  tft_ll.o(.text.LL_DMA_SetPeriphAddress)
    LL_DMA_SetPeriphIncMode                  0x08001e31   Thumb Code    52  spi.o(.text.LL_DMA_SetPeriphIncMode)
    [Anonymous Symbol]                       0x08001e30   Section        0  spi.o(.text.LL_DMA_SetPeriphIncMode)
    LL_DMA_SetPeriphSize                     0x08001e65   Thumb Code    52  spi.o(.text.LL_DMA_SetPeriphSize)
    [Anonymous Symbol]                       0x08001e64   Section        0  spi.o(.text.LL_DMA_SetPeriphSize)
    LL_EXTI_DisableEvent_0_31                0x08001e99   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31)
    [Anonymous Symbol]                       0x08001e98   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31)
    LL_EXTI_DisableFallingTrig_0_31          0x08001eb1   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31)
    [Anonymous Symbol]                       0x08001eb0   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31)
    LL_EXTI_DisableIT_0_31                   0x08001ec9   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31)
    [Anonymous Symbol]                       0x08001ec8   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31)
    LL_EXTI_DisableRisingTrig_0_31           0x08001ee1   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31)
    [Anonymous Symbol]                       0x08001ee0   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31)
    LL_EXTI_EnableEvent_0_31                 0x08001ef9   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31)
    [Anonymous Symbol]                       0x08001ef8   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31)
    LL_EXTI_EnableFallingTrig_0_31           0x08001f11   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31)
    [Anonymous Symbol]                       0x08001f10   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31)
    LL_EXTI_EnableIT_0_31                    0x08001f29   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31)
    [Anonymous Symbol]                       0x08001f28   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31)
    LL_EXTI_EnableRisingTrig_0_31            0x08001f41   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31)
    [Anonymous Symbol]                       0x08001f40   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31)
    [Anonymous Symbol]                       0x08001f58   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_Init)
    LL_FLASH_GetLatency                      0x08002101   Thumb Code    16  main.o(.text.LL_FLASH_GetLatency)
    [Anonymous Symbol]                       0x08002100   Section        0  main.o(.text.LL_FLASH_GetLatency)
    LL_FLASH_SetLatency                      0x08002111   Thumb Code    28  main.o(.text.LL_FLASH_SetLatency)
    [Anonymous Symbol]                       0x08002110   Section        0  main.o(.text.LL_FLASH_SetLatency)
    LL_GPIO_AF_Remap_SWJ_NOJTAG              0x0800212d   Thumb Code    24  main.o(.text.LL_GPIO_AF_Remap_SWJ_NOJTAG)
    [Anonymous Symbol]                       0x0800212c   Section        0  main.o(.text.LL_GPIO_AF_Remap_SWJ_NOJTAG)
    LL_GPIO_AF_SetEXTISource                 0x08002145   Thumb Code    56  gpio.o(.text.LL_GPIO_AF_SetEXTISource)
    [Anonymous Symbol]                       0x08002144   Section        0  gpio.o(.text.LL_GPIO_AF_SetEXTISource)
    [Anonymous Symbol]                       0x0800217c   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_GPIO_ResetOutputPin                   0x080023ad   Thumb Code    18  gpio.o(.text.LL_GPIO_ResetOutputPin)
    [Anonymous Symbol]                       0x080023ac   Section        0  gpio.o(.text.LL_GPIO_ResetOutputPin)
    LL_GPIO_ResetOutputPin                   0x080023c1   Thumb Code    18  tft_ll.o(.text.LL_GPIO_ResetOutputPin)
    [Anonymous Symbol]                       0x080023c0   Section        0  tft_ll.o(.text.LL_GPIO_ResetOutputPin)
    LL_GPIO_SetOutputPin                     0x080023d5   Thumb Code    18  main.o(.text.LL_GPIO_SetOutputPin)
    [Anonymous Symbol]                       0x080023d4   Section        0  main.o(.text.LL_GPIO_SetOutputPin)
    LL_GPIO_SetOutputPin                     0x080023e9   Thumb Code    18  gpio.o(.text.LL_GPIO_SetOutputPin)
    [Anonymous Symbol]                       0x080023e8   Section        0  gpio.o(.text.LL_GPIO_SetOutputPin)
    LL_GPIO_SetOutputPin                     0x080023fd   Thumb Code    18  tft_ll.o(.text.LL_GPIO_SetOutputPin)
    [Anonymous Symbol]                       0x080023fc   Section        0  tft_ll.o(.text.LL_GPIO_SetOutputPin)
    LL_GPIO_SetPinMode                       0x08002411   Thumb Code    52  gpio.o(.text.LL_GPIO_SetPinMode)
    [Anonymous Symbol]                       0x08002410   Section        0  gpio.o(.text.LL_GPIO_SetPinMode)
    LL_GPIO_SetPinMode                       0x08002445   Thumb Code    52  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    [Anonymous Symbol]                       0x08002444   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    LL_GPIO_SetPinOutputType                 0x08002479   Thumb Code    52  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    [Anonymous Symbol]                       0x08002478   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    LL_GPIO_SetPinPull                       0x080024ad   Thumb Code    42  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    [Anonymous Symbol]                       0x080024ac   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    LL_GPIO_SetPinSpeed                      0x080024d9   Thumb Code    52  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    [Anonymous Symbol]                       0x080024d8   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    [Anonymous Symbol]                       0x0800250c   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_StructInit)
    LL_GPIO_TogglePin                        0x08002535   Thumb Code    40  stm32f1xx_it.o(.text.LL_GPIO_TogglePin)
    [Anonymous Symbol]                       0x08002534   Section        0  stm32f1xx_it.o(.text.LL_GPIO_TogglePin)
    [Anonymous Symbol]                       0x0800255c   Section        0  stm32f1xx_ll_utils.o(.text.LL_Init1msTick)
    LL_InitTick                              0x08002571   Thumb Code    54  stm32f1xx_ll_utils.o(.text.LL_InitTick)
    [Anonymous Symbol]                       0x08002570   Section        0  stm32f1xx_ll_utils.o(.text.LL_InitTick)
    LL_PWR_EnableBkUpAccess                  0x080025a9   Thumb Code    18  main.o(.text.LL_PWR_EnableBkUpAccess)
    [Anonymous Symbol]                       0x080025a8   Section        0  main.o(.text.LL_PWR_EnableBkUpAccess)
    LL_RCC_EnableRTC                         0x080025bd   Thumb Code    18  main.o(.text.LL_RCC_EnableRTC)
    [Anonymous Symbol]                       0x080025bc   Section        0  main.o(.text.LL_RCC_EnableRTC)
    LL_RCC_GetAHBPrescaler                   0x080025d1   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler)
    [Anonymous Symbol]                       0x080025d0   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler)
    LL_RCC_GetAPB1Prescaler                  0x080025e1   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler)
    [Anonymous Symbol]                       0x080025e0   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler)
    LL_RCC_GetAPB2Prescaler                  0x080025f1   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler)
    [Anonymous Symbol]                       0x080025f0   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler)
    LL_RCC_GetSysClkSource                   0x08002601   Thumb Code    16  main.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08002600   Section        0  main.o(.text.LL_RCC_GetSysClkSource)
    LL_RCC_GetSysClkSource                   0x08002611   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08002610   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08002620   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_RCC_HSE_Enable                        0x08002659   Thumb Code    18  main.o(.text.LL_RCC_HSE_Enable)
    [Anonymous Symbol]                       0x08002658   Section        0  main.o(.text.LL_RCC_HSE_Enable)
    LL_RCC_HSE_IsReady                       0x0800266d   Thumb Code    16  main.o(.text.LL_RCC_HSE_IsReady)
    [Anonymous Symbol]                       0x0800266c   Section        0  main.o(.text.LL_RCC_HSE_IsReady)
    LL_RCC_PLL_ConfigDomain_SYS              0x0800267d   Thumb Code    38  main.o(.text.LL_RCC_PLL_ConfigDomain_SYS)
    [Anonymous Symbol]                       0x0800267c   Section        0  main.o(.text.LL_RCC_PLL_ConfigDomain_SYS)
    LL_RCC_PLL_Enable                        0x080026a5   Thumb Code    18  main.o(.text.LL_RCC_PLL_Enable)
    [Anonymous Symbol]                       0x080026a4   Section        0  main.o(.text.LL_RCC_PLL_Enable)
    LL_RCC_PLL_GetMainSource                 0x080026b9   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource)
    [Anonymous Symbol]                       0x080026b8   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource)
    LL_RCC_PLL_GetMultiplicator              0x080026c9   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator)
    [Anonymous Symbol]                       0x080026c8   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator)
    LL_RCC_PLL_GetPrediv                     0x080026d9   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetPrediv)
    [Anonymous Symbol]                       0x080026d8   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetPrediv)
    LL_RCC_PLL_IsReady                       0x080026e9   Thumb Code    16  main.o(.text.LL_RCC_PLL_IsReady)
    [Anonymous Symbol]                       0x080026e8   Section        0  main.o(.text.LL_RCC_PLL_IsReady)
    LL_RCC_SetAHBPrescaler                   0x080026f9   Thumb Code    28  main.o(.text.LL_RCC_SetAHBPrescaler)
    [Anonymous Symbol]                       0x080026f8   Section        0  main.o(.text.LL_RCC_SetAHBPrescaler)
    LL_RCC_SetAPB1Prescaler                  0x08002715   Thumb Code    28  main.o(.text.LL_RCC_SetAPB1Prescaler)
    [Anonymous Symbol]                       0x08002714   Section        0  main.o(.text.LL_RCC_SetAPB1Prescaler)
    LL_RCC_SetAPB2Prescaler                  0x08002731   Thumb Code    28  main.o(.text.LL_RCC_SetAPB2Prescaler)
    [Anonymous Symbol]                       0x08002730   Section        0  main.o(.text.LL_RCC_SetAPB2Prescaler)
    LL_RCC_SetSysClkSource                   0x0800274d   Thumb Code    28  main.o(.text.LL_RCC_SetSysClkSource)
    [Anonymous Symbol]                       0x0800274c   Section        0  main.o(.text.LL_RCC_SetSysClkSource)
    LL_SPI_DMA_GetRegAddr                    0x08002769   Thumb Code    12  tft_ll.o(.text.LL_SPI_DMA_GetRegAddr)
    [Anonymous Symbol]                       0x08002768   Section        0  tft_ll.o(.text.LL_SPI_DMA_GetRegAddr)
    [Anonymous Symbol]                       0x08002774   Section        0  stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit)
    LL_SPI_DisableDMAReq_RX                  0x08002845   Thumb Code    18  tft_ll.o(.text.LL_SPI_DisableDMAReq_RX)
    [Anonymous Symbol]                       0x08002844   Section        0  tft_ll.o(.text.LL_SPI_DisableDMAReq_RX)
    LL_SPI_DisableDMAReq_TX                  0x08002859   Thumb Code    18  tft_ll.o(.text.LL_SPI_DisableDMAReq_TX)
    [Anonymous Symbol]                       0x08002858   Section        0  tft_ll.o(.text.LL_SPI_DisableDMAReq_TX)
    LL_SPI_DisableIT_ERR                     0x0800286d   Thumb Code    18  tft_ll.o(.text.LL_SPI_DisableIT_ERR)
    [Anonymous Symbol]                       0x0800286c   Section        0  tft_ll.o(.text.LL_SPI_DisableIT_ERR)
    LL_SPI_DisableIT_RXNE                    0x08002881   Thumb Code    18  spi_handler.o(.text.LL_SPI_DisableIT_RXNE)
    [Anonymous Symbol]                       0x08002880   Section        0  spi_handler.o(.text.LL_SPI_DisableIT_RXNE)
    LL_SPI_DisableIT_RXNE                    0x08002895   Thumb Code    18  tft_ll.o(.text.LL_SPI_DisableIT_RXNE)
    [Anonymous Symbol]                       0x08002894   Section        0  tft_ll.o(.text.LL_SPI_DisableIT_RXNE)
    LL_SPI_DisableIT_TXE                     0x080028a9   Thumb Code    18  spi_handler.o(.text.LL_SPI_DisableIT_TXE)
    [Anonymous Symbol]                       0x080028a8   Section        0  spi_handler.o(.text.LL_SPI_DisableIT_TXE)
    LL_SPI_DisableIT_TXE                     0x080028bd   Thumb Code    18  tft_ll.o(.text.LL_SPI_DisableIT_TXE)
    [Anonymous Symbol]                       0x080028bc   Section        0  tft_ll.o(.text.LL_SPI_DisableIT_TXE)
    LL_SPI_Enable                            0x080028d1   Thumb Code    18  spi.o(.text.LL_SPI_Enable)
    [Anonymous Symbol]                       0x080028d0   Section        0  spi.o(.text.LL_SPI_Enable)
    LL_SPI_EnableDMAReq_RX                   0x080028e5   Thumb Code    18  tft_ll.o(.text.LL_SPI_EnableDMAReq_RX)
    [Anonymous Symbol]                       0x080028e4   Section        0  tft_ll.o(.text.LL_SPI_EnableDMAReq_RX)
    LL_SPI_EnableDMAReq_TX                   0x080028f9   Thumb Code    18  tft_ll.o(.text.LL_SPI_EnableDMAReq_TX)
    [Anonymous Symbol]                       0x080028f8   Section        0  tft_ll.o(.text.LL_SPI_EnableDMAReq_TX)
    LL_SPI_EnableIT_RXNE                     0x0800290d   Thumb Code    18  tft_ll.o(.text.LL_SPI_EnableIT_RXNE)
    [Anonymous Symbol]                       0x0800290c   Section        0  tft_ll.o(.text.LL_SPI_EnableIT_RXNE)
    LL_SPI_EnableIT_TXE                      0x08002921   Thumb Code    18  tft_ll.o(.text.LL_SPI_EnableIT_TXE)
    [Anonymous Symbol]                       0x08002920   Section        0  tft_ll.o(.text.LL_SPI_EnableIT_TXE)
    [Anonymous Symbol]                       0x08002934   Section        0  stm32f1xx_ll_spi.o(.text.LL_SPI_Init)
    LL_SPI_IsActiveFlag_RXNE                 0x08002bdd   Thumb Code    16  spi_handler.o(.text.LL_SPI_IsActiveFlag_RXNE)
    [Anonymous Symbol]                       0x08002bdc   Section        0  spi_handler.o(.text.LL_SPI_IsActiveFlag_RXNE)
    LL_SPI_IsActiveFlag_TXE                  0x08002bed   Thumb Code    16  spi_handler.o(.text.LL_SPI_IsActiveFlag_TXE)
    [Anonymous Symbol]                       0x08002bec   Section        0  spi_handler.o(.text.LL_SPI_IsActiveFlag_TXE)
    LL_SPI_IsEnabled                         0x08002bfd   Thumb Code    16  stm32f1xx_ll_spi.o(.text.LL_SPI_IsEnabled)
    [Anonymous Symbol]                       0x08002bfc   Section        0  stm32f1xx_ll_spi.o(.text.LL_SPI_IsEnabled)
    LL_SPI_IsEnabledIT_RXNE                  0x08002c0d   Thumb Code    16  spi_handler.o(.text.LL_SPI_IsEnabledIT_RXNE)
    [Anonymous Symbol]                       0x08002c0c   Section        0  spi_handler.o(.text.LL_SPI_IsEnabledIT_RXNE)
    LL_SPI_IsEnabledIT_TXE                   0x08002c1d   Thumb Code    16  spi_handler.o(.text.LL_SPI_IsEnabledIT_TXE)
    [Anonymous Symbol]                       0x08002c1c   Section        0  spi_handler.o(.text.LL_SPI_IsEnabledIT_TXE)
    LL_SPI_ReceiveData8                      0x08002c2d   Thumb Code    12  tft_ll.o(.text.LL_SPI_ReceiveData8)
    [Anonymous Symbol]                       0x08002c2c   Section        0  tft_ll.o(.text.LL_SPI_ReceiveData8)
    LL_SPI_SetCRCPolynomial                  0x08002c39   Thumb Code    18  stm32f1xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial)
    [Anonymous Symbol]                       0x08002c38   Section        0  stm32f1xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial)
    LL_SPI_TransmitData8                     0x08002c4d   Thumb Code    26  tft_ll.o(.text.LL_SPI_TransmitData8)
    [Anonymous Symbol]                       0x08002c4c   Section        0  tft_ll.o(.text.LL_SPI_TransmitData8)
    LL_SYSTICK_EnableIT                      0x08002c69   Thumb Code    18  main.o(.text.LL_SYSTICK_EnableIT)
    [Anonymous Symbol]                       0x08002c68   Section        0  main.o(.text.LL_SYSTICK_EnableIT)
    [Anonymous Symbol]                       0x08002c7c   Section        0  stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_USART_ConfigAsyncMode                 0x08002c91   Thumb Code    28  usart.o(.text.LL_USART_ConfigAsyncMode)
    [Anonymous Symbol]                       0x08002c90   Section        0  usart.o(.text.LL_USART_ConfigAsyncMode)
    LL_USART_Enable                          0x08002cad   Thumb Code    18  usart.o(.text.LL_USART_Enable)
    [Anonymous Symbol]                       0x08002cac   Section        0  usart.o(.text.LL_USART_Enable)
    [Anonymous Symbol]                       0x08002cc0   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_Init)
    LL_USART_IsEnabled                       0x08002f69   Thumb Code    16  stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled)
    [Anonymous Symbol]                       0x08002f68   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled)
    LL_USART_SetBaudRate                     0x08002f79   Thumb Code    78  stm32f1xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    [Anonymous Symbol]                       0x08002f78   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    LL_USART_SetHWFlowCtrl                   0x08002fc9   Thumb Code    26  stm32f1xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl)
    [Anonymous Symbol]                       0x08002fc8   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl)
    LL_USART_SetStopBitsLength               0x08002fe5   Thumb Code    26  stm32f1xx_ll_usart.o(.text.LL_USART_SetStopBitsLength)
    [Anonymous Symbol]                       0x08002fe4   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_SetStopBitsLength)
    [Anonymous Symbol]                       0x08003000   Section        0  stm32f1xx_ll_utils.o(.text.LL_mDelay)
    [Anonymous Symbol]                       0x0800304c   Section        0  tft.o(.text.Lcd_WriteData_16Bit)
    [Anonymous Symbol]                       0x08003088   Section        0  dma.o(.text.MX_DMA_Init)
    [Anonymous Symbol]                       0x08003108   Section        0  gpio.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x080032a8   Section        0  spi.o(.text.MX_SPI1_Init)
    [Anonymous Symbol]                       0x08003400   Section        0  spi.o(.text.MX_SPI2_Init)
    [Anonymous Symbol]                       0x08003558   Section        0  usart.o(.text.MX_USART1_UART_Init)
    [Anonymous Symbol]                       0x080035f8   Section        0  stm32f1xx_it.o(.text.MemManage_Handler)
    [Anonymous Symbol]                       0x080035fc   Section        0  stm32f1xx_it.o(.text.NMI_Handler)
    NVIC_EncodePriority                      0x08003601   Thumb Code   108  main.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x08003600   Section        0  main.o(.text.NVIC_EncodePriority)
    NVIC_EncodePriority                      0x0800366d   Thumb Code   108  dma.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x0800366c   Section        0  dma.o(.text.NVIC_EncodePriority)
    NVIC_EncodePriority                      0x080036d9   Thumb Code   108  spi.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x080036d8   Section        0  spi.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x08003744   Section        0  stm32f1xx_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08003748   Section        0  test.o(.text.Pic_test)
    [Anonymous Symbol]                       0x080037f8   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    [Anonymous Symbol]                       0x08003820   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq)
    [Anonymous Symbol]                       0x08003844   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq)
    [Anonymous Symbol]                       0x08003868   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq)
    [Anonymous Symbol]                       0x080038c0   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    [Anonymous Symbol]                       0x08003928   Section        0  test.o(.text.Rotate_Test)
    [Anonymous Symbol]                       0x080039d8   Section        0  stm32f1xx_it.o(.text.SPI1_IRQHandler)
    [Anonymous Symbol]                       0x080039e8   Section        0  stm32f1xx_it.o(.text.SPI2_IRQHandler)
    [Anonymous Symbol]                       0x08003a08   Section        0  stm32f1xx_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08003a0c   Section        0  gui.o(.text.Show_Str)
    [Anonymous Symbol]                       0x08003c48   Section        0  stm32f1xx_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08003c8c   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x08003d20   Section        0  system_stm32f1xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08003d24   Section        0  test.o(.text.Test_Circle)
    [Anonymous Symbol]                       0x08003e48   Section        0  test.o(.text.Test_Color)
    [Anonymous Symbol]                       0x08003f74   Section        0  test.o(.text.Test_FillRec)
    [Anonymous Symbol]                       0x080040c0   Section        0  test.o(.text.Test_Triangle)
    [Anonymous Symbol]                       0x08004240   Section        0  stm32f1xx_it.o(.text.UsageFault_Handler)
    __NVIC_EnableIRQ                         0x08004245   Thumb Code    48  dma.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08004244   Section        0  dma.o(.text.__NVIC_EnableIRQ)
    __NVIC_EnableIRQ                         0x08004275   Thumb Code    48  spi.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x08004274   Section        0  spi.o(.text.__NVIC_EnableIRQ)
    __NVIC_GetPriorityGrouping               0x080042a5   Thumb Code    16  main.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x080042a4   Section        0  main.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_GetPriorityGrouping               0x080042b5   Thumb Code    16  dma.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x080042b4   Section        0  dma.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_GetPriorityGrouping               0x080042c5   Thumb Code    16  spi.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x080042c4   Section        0  spi.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriority                       0x080042d5   Thumb Code    66  main.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x080042d4   Section        0  main.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x08004319   Thumb Code    66  dma.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x08004318   Section        0  dma.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriority                       0x0800435d   Thumb Code    66  spi.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x0800435c   Section        0  spi.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriorityGrouping               0x080043a1   Thumb Code    60  main.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x080043a0   Section        0  main.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x080043dc   Section        0  gui.o(.text._draw_circle_8)
    _swap                                    0x080044b9   Thumb Code    34  gui.o(.text._swap)
    [Anonymous Symbol]                       0x080044b8   Section        0  gui.o(.text._swap)
    [Anonymous Symbol]                       0x080044dc   Section        0  main.o(.text.assert_failed)
    [Anonymous Symbol]                       0x080044e8   Section        0  spi_handler.o(.text.createHandler)
    [Anonymous Symbol]                       0x08004528   Section        0  gpio.o(.text.deInitParal_TFT)
    [Anonymous Symbol]                       0x080045a4   Section        0  gpio.o(.text.deInitSPI_TFT)
    [Anonymous Symbol]                       0x080045d8   Section        0  tft_ll.o(.text.disableTFTCommunication)
    [Anonymous Symbol]                       0x080045ec   Section        0  tft_ll.o(.text.enableTFTCommunication)
    [Anonymous Symbol]                       0x08004600   Section        0  spi_handler.o(.text.findHandler)
    [Anonymous Symbol]                       0x08004654   Section        0  spi_handler.o(.text.findOrCreateHandler)
    [Anonymous Symbol]                       0x080046e4   Section        0  tft_ll.o(.text.finishTransmission)
    [Anonymous Symbol]                       0x080047d8   Section        0  gui.o(.text.gui_circle)
    [Anonymous Symbol]                       0x080048d8   Section        0  tft_ll.o(.text.initDMA)
    [Anonymous Symbol]                       0x08004a1c   Section        0  fifo.o(.text.initFifo)
    [Anonymous Symbol]                       0x08004aa4   Section        0  gpio.o(.text.initParal_TFT)
    [Anonymous Symbol]                       0x08004b54   Section        0  tft_ll.o(.text.initPerifTFT)
    [Anonymous Symbol]                       0x08004b90   Section        0  gpio.o(.text.initSPI_TFT)
    [Anonymous Symbol]                       0x08004c14   Section        0  tft.o(.text.initTFT)
    [Anonymous Symbol]                       0x08005034   Section        0  tft_ll.o(.text.initTFT_LL)
    [Anonymous Symbol]                       0x080050e8   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x080051ac   Section        0  test.o(.text.main_test)
    [Anonymous Symbol]                       0x08005270   Section        0  fifo.o(.text.pop)
    [Anonymous Symbol]                       0x080052f4   Section        0  tft_ll.o(.text.processMsg)
    [Anonymous Symbol]                       0x080053dc   Section        0  fifo.o(.text.push)
    [Anonymous Symbol]                       0x0800545c   Section        0  tft_ll.o(.text.rebootTFT)
    [Anonymous Symbol]                       0x08005490   Section        0  spi_handler.o(.text.registerHandler)
    [Anonymous Symbol]                       0x08005544   Section        0  tft_ll.o(.text.selectCommand)
    [Anonymous Symbol]                       0x08005558   Section        0  tft_ll.o(.text.selectData)
    [Anonymous Symbol]                       0x0800556c   Section        0  spi_handler.o(.text.spiInterruptHandler)
    [Anonymous Symbol]                       0x080056bc   Section        0  tft_ll.o(.text.tftSpiHandler)
    [Anonymous Symbol]                       0x08005788   Section        0  tft_ll.o(.text.transCurMsg)
    [Anonymous Symbol]                       0x08005924   Section        0  tft_ll.o(.text.transNewMsg)
    .L__const.Rotate_Test.Direction          0x08005b2c   Data          16  test.o(.rodata..L__const.Rotate_Test.Direction)
    CHANNEL_OFFSET_TAB                       0x08005b54   Data           7  spi.o(.rodata.CHANNEL_OFFSET_TAB)
    [Anonymous Symbol]                       0x08005b54   Section        0  spi.o(.rodata.CHANNEL_OFFSET_TAB)
    CHANNEL_OFFSET_TAB                       0x08005b5b   Data           7  tft_ll.o(.rodata.CHANNEL_OFFSET_TAB)
    [Anonymous Symbol]                       0x08005b5b   Section        0  tft_ll.o(.rodata.CHANNEL_OFFSET_TAB)
    .L.str                                   0x08007246   Data          56  stm32f1xx_ll_gpio.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08007246   Section        0  stm32f1xx_ll_gpio.o(.rodata.str1.1)
    .L.str                                   0x0800727e   Data          56  stm32f1xx_ll_exti.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800727e   Section        0  stm32f1xx_ll_exti.o(.rodata.str1.1)
    .L.str                                   0x080072b6   Data          55  stm32f1xx_ll_spi.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080072b6   Section        0  stm32f1xx_ll_spi.o(.rodata.str1.1)
    .L.str                                   0x080072ed   Data          57  stm32f1xx_ll_usart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080072ed   Section        0  stm32f1xx_ll_usart.o(.rodata.str1.1)
    .L.str.7                                 0x08007326   Data           5  test.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08007326   Section        0  test.o(.rodata.str1.1)
    .L.str.9                                 0x0800732b   Data           6  test.o(.rodata.str1.1)
    .L.str.8                                 0x08007331   Data           7  test.o(.rodata.str1.1)
    .L.str.15                                0x08007338   Data          30  test.o(.rodata.str1.1)
    .L.str.18                                0x08007356   Data          30  test.o(.rodata.str1.1)
    .L.str.4                                 0x0800738e   Data          21  test.o(.rodata.str1.1)
    .L.str.5                                 0x080073ba   Data          27  test.o(.rodata.str1.1)
    .L.str.14                                0x080073d5   Data          42  test.o(.rodata.str1.1)
    .L.str.17                                0x080073ff   Data          42  test.o(.rodata.str1.1)
    .L.str.13                                0x08007429   Data          42  test.o(.rodata.str1.1)
    .L.str.16                                0x08007453   Data          42  test.o(.rodata.str1.1)
    .L.str.26                                0x0800747d   Data           3  test.o(.rodata.str1.1)
    .L.str                                   0x08007480   Data          23  test.o(.rodata.str1.1)
    .L.str.6                                 0x08007497   Data           8  test.o(.rodata.str1.1)
    .L.str.22                                0x0800749f   Data          22  test.o(.rodata.str1.1)
    .L.str.2                                 0x080074ac   Data           9  test.o(.rodata.str1.1)
    .L.str.31                                0x080074b5   Data          19  test.o(.rodata.str1.1)
    .L.str.25                                0x080074c8   Data          19  test.o(.rodata.str1.1)
    .L.str.12                                0x080074db   Data          19  test.o(.rodata.str1.1)
    .L.str.20                                0x080074ee   Data          19  test.o(.rodata.str1.1)
    .L.str.23                                0x08007501   Data          21  test.o(.rodata.str1.1)
    .L.str.19                                0x08007516   Data          27  test.o(.rodata.str1.1)
    .L.str.11                                0x08007531   Data          22  test.o(.rodata.str1.1)
    .L.str.10                                0x08007547   Data          22  test.o(.rodata.str1.1)
    .L.str.24                                0x0800755d   Data          15  test.o(.rodata.str1.1)
    .L.str.1                                 0x0800756c   Data          21  test.o(.rodata.str1.1)
    .L.str.3                                 0x08007574   Data          13  test.o(.rodata.str1.1)
    .L.str.21                                0x08007581   Data          33  test.o(.rodata.str1.1)
    .bss                                     0x20000018   Section       96  libspace.o(.bss)
    Heap_Mem                                 0x200000b0   Data         512  startup_stm32f103xe.o(HEAP)
    HEAP                                     0x200000b0   Section      512  startup_stm32f103xe.o(HEAP)
    Stack_Mem                                0x200002b0   Data        1024  startup_stm32f103xe.o(STACK)
    STACK                                    0x200002b0   Section     1024  startup_stm32f103xe.o(STACK)
    __initial_sp                             0x200006b0   Data           0  startup_stm32f103xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _mutex_acquire                            - Undefined Weak Reference
    _mutex_free                               - Undefined Weak Reference
    _mutex_release                            - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000130   Number         0  startup_stm32f103xe.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f103xe.o(RESET)
    __Vectors_End                            0x08000130   Data           0  startup_stm32f103xe.o(RESET)
    __main                                   0x08000131   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000139   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000147   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x0800016d   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000189   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x080001a5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_2                     0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000007)
    __rt_lib_init_preinit_1                  0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_relocate_pie_1             0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_alloca_1                   0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_rand_1                     0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_return                     0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x080001b1   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x080001b5   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x080001b5   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x080001b5   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x080001bb   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x080001bb   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x080001bf   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001bf   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001c7   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001c9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001c9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001cd   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x080001d5   Thumb Code     8  startup_stm32f103xe.o(.text)
    ADC1_2_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    ADC3_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    CAN1_RX1_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    CAN1_SCE_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel1_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel2_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel3_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel4_5_IRQHandler               0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI0_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI15_10_IRQHandler                     0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI1_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI2_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI3_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI4_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI9_5_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    FLASH_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    FSMC_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C1_ER_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C1_EV_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C2_ER_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C2_EV_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    PVD_IRQHandler                           0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    RCC_IRQHandler                           0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    RTC_Alarm_IRQHandler                     0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    RTC_IRQHandler                           0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    SDIO_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    SPI3_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TAMPER_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_BRK_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_CC_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_UP_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM2_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM3_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM4_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM5_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM6_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM7_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_BRK_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_CC_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_UP_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    UART4_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    UART5_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USART1_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USART2_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USART3_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USBWakeUp_IRQHandler                     0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    WWDG_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    __user_initial_stackheap                 0x080001f1   Thumb Code     0  startup_stm32f103xe.o(.text)
    malloc                                   0x08000215   Thumb Code    94  h1_alloc.o(.text)
    free                                     0x08000273   Thumb Code    78  h1_free.o(.text)
    strlen                                   0x080002c1   Thumb Code    62  strlen.o(.text)
    __aeabi_memclr4                          0x080002ff   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080002ff   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080002ff   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x08000303   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0800034d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x0800034f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000351   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_descriptor                     0x08000355   Thumb Code     8  rt_heap_descriptor_intlibspace.o(.text)
    __use_no_heap                            0x0800035d   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x0800035f   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x08000361   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x08000363   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x08000365   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x08000387   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x0800038d   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x080003eb   Thumb Code    10  h1_init.o(.text)
    __Heap_DescSize                          0x080003f5   Thumb Code     4  h1_init.o(.text)
    __user_libspace                          0x080003f9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080003f9   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x080003f9   Thumb Code     0  libspace.o(.text)
    __Heap_ProvideMemory                     0x08000401   Thumb Code    52  h1_extend.o(.text)
    _maybe_terminate_alloc                   0x08000401   Thumb Code     0  maybetermalloc1.o(.text)
    __rt_SIGRTMEM                            0x08000435   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __I$use$semihosting                      0x08000443   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000443   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000445   Thumb Code     0  indicate_semi.o(.text)
    __user_setup_stackheap                   0x08000445   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800048f   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x080004a1   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTMEM_inner                      0x080004ad   Thumb Code    22  defsig_rtmem_inner.o(.text)
    _sys_exit                                0x080004fd   Thumb Code     8  sys_exit.o(.text)
    __default_signal_display                 0x08000509   Thumb Code    50  defsig_general.o(.text)
    _ttywrch                                 0x0800053b   Thumb Code    14  sys_wrch.o(.text)
    BusFault_Handler                         0x08000549   Thumb Code     4  stm32f1xx_it.o(.text.BusFault_Handler)
    Chinese_Font_test                        0x0800054d   Thumb Code   190  test.o(.text.Chinese_Font_test)
    DMA1_Channel2_IRQHandler                 0x0800060d   Thumb Code     2  stm32f1xx_it.o(.text.DMA1_Channel2_IRQHandler)
    DMA1_Channel3_IRQHandler                 0x08000611   Thumb Code     2  stm32f1xx_it.o(.text.DMA1_Channel3_IRQHandler)
    DMA1_Channel4_IRQHandler                 0x08000615   Thumb Code    44  stm32f1xx_it.o(.text.DMA1_Channel4_IRQHandler)
    DMA1_Channel5_IRQHandler                 0x08000641   Thumb Code    44  stm32f1xx_it.o(.text.DMA1_Channel5_IRQHandler)
    DebugMon_Handler                         0x0800066d   Thumb Code     2  stm32f1xx_it.o(.text.DebugMon_Handler)
    DrawTestPage                             0x08000671   Thumb Code   172  test.o(.text.DrawTestPage)
    Draw_Triangel                            0x0800071d   Thumb Code   100  gui.o(.text.Draw_Triangel)
    English_Font_test                        0x08000781   Thumb Code   276  test.o(.text.English_Font_test)
    Fill_Triangel                            0x08000895   Thumb Code   748  gui.o(.text.Fill_Triangel)
    GUI_DrawFont16                           0x08000b81   Thumb Code   462  gui.o(.text.GUI_DrawFont16)
    GUI_DrawFont24                           0x08000d51   Thumb Code   454  gui.o(.text.GUI_DrawFont24)
    GUI_DrawFont32                           0x08000f19   Thumb Code   462  gui.o(.text.GUI_DrawFont32)
    GUI_DrawPoint                            0x080010e9   Thumb Code    40  gui.o(.text.GUI_DrawPoint)
    Gui_Drawbmp16                            0x08001111   Thumb Code   138  gui.o(.text.Gui_Drawbmp16)
    Gui_StrCenter                            0x0800119d   Thumb Code   126  gui.o(.text.Gui_StrCenter)
    HardFault_Handler                        0x0800121d   Thumb Code     4  stm32f1xx_it.o(.text.HardFault_Handler)
    LCD_Clear                                0x08001221   Thumb Code   126  tft.o(.text.LCD_Clear)
    LCD_DrawFillRectangle                    0x080012a1   Thumb Code    62  gui.o(.text.LCD_DrawFillRectangle)
    LCD_DrawLine                             0x080012e1   Thumb Code   292  gui.o(.text.LCD_DrawLine)
    LCD_DrawPoint                            0x08001405   Thumb Code    42  tft.o(.text.LCD_DrawPoint)
    LCD_DrawRectangle                        0x08001431   Thumb Code    96  gui.o(.text.LCD_DrawRectangle)
    LCD_Fill                                 0x08001491   Thumb Code   192  gui.o(.text.LCD_Fill)
    LCD_SetCursor                            0x08001551   Thumb Code    32  tft.o(.text.LCD_SetCursor)
    LCD_SetWindows                           0x08001571   Thumb Code   146  tft.o(.text.LCD_SetWindows)
    LCD_ShowChar                             0x08001605   Thumb Code   550  gui.o(.text.LCD_ShowChar)
    LCD_WR_DATA                              0x0800182d   Thumb Code    62  tft.o(.text.LCD_WR_DATA)
    LCD_WR_REG                               0x0800186d   Thumb Code    62  tft.o(.text.LCD_WR_REG)
    LCD_WriteRAM_Prepare                     0x080018ad   Thumb Code    20  tft.o(.text.LCD_WriteRAM_Prepare)
    LCD_WriteReg                             0x080018c1   Thumb Code    36  tft.o(.text.LCD_WriteReg)
    LCD_direction                            0x080018e5   Thumb Code   176  tft.o(.text.LCD_direction)
    LL_EXTI_Init                             0x08001f59   Thumb Code   422  stm32f1xx_ll_exti.o(.text.LL_EXTI_Init)
    LL_GPIO_Init                             0x0800217d   Thumb Code   560  stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_GPIO_StructInit                       0x0800250d   Thumb Code    38  stm32f1xx_ll_gpio.o(.text.LL_GPIO_StructInit)
    LL_Init1msTick                           0x0800255d   Thumb Code    20  stm32f1xx_ll_utils.o(.text.LL_Init1msTick)
    LL_RCC_GetSystemClocksFreq               0x08002621   Thumb Code    54  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_SPI_DeInit                            0x08002775   Thumb Code   206  stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit)
    LL_SPI_Init                              0x08002935   Thumb Code   678  stm32f1xx_ll_spi.o(.text.LL_SPI_Init)
    LL_SetSystemCoreClock                    0x08002c7d   Thumb Code    20  stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_USART_Init                            0x08002cc1   Thumb Code   680  stm32f1xx_ll_usart.o(.text.LL_USART_Init)
    LL_mDelay                                0x08003001   Thumb Code    74  stm32f1xx_ll_utils.o(.text.LL_mDelay)
    Lcd_WriteData_16Bit                      0x0800304d   Thumb Code    58  tft.o(.text.Lcd_WriteData_16Bit)
    MX_DMA_Init                              0x08003089   Thumb Code   128  dma.o(.text.MX_DMA_Init)
    MX_GPIO_Init                             0x08003109   Thumb Code   416  gpio.o(.text.MX_GPIO_Init)
    MX_SPI1_Init                             0x080032a9   Thumb Code   342  spi.o(.text.MX_SPI1_Init)
    MX_SPI2_Init                             0x08003401   Thumb Code   342  spi.o(.text.MX_SPI2_Init)
    MX_USART1_UART_Init                      0x08003559   Thumb Code   160  usart.o(.text.MX_USART1_UART_Init)
    MemManage_Handler                        0x080035f9   Thumb Code     4  stm32f1xx_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x080035fd   Thumb Code     4  stm32f1xx_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x08003745   Thumb Code     2  stm32f1xx_it.o(.text.PendSV_Handler)
    Pic_test                                 0x08003749   Thumb Code   176  test.o(.text.Pic_test)
    RCC_GetHCLKClockFreq                     0x080037f9   Thumb Code    38  stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    RCC_GetPCLK1ClockFreq                    0x08003821   Thumb Code    36  stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq)
    RCC_GetPCLK2ClockFreq                    0x08003845   Thumb Code    36  stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq)
    RCC_GetSystemClockFreq                   0x08003869   Thumb Code    86  stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq)
    RCC_PLL_GetFreqDomain_SYS                0x080038c1   Thumb Code   104  stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    Rotate_Test                              0x08003929   Thumb Code   174  test.o(.text.Rotate_Test)
    SPI1_IRQHandler                          0x080039d9   Thumb Code    16  stm32f1xx_it.o(.text.SPI1_IRQHandler)
    SPI2_IRQHandler                          0x080039e9   Thumb Code    30  stm32f1xx_it.o(.text.SPI2_IRQHandler)
    SVC_Handler                              0x08003a09   Thumb Code     2  stm32f1xx_it.o(.text.SVC_Handler)
    Show_Str                                 0x08003a0d   Thumb Code   572  gui.o(.text.Show_Str)
    SysTick_Handler                          0x08003c49   Thumb Code    68  stm32f1xx_it.o(.text.SysTick_Handler)
    SystemClock_Config                       0x08003c8d   Thumb Code   146  main.o(.text.SystemClock_Config)
    SystemInit                               0x08003d21   Thumb Code     2  system_stm32f1xx.o(.text.SystemInit)
    Test_Circle                              0x08003d25   Thumb Code   292  test.o(.text.Test_Circle)
    Test_Color                               0x08003e49   Thumb Code   298  test.o(.text.Test_Color)
    Test_FillRec                             0x08003f75   Thumb Code   332  test.o(.text.Test_FillRec)
    Test_Triangle                            0x080040c1   Thumb Code   384  test.o(.text.Test_Triangle)
    UsageFault_Handler                       0x08004241   Thumb Code     4  stm32f1xx_it.o(.text.UsageFault_Handler)
    _draw_circle_8                           0x080043dd   Thumb Code   218  gui.o(.text._draw_circle_8)
    assert_failed                            0x080044dd   Thumb Code    10  main.o(.text.assert_failed)
    createHandler                            0x080044e9   Thumb Code    62  spi_handler.o(.text.createHandler)
    deInitParal_TFT                          0x08004529   Thumb Code   124  gpio.o(.text.deInitParal_TFT)
    deInitSPI_TFT                            0x080045a5   Thumb Code    50  gpio.o(.text.deInitSPI_TFT)
    disableTFTCommunication                  0x080045d9   Thumb Code    20  tft_ll.o(.text.disableTFTCommunication)
    enableTFTCommunication                   0x080045ed   Thumb Code    20  tft_ll.o(.text.enableTFTCommunication)
    findHandler                              0x08004601   Thumb Code    82  spi_handler.o(.text.findHandler)
    findOrCreateHandler                      0x08004655   Thumb Code   142  spi_handler.o(.text.findOrCreateHandler)
    finishTransmission                       0x080046e5   Thumb Code   242  tft_ll.o(.text.finishTransmission)
    gui_circle                               0x080047d9   Thumb Code   256  gui.o(.text.gui_circle)
    initDMA                                  0x080048d9   Thumb Code   324  tft_ll.o(.text.initDMA)
    initFifo                                 0x08004a1d   Thumb Code   136  fifo.o(.text.initFifo)
    initParal_TFT                            0x08004aa5   Thumb Code   174  gpio.o(.text.initParal_TFT)
    initPerifTFT                             0x08004b55   Thumb Code    58  tft_ll.o(.text.initPerifTFT)
    initSPI_TFT                              0x08004b91   Thumb Code   132  gpio.o(.text.initSPI_TFT)
    initTFT                                  0x08004c15   Thumb Code  1056  tft.o(.text.initTFT)
    initTFT_LL                               0x08005035   Thumb Code   180  tft_ll.o(.text.initTFT_LL)
    main                                     0x080050e9   Thumb Code   196  main.o(.text.main)
    main_test                                0x080051ad   Thumb Code   194  test.o(.text.main_test)
    pop                                      0x08005271   Thumb Code   132  fifo.o(.text.pop)
    processMsg                               0x080052f5   Thumb Code   232  tft_ll.o(.text.processMsg)
    push                                     0x080053dd   Thumb Code   126  fifo.o(.text.push)
    rebootTFT                                0x0800545d   Thumb Code    50  tft_ll.o(.text.rebootTFT)
    registerHandler                          0x08005491   Thumb Code   178  spi_handler.o(.text.registerHandler)
    selectCommand                            0x08005545   Thumb Code    20  tft_ll.o(.text.selectCommand)
    selectData                               0x08005559   Thumb Code    20  tft_ll.o(.text.selectData)
    spiInterruptHandler                      0x0800556d   Thumb Code   334  spi_handler.o(.text.spiInterruptHandler)
    tftSpiHandler                            0x080056bd   Thumb Code   202  tft_ll.o(.text.tftSpiHandler)
    transCurMsg                              0x08005789   Thumb Code   412  tft_ll.o(.text.transCurMsg)
    transNewMsg                              0x08005925   Thumb Code   520  tft_ll.o(.text.transNewMsg)
    AHBPrescTable                            0x08005b3c   Data          16  system_stm32f1xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x08005b4c   Data           8  system_stm32f1xx.o(.rodata.APBPrescTable)
    asc2_1206                                0x08005b62   Data        1140  gui.o(.rodata.asc2_1206)
    asc2_1608                                0x08005fd6   Data        1520  gui.o(.rodata.asc2_1608)
    gImage_qq                                0x080065c6   Data        3200  test.o(.rodata.gImage_qq)
    tfont16                                  0x080075a2   Data        2108  gui.o(.rodata.tfont16)
    tfont24                                  0x08007dde   Data         518  gui.o(.rodata.tfont24)
    tfont32                                  0x08007fe4   Data         520  gui.o(.rodata.tfont32)
    Region$$Table$$Base                      0x080081ec   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800820c   Number         0  anon$$obj.o(Region$$Table)
    ColorTab                                 0x20000000   Data          10  test.o(.data.ColorTab)
    SystemCoreClock                          0x2000000c   Data           4  system_stm32f1xx.o(.data.SystemCoreClock)
    dummyByte                                0x20000010   Data           1  tft_ll.o(.data.dummyByte)
    __libspace_start                         0x20000018   Data          96  libspace.o(.bss)
    POINT_COLOR                              0x20000078   Data           2  tft.o(.bss.POINT_COLOR)
    __temporary_stack_top$libspace           0x20000078   Data           0  libspace.o(.bss)
    _1ms_cnt                                 0x2000007c   Data           4  main.o(.bss._1ms_cnt)
    curEl                                    0x20000080   Data           2  tft_ll.o(.bss.curEl)
    curMsg                                   0x20000084   Data           4  tft_ll.o(.bss.curMsg)
    firstByte                                0x20000088   Data           1  tft_ll.o(.bss.firstByte)
    hCnt                                     0x20000089   Data           1  spi_handler.o(.bss.hCnt)
    handlerList                              0x2000008c   Data           4  spi_handler.o(.bss.handlerList)
    handlerStatus                            0x20000090   Data           4  tft_ll.o(.bss.handlerStatus)
    itCnt                                    0x20000094   Data           1  stm32f1xx_it.o(.bss.itCnt)
    lcddev                                   0x20000096   Data          14  tft.o(.bss.lcddev)
    msgFifo                                  0x200000a4   Data           4  tft_ll.o(.bss.msgFifo)
    spiStep                                  0x200000a8   Data           1  spi_handler.o(.bss.spiStep)
    step                                     0x200000a9   Data           1  tft_ll.o(.bss.step)
    tCnt                                     0x200000aa   Data           1  tft_ll.o(.bss.tCnt)
    tftStatus                                0x200000ac   Data           4  tft_ll.o(.bss.tftStatus)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000131

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00008228, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000820c, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000130   Data   RO            3    RESET               startup_stm32f103xe.o
    0x08000130   0x08000130   0x00000008   Code   RO         1103  * !!!main             c_w.l(__main.o)
    0x08000138   0x08000138   0x00000034   Code   RO         1312    !!!scatter          c_w.l(__scatter.o)
    0x0800016c   0x0800016c   0x0000001a   Code   RO         1314    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000186   0x08000186   0x00000002   PAD
    0x08000188   0x08000188   0x0000001c   Code   RO         1316    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080001a4   0x080001a4   0x00000002   Code   RO         1247    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO         1136    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO         1138    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO         1140    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x080001a6   0x080001a6   0x00000008   Code   RO         1141    .ARM.Collect$$libinit$$00000007  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1143    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1145    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1147    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1150    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1152    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1154    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1156    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1158    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1160    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1162    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1164    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1166    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1168    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1170    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1174    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1176    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1178    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO         1180    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000002   Code   RO         1181    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x080001b0   0x080001b0   0x00000002   Code   RO         1309    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1263    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1265    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1268    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1271    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1273    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1276    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000002   Code   RO         1277    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x080001b4   0x080001b4   0x00000000   Code   RO         1107    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080001b4   0x080001b4   0x00000000   Code   RO         1190    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080001b4   0x080001b4   0x00000006   Code   RO         1202    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x080001ba   0x080001ba   0x00000000   Code   RO         1192    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x080001ba   0x080001ba   0x00000004   Code   RO         1193    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001be   0x080001be   0x00000000   Code   RO         1195    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001be   0x080001be   0x00000008   Code   RO         1196    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001c6   0x080001c6   0x00000002   Code   RO         1252    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001c8   0x080001c8   0x00000000   Code   RO         1283    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001c8   0x080001c8   0x00000004   Code   RO         1284    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001cc   0x080001cc   0x00000006   Code   RO         1285    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001d2   0x080001d2   0x00000002   PAD
    0x080001d4   0x080001d4   0x00000040   Code   RO            4    .text               startup_stm32f103xe.o
    0x08000214   0x08000214   0x0000005e   Code   RO         1039    .text               c_w.l(h1_alloc.o)
    0x08000272   0x08000272   0x0000004e   Code   RO         1041    .text               c_w.l(h1_free.o)
    0x080002c0   0x080002c0   0x0000003e   Code   RO         1097    .text               c_w.l(strlen.o)
    0x080002fe   0x080002fe   0x0000004e   Code   RO         1099    .text               c_w.l(rt_memclr_w.o)
    0x0800034c   0x0800034c   0x00000006   Code   RO         1101    .text               c_w.l(heapauxi.o)
    0x08000352   0x08000352   0x00000002   PAD
    0x08000354   0x08000354   0x00000008   Code   RO         1111    .text               c_w.l(rt_heap_descriptor_intlibspace.o)
    0x0800035c   0x0800035c   0x00000004   Code   RO         1113    .text               c_w.l(hguard.o)
    0x08000360   0x08000360   0x0000008a   Code   RO         1115    .text               c_w.l(init_alloc.o)
    0x080003ea   0x080003ea   0x0000000e   Code   RO         1119    .text               c_w.l(h1_init.o)
    0x080003f8   0x080003f8   0x00000008   Code   RO         1186    .text               c_w.l(libspace.o)
    0x08000400   0x08000400   0x00000000   Code   RO         1206    .text               c_w.l(maybetermalloc1.o)
    0x08000400   0x08000400   0x00000034   Code   RO         1208    .text               c_w.l(h1_extend.o)
    0x08000434   0x08000434   0x0000000e   Code   RO         1212    .text               c_w.l(defsig_rtmem_outer.o)
    0x08000442   0x08000442   0x00000002   Code   RO         1223    .text               c_w.l(use_no_semi.o)
    0x08000444   0x08000444   0x00000000   Code   RO         1225    .text               c_w.l(indicate_semi.o)
    0x08000444   0x08000444   0x0000004a   Code   RO         1226    .text               c_w.l(sys_stackheap_outer.o)
    0x0800048e   0x0800048e   0x00000012   Code   RO         1232    .text               c_w.l(exit.o)
    0x080004a0   0x080004a0   0x0000000a   Code   RO         1234    .text               c_w.l(defsig_exit.o)
    0x080004aa   0x080004aa   0x00000002   PAD
    0x080004ac   0x080004ac   0x00000050   Code   RO         1236    .text               c_w.l(defsig_rtmem_inner.o)
    0x080004fc   0x080004fc   0x0000000c   Code   RO         1248    .text               c_w.l(sys_exit.o)
    0x08000508   0x08000508   0x00000032   Code   RO         1260    .text               c_w.l(defsig_general.o)
    0x0800053a   0x0800053a   0x0000000e   Code   RO         1278    .text               c_w.l(sys_wrch.o)
    0x08000548   0x08000548   0x00000004   Code   RO          225    .text.BusFault_Handler  stm32f1xx_it.o
    0x0800054c   0x0800054c   0x000000be   Code   RO          959    .text.Chinese_Font_test  test.o
    0x0800060a   0x0800060a   0x00000002   PAD
    0x0800060c   0x0800060c   0x00000002   Code   RO          239    .text.DMA1_Channel2_IRQHandler  stm32f1xx_it.o
    0x0800060e   0x0800060e   0x00000002   PAD
    0x08000610   0x08000610   0x00000002   Code   RO          241    .text.DMA1_Channel3_IRQHandler  stm32f1xx_it.o
    0x08000612   0x08000612   0x00000002   PAD
    0x08000614   0x08000614   0x0000002c   Code   RO          243    .text.DMA1_Channel4_IRQHandler  stm32f1xx_it.o
    0x08000640   0x08000640   0x0000002c   Code   RO          253    .text.DMA1_Channel5_IRQHandler  stm32f1xx_it.o
    0x0800066c   0x0800066c   0x00000002   Code   RO          231    .text.DebugMon_Handler  stm32f1xx_it.o
    0x0800066e   0x0800066e   0x00000002   PAD
    0x08000670   0x08000670   0x000000ac   Code   RO          945    .text.DrawTestPage  test.o
    0x0800071c   0x0800071c   0x00000064   Code   RO          990    .text.Draw_Triangel  gui.o
    0x08000780   0x08000780   0x00000114   Code   RO          955    .text.English_Font_test  test.o
    0x08000894   0x08000894   0x000002ec   Code   RO          992    .text.Fill_Triangel  gui.o
    0x08000b80   0x08000b80   0x000001ce   Code   RO         1004    .text.GUI_DrawFont16  gui.o
    0x08000d4e   0x08000d4e   0x00000002   PAD
    0x08000d50   0x08000d50   0x000001c6   Code   RO         1006    .text.GUI_DrawFont24  gui.o
    0x08000f16   0x08000f16   0x00000002   PAD
    0x08000f18   0x08000f18   0x000001ce   Code   RO         1008    .text.GUI_DrawFont32  gui.o
    0x080010e6   0x080010e6   0x00000002   PAD
    0x080010e8   0x080010e8   0x00000028   Code   RO          976    .text.GUI_DrawPoint  gui.o
    0x08001110   0x08001110   0x0000008a   Code   RO         1014    .text.Gui_Drawbmp16  gui.o
    0x0800119a   0x0800119a   0x00000002   PAD
    0x0800119c   0x0800119c   0x0000007e   Code   RO         1012    .text.Gui_StrCenter  gui.o
    0x0800121a   0x0800121a   0x00000002   PAD
    0x0800121c   0x0800121c   0x00000004   Code   RO          221    .text.HardFault_Handler  stm32f1xx_it.o
    0x08001220   0x08001220   0x0000007e   Code   RO          745    .text.LCD_Clear     tft.o
    0x0800129e   0x0800129e   0x00000002   PAD
    0x080012a0   0x080012a0   0x0000003e   Code   RO          984    .text.LCD_DrawFillRectangle  gui.o
    0x080012de   0x080012de   0x00000002   PAD
    0x080012e0   0x080012e0   0x00000124   Code   RO          980    .text.LCD_DrawLine  gui.o
    0x08001404   0x08001404   0x0000002a   Code   RO          743    .text.LCD_DrawPoint  tft.o
    0x0800142e   0x0800142e   0x00000002   PAD
    0x08001430   0x08001430   0x00000060   Code   RO          982    .text.LCD_DrawRectangle  gui.o
    0x08001490   0x08001490   0x000000c0   Code   RO          978    .text.LCD_Fill      gui.o
    0x08001550   0x08001550   0x00000020   Code   RO          735    .text.LCD_SetCursor  tft.o
    0x08001570   0x08001570   0x00000092   Code   RO          731    .text.LCD_SetWindows  tft.o
    0x08001602   0x08001602   0x00000002   PAD
    0x08001604   0x08001604   0x00000226   Code   RO          996    .text.LCD_ShowChar  gui.o
    0x0800182a   0x0800182a   0x00000002   PAD
    0x0800182c   0x0800182c   0x0000003e   Code   RO          725    .text.LCD_WR_DATA   tft.o
    0x0800186a   0x0800186a   0x00000002   PAD
    0x0800186c   0x0800186c   0x0000003e   Code   RO          723    .text.LCD_WR_REG    tft.o
    0x080018aa   0x080018aa   0x00000002   PAD
    0x080018ac   0x080018ac   0x00000014   Code   RO          733    .text.LCD_WriteRAM_Prepare  tft.o
    0x080018c0   0x080018c0   0x00000024   Code   RO          739    .text.LCD_WriteReg  tft.o
    0x080018e4   0x080018e4   0x000000b0   Code   RO          737    .text.LCD_direction  tft.o
    0x08001994   0x08001994   0x00000022   Code   RO          103    .text.LL_AHB1_GRP1_EnableClock  dma.o
    0x080019b6   0x080019b6   0x00000002   PAD
    0x080019b8   0x080019b8   0x00000022   Code   RO           15    .text.LL_APB1_GRP1_EnableClock  main.o
    0x080019da   0x080019da   0x00000002   PAD
    0x080019dc   0x080019dc   0x00000022   Code   RO          167    .text.LL_APB1_GRP1_EnableClock  spi.o
    0x080019fe   0x080019fe   0x00000002   PAD
    0x08001a00   0x08001a00   0x00000018   Code   RO          554    .text.LL_APB1_GRP1_ForceReset  stm32f1xx_ll_spi.o
    0x08001a18   0x08001a18   0x00000018   Code   RO          556    .text.LL_APB1_GRP1_ReleaseReset  stm32f1xx_ll_spi.o
    0x08001a30   0x08001a30   0x00000022   Code   RO           13    .text.LL_APB2_GRP1_EnableClock  main.o
    0x08001a52   0x08001a52   0x00000002   PAD
    0x08001a54   0x08001a54   0x00000022   Code   RO           76    .text.LL_APB2_GRP1_EnableClock  gpio.o
    0x08001a76   0x08001a76   0x00000002   PAD
    0x08001a78   0x08001a78   0x00000022   Code   RO          139    .text.LL_APB2_GRP1_EnableClock  spi.o
    0x08001a9a   0x08001a9a   0x00000002   PAD
    0x08001a9c   0x08001a9c   0x00000022   Code   RO          206    .text.LL_APB2_GRP1_EnableClock  usart.o
    0x08001abe   0x08001abe   0x00000002   PAD
    0x08001ac0   0x08001ac0   0x00000018   Code   RO          550    .text.LL_APB2_GRP1_ForceReset  stm32f1xx_ll_spi.o
    0x08001ad8   0x08001ad8   0x00000018   Code   RO          552    .text.LL_APB2_GRP1_ReleaseReset  stm32f1xx_ll_spi.o
    0x08001af0   0x08001af0   0x00000010   Code   RO          245    .text.LL_DMA_ClearFlag_GI4  stm32f1xx_it.o
    0x08001b00   0x08001b00   0x00000010   Code   RO          255    .text.LL_DMA_ClearFlag_GI5  stm32f1xx_it.o
    0x08001b10   0x08001b10   0x00000010   Code   RO          247    .text.LL_DMA_ClearFlag_HT4  stm32f1xx_it.o
    0x08001b20   0x08001b20   0x00000010   Code   RO          257    .text.LL_DMA_ClearFlag_HT5  stm32f1xx_it.o
    0x08001b30   0x08001b30   0x00000010   Code   RO          249    .text.LL_DMA_ClearFlag_TC4  stm32f1xx_it.o
    0x08001b40   0x08001b40   0x00000010   Code   RO          259    .text.LL_DMA_ClearFlag_TC5  stm32f1xx_it.o
    0x08001b50   0x08001b50   0x00000010   Code   RO          251    .text.LL_DMA_ClearFlag_TE4  stm32f1xx_it.o
    0x08001b60   0x08001b60   0x00000010   Code   RO          261    .text.LL_DMA_ClearFlag_TE5  stm32f1xx_it.o
    0x08001b70   0x08001b70   0x00000036   Code   RO          866    .text.LL_DMA_ConfigTransfer  tft_ll.o
    0x08001ba6   0x08001ba6   0x00000002   PAD
    0x08001ba8   0x08001ba8   0x00000024   Code   RO          856    .text.LL_DMA_DisableChannel  tft_ll.o
    0x08001bcc   0x08001bcc   0x00000024   Code   RO          858    .text.LL_DMA_DisableIT_HT  tft_ll.o
    0x08001bf0   0x08001bf0   0x00000024   Code   RO          860    .text.LL_DMA_DisableIT_TC  tft_ll.o
    0x08001c14   0x08001c14   0x00000024   Code   RO          862    .text.LL_DMA_DisableIT_TE  tft_ll.o
    0x08001c38   0x08001c38   0x00000024   Code   RO          880    .text.LL_DMA_EnableChannel  tft_ll.o
    0x08001c5c   0x08001c5c   0x00000024   Code   RO          876    .text.LL_DMA_EnableIT_TC  tft_ll.o
    0x08001c80   0x08001c80   0x00000024   Code   RO          878    .text.LL_DMA_EnableIT_TE  tft_ll.o
    0x08001ca4   0x08001ca4   0x00000034   Code   RO          143    .text.LL_DMA_SetChannelPriorityLevel  spi.o
    0x08001cd8   0x08001cd8   0x0000003a   Code   RO          868    .text.LL_DMA_SetDataLength  tft_ll.o
    0x08001d12   0x08001d12   0x00000002   PAD
    0x08001d14   0x08001d14   0x00000036   Code   RO          141    .text.LL_DMA_SetDataTransferDirection  spi.o
    0x08001d4a   0x08001d4a   0x00000002   PAD
    0x08001d4c   0x08001d4c   0x00000024   Code   RO          870    .text.LL_DMA_SetMemoryAddress  tft_ll.o
    0x08001d70   0x08001d70   0x00000034   Code   RO          149    .text.LL_DMA_SetMemoryIncMode  spi.o
    0x08001da4   0x08001da4   0x00000034   Code   RO          153    .text.LL_DMA_SetMemorySize  spi.o
    0x08001dd8   0x08001dd8   0x00000034   Code   RO          145    .text.LL_DMA_SetMode  spi.o
    0x08001e0c   0x08001e0c   0x00000024   Code   RO          872    .text.LL_DMA_SetPeriphAddress  tft_ll.o
    0x08001e30   0x08001e30   0x00000034   Code   RO          147    .text.LL_DMA_SetPeriphIncMode  spi.o
    0x08001e64   0x08001e64   0x00000034   Code   RO          151    .text.LL_DMA_SetPeriphSize  spi.o
    0x08001e98   0x08001e98   0x00000018   Code   RO          522    .text.LL_EXTI_DisableEvent_0_31  stm32f1xx_ll_exti.o
    0x08001eb0   0x08001eb0   0x00000018   Code   RO          530    .text.LL_EXTI_DisableFallingTrig_0_31  stm32f1xx_ll_exti.o
    0x08001ec8   0x08001ec8   0x00000018   Code   RO          526    .text.LL_EXTI_DisableIT_0_31  stm32f1xx_ll_exti.o
    0x08001ee0   0x08001ee0   0x00000018   Code   RO          534    .text.LL_EXTI_DisableRisingTrig_0_31  stm32f1xx_ll_exti.o
    0x08001ef8   0x08001ef8   0x00000018   Code   RO          528    .text.LL_EXTI_EnableEvent_0_31  stm32f1xx_ll_exti.o
    0x08001f10   0x08001f10   0x00000018   Code   RO          536    .text.LL_EXTI_EnableFallingTrig_0_31  stm32f1xx_ll_exti.o
    0x08001f28   0x08001f28   0x00000018   Code   RO          524    .text.LL_EXTI_EnableIT_0_31  stm32f1xx_ll_exti.o
    0x08001f40   0x08001f40   0x00000018   Code   RO          532    .text.LL_EXTI_EnableRisingTrig_0_31  stm32f1xx_ll_exti.o
    0x08001f58   0x08001f58   0x000001a6   Code   RO          520    .text.LL_EXTI_Init  stm32f1xx_ll_exti.o
    0x080020fe   0x080020fe   0x00000002   PAD
    0x08002100   0x08002100   0x00000010   Code   RO           35    .text.LL_FLASH_GetLatency  main.o
    0x08002110   0x08002110   0x0000001c   Code   RO           33    .text.LL_FLASH_SetLatency  main.o
    0x0800212c   0x0800212c   0x00000018   Code   RO           25    .text.LL_GPIO_AF_Remap_SWJ_NOJTAG  main.o
    0x08002144   0x08002144   0x00000038   Code   RO           80    .text.LL_GPIO_AF_SetEXTISource  gpio.o
    0x0800217c   0x0800217c   0x00000230   Code   RO          281    .text.LL_GPIO_Init  stm32f1xx_ll_gpio.o
    0x080023ac   0x080023ac   0x00000012   Code   RO           78    .text.LL_GPIO_ResetOutputPin  gpio.o
    0x080023be   0x080023be   0x00000002   PAD
    0x080023c0   0x080023c0   0x00000012   Code   RO          920    .text.LL_GPIO_ResetOutputPin  tft_ll.o
    0x080023d2   0x080023d2   0x00000002   PAD
    0x080023d4   0x080023d4   0x00000012   Code   RO           29    .text.LL_GPIO_SetOutputPin  main.o
    0x080023e6   0x080023e6   0x00000002   PAD
    0x080023e8   0x080023e8   0x00000012   Code   RO           86    .text.LL_GPIO_SetOutputPin  gpio.o
    0x080023fa   0x080023fa   0x00000002   PAD
    0x080023fc   0x080023fc   0x00000012   Code   RO          922    .text.LL_GPIO_SetOutputPin  tft_ll.o
    0x0800240e   0x0800240e   0x00000002   PAD
    0x08002410   0x08002410   0x00000034   Code   RO           82    .text.LL_GPIO_SetPinMode  gpio.o
    0x08002444   0x08002444   0x00000034   Code   RO          285    .text.LL_GPIO_SetPinMode  stm32f1xx_ll_gpio.o
    0x08002478   0x08002478   0x00000034   Code   RO          289    .text.LL_GPIO_SetPinOutputType  stm32f1xx_ll_gpio.o
    0x080024ac   0x080024ac   0x0000002a   Code   RO          283    .text.LL_GPIO_SetPinPull  stm32f1xx_ll_gpio.o
    0x080024d6   0x080024d6   0x00000002   PAD
    0x080024d8   0x080024d8   0x00000034   Code   RO          287    .text.LL_GPIO_SetPinSpeed  stm32f1xx_ll_gpio.o
    0x0800250c   0x0800250c   0x00000026   Code   RO          291    .text.LL_GPIO_StructInit  stm32f1xx_ll_gpio.o
    0x08002532   0x08002532   0x00000002   PAD
    0x08002534   0x08002534   0x00000028   Code   RO          237    .text.LL_GPIO_TogglePin  stm32f1xx_it.o
    0x0800255c   0x0800255c   0x00000014   Code   RO          454    .text.LL_Init1msTick  stm32f1xx_ll_utils.o
    0x08002570   0x08002570   0x00000036   Code   RO          456    .text.LL_InitTick   stm32f1xx_ll_utils.o
    0x080025a6   0x080025a6   0x00000002   PAD
    0x080025a8   0x080025a8   0x00000012   Code   RO           41    .text.LL_PWR_EnableBkUpAccess  main.o
    0x080025ba   0x080025ba   0x00000002   PAD
    0x080025bc   0x080025bc   0x00000012   Code   RO           43    .text.LL_RCC_EnableRTC  main.o
    0x080025ce   0x080025ce   0x00000002   PAD
    0x080025d0   0x080025d0   0x00000010   Code   RO          434    .text.LL_RCC_GetAHBPrescaler  stm32f1xx_ll_rcc.o
    0x080025e0   0x080025e0   0x00000010   Code   RO          436    .text.LL_RCC_GetAPB1Prescaler  stm32f1xx_ll_rcc.o
    0x080025f0   0x080025f0   0x00000010   Code   RO          438    .text.LL_RCC_GetAPB2Prescaler  stm32f1xx_ll_rcc.o
    0x08002600   0x08002600   0x00000010   Code   RO           59    .text.LL_RCC_GetSysClkSource  main.o
    0x08002610   0x08002610   0x00000010   Code   RO          406    .text.LL_RCC_GetSysClkSource  stm32f1xx_ll_rcc.o
    0x08002620   0x08002620   0x00000036   Code   RO          414    .text.LL_RCC_GetSystemClocksFreq  stm32f1xx_ll_rcc.o
    0x08002656   0x08002656   0x00000002   PAD
    0x08002658   0x08002658   0x00000012   Code   RO           37    .text.LL_RCC_HSE_Enable  main.o
    0x0800266a   0x0800266a   0x00000002   PAD
    0x0800266c   0x0800266c   0x00000010   Code   RO           39    .text.LL_RCC_HSE_IsReady  main.o
    0x0800267c   0x0800267c   0x00000026   Code   RO           45    .text.LL_RCC_PLL_ConfigDomain_SYS  main.o
    0x080026a2   0x080026a2   0x00000002   PAD
    0x080026a4   0x080026a4   0x00000012   Code   RO           47    .text.LL_RCC_PLL_Enable  main.o
    0x080026b6   0x080026b6   0x00000002   PAD
    0x080026b8   0x080026b8   0x00000010   Code   RO          440    .text.LL_RCC_PLL_GetMainSource  stm32f1xx_ll_rcc.o
    0x080026c8   0x080026c8   0x00000010   Code   RO          444    .text.LL_RCC_PLL_GetMultiplicator  stm32f1xx_ll_rcc.o
    0x080026d8   0x080026d8   0x00000010   Code   RO          442    .text.LL_RCC_PLL_GetPrediv  stm32f1xx_ll_rcc.o
    0x080026e8   0x080026e8   0x00000010   Code   RO           49    .text.LL_RCC_PLL_IsReady  main.o
    0x080026f8   0x080026f8   0x0000001c   Code   RO           51    .text.LL_RCC_SetAHBPrescaler  main.o
    0x08002714   0x08002714   0x0000001c   Code   RO           53    .text.LL_RCC_SetAPB1Prescaler  main.o
    0x08002730   0x08002730   0x0000001c   Code   RO           55    .text.LL_RCC_SetAPB2Prescaler  main.o
    0x0800274c   0x0800274c   0x0000001c   Code   RO           57    .text.LL_RCC_SetSysClkSource  main.o
    0x08002768   0x08002768   0x0000000c   Code   RO          874    .text.LL_SPI_DMA_GetRegAddr  tft_ll.o
    0x08002774   0x08002774   0x000000ce   Code   RO          548    .text.LL_SPI_DeInit  stm32f1xx_ll_spi.o
    0x08002842   0x08002842   0x00000002   PAD
    0x08002844   0x08002844   0x00000012   Code   RO          852    .text.LL_SPI_DisableDMAReq_RX  tft_ll.o
    0x08002856   0x08002856   0x00000002   PAD
    0x08002858   0x08002858   0x00000012   Code   RO          854    .text.LL_SPI_DisableDMAReq_TX  tft_ll.o
    0x0800286a   0x0800286a   0x00000002   PAD
    0x0800286c   0x0800286c   0x00000012   Code   RO          846    .text.LL_SPI_DisableIT_ERR  tft_ll.o
    0x0800287e   0x0800287e   0x00000002   PAD
    0x08002880   0x08002880   0x00000012   Code   RO          778    .text.LL_SPI_DisableIT_RXNE  spi_handler.o
    0x08002892   0x08002892   0x00000002   PAD
    0x08002894   0x08002894   0x00000012   Code   RO          848    .text.LL_SPI_DisableIT_RXNE  tft_ll.o
    0x080028a6   0x080028a6   0x00000002   PAD
    0x080028a8   0x080028a8   0x00000012   Code   RO          772    .text.LL_SPI_DisableIT_TXE  spi_handler.o
    0x080028ba   0x080028ba   0x00000002   PAD
    0x080028bc   0x080028bc   0x00000012   Code   RO          850    .text.LL_SPI_DisableIT_TXE  tft_ll.o
    0x080028ce   0x080028ce   0x00000002   PAD
    0x080028d0   0x080028d0   0x00000012   Code   RO          163    .text.LL_SPI_Enable  spi.o
    0x080028e2   0x080028e2   0x00000002   PAD
    0x080028e4   0x080028e4   0x00000012   Code   RO          838    .text.LL_SPI_EnableDMAReq_RX  tft_ll.o
    0x080028f6   0x080028f6   0x00000002   PAD
    0x080028f8   0x080028f8   0x00000012   Code   RO          832    .text.LL_SPI_EnableDMAReq_TX  tft_ll.o
    0x0800290a   0x0800290a   0x00000002   PAD
    0x0800290c   0x0800290c   0x00000012   Code   RO          840    .text.LL_SPI_EnableIT_RXNE  tft_ll.o
    0x0800291e   0x0800291e   0x00000002   PAD
    0x08002920   0x08002920   0x00000012   Code   RO          836    .text.LL_SPI_EnableIT_TXE  tft_ll.o
    0x08002932   0x08002932   0x00000002   PAD
    0x08002934   0x08002934   0x000002a6   Code   RO          558    .text.LL_SPI_Init   stm32f1xx_ll_spi.o
    0x08002bda   0x08002bda   0x00000002   PAD
    0x08002bdc   0x08002bdc   0x00000010   Code   RO          774    .text.LL_SPI_IsActiveFlag_RXNE  spi_handler.o
    0x08002bec   0x08002bec   0x00000010   Code   RO          768    .text.LL_SPI_IsActiveFlag_TXE  spi_handler.o
    0x08002bfc   0x08002bfc   0x00000010   Code   RO          560    .text.LL_SPI_IsEnabled  stm32f1xx_ll_spi.o
    0x08002c0c   0x08002c0c   0x00000010   Code   RO          776    .text.LL_SPI_IsEnabledIT_RXNE  spi_handler.o
    0x08002c1c   0x08002c1c   0x00000010   Code   RO          770    .text.LL_SPI_IsEnabledIT_TXE  spi_handler.o
    0x08002c2c   0x08002c2c   0x0000000c   Code   RO          844    .text.LL_SPI_ReceiveData8  tft_ll.o
    0x08002c38   0x08002c38   0x00000012   Code   RO          562    .text.LL_SPI_SetCRCPolynomial  stm32f1xx_ll_spi.o
    0x08002c4a   0x08002c4a   0x00000002   PAD
    0x08002c4c   0x08002c4c   0x0000001a   Code   RO          834    .text.LL_SPI_TransmitData8  tft_ll.o
    0x08002c66   0x08002c66   0x00000002   PAD
    0x08002c68   0x08002c68   0x00000012   Code   RO           31    .text.LL_SYSTICK_EnableIT  main.o
    0x08002c7a   0x08002c7a   0x00000002   PAD
    0x08002c7c   0x08002c7c   0x00000014   Code   RO          460    .text.LL_SetSystemCoreClock  stm32f1xx_ll_utils.o
    0x08002c90   0x08002c90   0x0000001c   Code   RO          208    .text.LL_USART_ConfigAsyncMode  usart.o
    0x08002cac   0x08002cac   0x00000012   Code   RO          210    .text.LL_USART_Enable  usart.o
    0x08002cbe   0x08002cbe   0x00000002   PAD
    0x08002cc0   0x08002cc0   0x000002a8   Code   RO          683    .text.LL_USART_Init  stm32f1xx_ll_usart.o
    0x08002f68   0x08002f68   0x00000010   Code   RO          685    .text.LL_USART_IsEnabled  stm32f1xx_ll_usart.o
    0x08002f78   0x08002f78   0x0000004e   Code   RO          691    .text.LL_USART_SetBaudRate  stm32f1xx_ll_usart.o
    0x08002fc6   0x08002fc6   0x00000002   PAD
    0x08002fc8   0x08002fc8   0x0000001a   Code   RO          689    .text.LL_USART_SetHWFlowCtrl  stm32f1xx_ll_usart.o
    0x08002fe2   0x08002fe2   0x00000002   PAD
    0x08002fe4   0x08002fe4   0x0000001a   Code   RO          687    .text.LL_USART_SetStopBitsLength  stm32f1xx_ll_usart.o
    0x08002ffe   0x08002ffe   0x00000002   PAD
    0x08003000   0x08003000   0x0000004a   Code   RO          458    .text.LL_mDelay     stm32f1xx_ll_utils.o
    0x0800304a   0x0800304a   0x00000002   PAD
    0x0800304c   0x0800304c   0x0000003a   Code   RO          741    .text.Lcd_WriteData_16Bit  tft.o
    0x08003086   0x08003086   0x00000002   PAD
    0x08003088   0x08003088   0x00000080   Code   RO          101    .text.MX_DMA_Init   dma.o
    0x08003108   0x08003108   0x000001a0   Code   RO           74    .text.MX_GPIO_Init  gpio.o
    0x080032a8   0x080032a8   0x00000156   Code   RO          137    .text.MX_SPI1_Init  spi.o
    0x080033fe   0x080033fe   0x00000002   PAD
    0x08003400   0x08003400   0x00000156   Code   RO          165    .text.MX_SPI2_Init  spi.o
    0x08003556   0x08003556   0x00000002   PAD
    0x08003558   0x08003558   0x000000a0   Code   RO          204    .text.MX_USART1_UART_Init  usart.o
    0x080035f8   0x080035f8   0x00000004   Code   RO          223    .text.MemManage_Handler  stm32f1xx_it.o
    0x080035fc   0x080035fc   0x00000004   Code   RO          219    .text.NMI_Handler   stm32f1xx_it.o
    0x08003600   0x08003600   0x0000006c   Code   RO           21    .text.NVIC_EncodePriority  main.o
    0x0800366c   0x0800366c   0x0000006c   Code   RO          107    .text.NVIC_EncodePriority  dma.o
    0x080036d8   0x080036d8   0x0000006c   Code   RO          157    .text.NVIC_EncodePriority  spi.o
    0x08003744   0x08003744   0x00000002   Code   RO          233    .text.PendSV_Handler  stm32f1xx_it.o
    0x08003746   0x08003746   0x00000002   PAD
    0x08003748   0x08003748   0x000000b0   Code   RO          961    .text.Pic_test      test.o
    0x080037f8   0x080037f8   0x00000026   Code   RO          418    .text.RCC_GetHCLKClockFreq  stm32f1xx_ll_rcc.o
    0x0800381e   0x0800381e   0x00000002   PAD
    0x08003820   0x08003820   0x00000024   Code   RO          420    .text.RCC_GetPCLK1ClockFreq  stm32f1xx_ll_rcc.o
    0x08003844   0x08003844   0x00000024   Code   RO          422    .text.RCC_GetPCLK2ClockFreq  stm32f1xx_ll_rcc.o
    0x08003868   0x08003868   0x00000056   Code   RO          416    .text.RCC_GetSystemClockFreq  stm32f1xx_ll_rcc.o
    0x080038be   0x080038be   0x00000002   PAD
    0x080038c0   0x080038c0   0x00000068   Code   RO          428    .text.RCC_PLL_GetFreqDomain_SYS  stm32f1xx_ll_rcc.o
    0x08003928   0x08003928   0x000000ae   Code   RO          963    .text.Rotate_Test   test.o
    0x080039d6   0x080039d6   0x00000002   PAD
    0x080039d8   0x080039d8   0x00000010   Code   RO          263    .text.SPI1_IRQHandler  stm32f1xx_it.o
    0x080039e8   0x080039e8   0x0000001e   Code   RO          265    .text.SPI2_IRQHandler  stm32f1xx_it.o
    0x08003a06   0x08003a06   0x00000002   PAD
    0x08003a08   0x08003a08   0x00000002   Code   RO          229    .text.SVC_Handler   stm32f1xx_it.o
    0x08003a0a   0x08003a0a   0x00000002   PAD
    0x08003a0c   0x08003a0c   0x0000023c   Code   RO         1010    .text.Show_Str      gui.o
    0x08003c48   0x08003c48   0x00000044   Code   RO          235    .text.SysTick_Handler  stm32f1xx_it.o
    0x08003c8c   0x08003c8c   0x00000092   Code   RO           27    .text.SystemClock_Config  main.o
    0x08003d1e   0x08003d1e   0x00000002   PAD
    0x08003d20   0x08003d20   0x00000002   Code   RO          709    .text.SystemInit    system_stm32f1xx.o
    0x08003d22   0x08003d22   0x00000002   PAD
    0x08003d24   0x08003d24   0x00000124   Code   RO          953    .text.Test_Circle   test.o
    0x08003e48   0x08003e48   0x0000012a   Code   RO          949    .text.Test_Color    test.o
    0x08003f72   0x08003f72   0x00000002   PAD
    0x08003f74   0x08003f74   0x0000014c   Code   RO          951    .text.Test_FillRec  test.o
    0x080040c0   0x080040c0   0x00000180   Code   RO          957    .text.Test_Triangle  test.o
    0x08004240   0x08004240   0x00000004   Code   RO          227    .text.UsageFault_Handler  stm32f1xx_it.o
    0x08004244   0x08004244   0x00000030   Code   RO          111    .text.__NVIC_EnableIRQ  dma.o
    0x08004274   0x08004274   0x00000030   Code   RO          161    .text.__NVIC_EnableIRQ  spi.o
    0x080042a4   0x080042a4   0x00000010   Code   RO           23    .text.__NVIC_GetPriorityGrouping  main.o
    0x080042b4   0x080042b4   0x00000010   Code   RO          109    .text.__NVIC_GetPriorityGrouping  dma.o
    0x080042c4   0x080042c4   0x00000010   Code   RO          159    .text.__NVIC_GetPriorityGrouping  spi.o
    0x080042d4   0x080042d4   0x00000042   Code   RO           19    .text.__NVIC_SetPriority  main.o
    0x08004316   0x08004316   0x00000002   PAD
    0x08004318   0x08004318   0x00000042   Code   RO          105    .text.__NVIC_SetPriority  dma.o
    0x0800435a   0x0800435a   0x00000002   PAD
    0x0800435c   0x0800435c   0x00000042   Code   RO          155    .text.__NVIC_SetPriority  spi.o
    0x0800439e   0x0800439e   0x00000002   PAD
    0x080043a0   0x080043a0   0x0000003c   Code   RO           17    .text.__NVIC_SetPriorityGrouping  main.o
    0x080043dc   0x080043dc   0x000000da   Code   RO          986    .text._draw_circle_8  gui.o
    0x080044b6   0x080044b6   0x00000002   PAD
    0x080044b8   0x080044b8   0x00000022   Code   RO          994    .text._swap         gui.o
    0x080044da   0x080044da   0x00000002   PAD
    0x080044dc   0x080044dc   0x0000000a   Code   RO           63    .text.assert_failed  main.o
    0x080044e6   0x080044e6   0x00000002   PAD
    0x080044e8   0x080044e8   0x0000003e   Code   RO          764    .text.createHandler  spi_handler.o
    0x08004526   0x08004526   0x00000002   PAD
    0x08004528   0x08004528   0x0000007c   Code   RO           92    .text.deInitParal_TFT  gpio.o
    0x080045a4   0x080045a4   0x00000032   Code   RO           90    .text.deInitSPI_TFT  gpio.o
    0x080045d6   0x080045d6   0x00000002   PAD
    0x080045d8   0x080045d8   0x00000014   Code   RO          864    .text.disableTFTCommunication  tft_ll.o
    0x080045ec   0x080045ec   0x00000014   Code   RO          824    .text.enableTFTCommunication  tft_ll.o
    0x08004600   0x08004600   0x00000052   Code   RO          760    .text.findHandler   spi_handler.o
    0x08004652   0x08004652   0x00000002   PAD
    0x08004654   0x08004654   0x0000008e   Code   RO          762    .text.findOrCreateHandler  spi_handler.o
    0x080046e2   0x080046e2   0x00000002   PAD
    0x080046e4   0x080046e4   0x000000f2   Code   RO          842    .text.finishTransmission  tft_ll.o
    0x080047d6   0x080047d6   0x00000002   PAD
    0x080047d8   0x080047d8   0x00000100   Code   RO          988    .text.gui_circle    gui.o
    0x080048d8   0x080048d8   0x00000144   Code   RO          830    .text.initDMA       tft_ll.o
    0x08004a1c   0x08004a1c   0x00000088   Code   RO          796    .text.initFifo      fifo.o
    0x08004aa4   0x08004aa4   0x000000ae   Code   RO           88    .text.initParal_TFT  gpio.o
    0x08004b52   0x08004b52   0x00000002   PAD
    0x08004b54   0x08004b54   0x0000003a   Code   RO          814    .text.initPerifTFT  tft_ll.o
    0x08004b8e   0x08004b8e   0x00000002   PAD
    0x08004b90   0x08004b90   0x00000084   Code   RO           84    .text.initSPI_TFT   gpio.o
    0x08004c14   0x08004c14   0x00000420   Code   RO          727    .text.initTFT       tft.o
    0x08005034   0x08005034   0x000000b4   Code   RO          812    .text.initTFT_LL    tft_ll.o
    0x080050e8   0x080050e8   0x000000c4   Code   RO           11    .text.main          main.o
    0x080051ac   0x080051ac   0x000000c2   Code   RO          947    .text.main_test     test.o
    0x0800526e   0x0800526e   0x00000002   PAD
    0x08005270   0x08005270   0x00000084   Code   RO          792    .text.pop           fifo.o
    0x080052f4   0x080052f4   0x000000e8   Code   RO          816    .text.processMsg    tft_ll.o
    0x080053dc   0x080053dc   0x0000007e   Code   RO          794    .text.push          fifo.o
    0x0800545a   0x0800545a   0x00000002   PAD
    0x0800545c   0x0800545c   0x00000032   Code   RO          918    .text.rebootTFT     tft_ll.o
    0x0800548e   0x0800548e   0x00000002   PAD
    0x08005490   0x08005490   0x000000b2   Code   RO          780    .text.registerHandler  spi_handler.o
    0x08005542   0x08005542   0x00000002   PAD
    0x08005544   0x08005544   0x00000014   Code   RO          828    .text.selectCommand  tft_ll.o
    0x08005558   0x08005558   0x00000014   Code   RO          826    .text.selectData    tft_ll.o
    0x0800556c   0x0800556c   0x0000014e   Code   RO          766    .text.spiInterruptHandler  spi_handler.o
    0x080056ba   0x080056ba   0x00000002   PAD
    0x080056bc   0x080056bc   0x000000ca   Code   RO          818    .text.tftSpiHandler  tft_ll.o
    0x08005786   0x08005786   0x00000002   PAD
    0x08005788   0x08005788   0x0000019c   Code   RO          822    .text.transCurMsg   tft_ll.o
    0x08005924   0x08005924   0x00000208   Code   RO          820    .text.transNewMsg   tft_ll.o
    0x08005b2c   0x08005b2c   0x00000010   Data   RO          968    .rodata..L__const.Rotate_Test.Direction  test.o
    0x08005b3c   0x08005b3c   0x00000010   Data   RO          714    .rodata.AHBPrescTable  system_stm32f1xx.o
    0x08005b4c   0x08005b4c   0x00000008   Data   RO          715    .rodata.APBPrescTable  system_stm32f1xx.o
    0x08005b54   0x08005b54   0x00000007   Data   RO          169    .rodata.CHANNEL_OFFSET_TAB  spi.o
    0x08005b5b   0x08005b5b   0x00000007   Data   RO          937    .rodata.CHANNEL_OFFSET_TAB  tft_ll.o
    0x08005b62   0x08005b62   0x00000474   Data   RO         1016    .rodata.asc2_1206   gui.o
    0x08005fd6   0x08005fd6   0x000005f0   Data   RO         1017    .rodata.asc2_1608   gui.o
    0x080065c6   0x080065c6   0x00000c80   Data   RO          965    .rodata.gImage_qq   test.o
    0x08007246   0x08007246   0x00000038   Data   RO          293    .rodata.str1.1      stm32f1xx_ll_gpio.o
    0x0800727e   0x0800727e   0x00000038   Data   RO          540    .rodata.str1.1      stm32f1xx_ll_exti.o
    0x080072b6   0x080072b6   0x00000037   Data   RO          576    .rodata.str1.1      stm32f1xx_ll_spi.o
    0x080072ed   0x080072ed   0x00000039   Data   RO          701    .rodata.str1.1      stm32f1xx_ll_usart.o
    0x08007326   0x08007326   0x0000027c   Data   RO          967    .rodata.str1.1      test.o
    0x080075a2   0x080075a2   0x0000083c   Data   RO         1018    .rodata.tfont16     gui.o
    0x08007dde   0x08007dde   0x00000206   Data   RO         1019    .rodata.tfont24     gui.o
    0x08007fe4   0x08007fe4   0x00000208   Data   RO         1020    .rodata.tfont32     gui.o
    0x080081ec   0x080081ec   0x00000020   Data   RO         1311    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08008210, Size: 0x000006b0, Max: 0x0000c000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08008210   0x0000000a   Data   RW          966    .data.ColorTab      test.o
    0x2000000a   0x0800821a   0x00000002   PAD
    0x2000000c   0x0800821c   0x00000004   Data   RW          713    .data.SystemCoreClock  system_stm32f1xx.o
    0x20000010   0x08008220   0x00000001   Data   RW          928    .data.dummyByte     tft_ll.o
    0x20000011   0x08008221   0x00000007   PAD
    0x20000018        -       0x00000060   Zero   RW         1187    .bss                c_w.l(libspace.o)
    0x20000078        -       0x00000002   Zero   RW          747    .bss.POINT_COLOR    tft.o
    0x2000007a   0x08008221   0x00000002   PAD
    0x2000007c        -       0x00000004   Zero   RW           65    .bss._1ms_cnt       main.o
    0x20000080        -       0x00000002   Zero   RW          933    .bss.curEl          tft_ll.o
    0x20000082   0x08008221   0x00000002   PAD
    0x20000084        -       0x00000004   Zero   RW          932    .bss.curMsg         tft_ll.o
    0x20000088        -       0x00000001   Zero   RW          934    .bss.firstByte      tft_ll.o
    0x20000089        -       0x00000001   Zero   RW          784    .bss.hCnt           spi_handler.o
    0x2000008a   0x08008221   0x00000002   PAD
    0x2000008c        -       0x00000004   Zero   RW          782    .bss.handlerList    spi_handler.o
    0x20000090        -       0x00000004   Zero   RW          935    .bss.handlerStatus  tft_ll.o
    0x20000094        -       0x00000001   Zero   RW          267    .bss.itCnt          stm32f1xx_it.o
    0x20000095   0x08008221   0x00000001   PAD
    0x20000096        -       0x0000000e   Zero   RW          749    .bss.lcddev         tft.o
    0x200000a4        -       0x00000004   Zero   RW          931    .bss.msgFifo        tft_ll.o
    0x200000a8        -       0x00000001   Zero   RW          783    .bss.spiStep        spi_handler.o
    0x200000a9        -       0x00000001   Zero   RW          929    .bss.step           tft_ll.o
    0x200000aa        -       0x00000001   Zero   RW          930    .bss.tCnt           tft_ll.o
    0x200000ab   0x08008221   0x00000001   PAD
    0x200000ac        -       0x00000004   Zero   RW          936    .bss.tftStatus      tft_ll.o
    0x200000b0        -       0x00000200   Zero   RW            2    HEAP                startup_stm32f103xe.o
    0x200002b0        -       0x00000400   Zero   RW            1    STACK               startup_stm32f103xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       400          0          0          0          0       4485   dma.o
       394          0          0          0          0       2549   fifo.o
      1074          0          0          0          0       3279   gpio.o
      4802          0       5806          0          0       9961   gui.o
      1044          0          0          0          4       7932   main.o
      1374          0          7          0          0       7263   spi.o
       898          0          0          0          6       3806   spi_handler.o
        64         26        304          0       1536        804   startup_stm32f103xe.o
       400          0          0          0          1       3594   stm32f1xx_it.o
       614          0         56          0          0       2844   stm32f1xx_ll_exti.o
       796          0         56          0          0       3254   stm32f1xx_ll_gpio.o
       466          0          0          0          0       4556   stm32f1xx_ll_rcc.o
      1014          0         55          0          0       4564   stm32f1xx_ll_spi.o
       826          0         57          0          0       4301   stm32f1xx_ll_usart.o
       168          0          0          0          0       6181   stm32f1xx_ll_utils.o
         2          0         24          4          0       1569   system_stm32f1xx.o
      2488          0       3852         10          0       2768   test.o
      1816          4          0          0         16       3397   tft.o
      2984          0          7          1         21      11704   tft_ll.o
       240          0          0          0          0       2199   usart.o

    ----------------------------------------------------------------------
     22052         30      10256         20       1596      91010   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       188          0          0          5         12          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        18          0          0          0          0         80   exit.o
        94          0          0          0          0         80   h1_alloc.o
        52          0          0          0          0         68   h1_extend.o
        78          0          0          0          0         80   h1_free.o
        14          0          0          0          0         84   h1_init.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
       138          0          0          0          0        168   init_alloc.o
         2          0          0          0          0          0   libinit.o
        10          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         0          0          0          0          0          0   maybetermalloc1.o
         8          4          0          0          0         68   rt_heap_descriptor_intlibspace.o
        78          0          0          0          0         80   rt_memclr_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       984         78          0          0         96       1812   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       976         78          0          0         96       1812   c_w.l

    ----------------------------------------------------------------------
       984         78          0          0         96       1812   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     23036        108      10256         20       1692      91574   Grand Totals
     23036        108      10256         20       1692      91574   ELF Image Totals
     23036        108      10256         20          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                33292 (  32.51kB)
    Total RW  Size (RW Data + ZI Data)              1712 (   1.67kB)
    Total ROM Size (Code + RO Data + RW Data)      33312 (  32.53kB)

==============================================================================

