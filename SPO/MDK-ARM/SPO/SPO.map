Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    startup_stm32f103xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(RESET) refers to startup_stm32f103xe.o(STACK) for __initial_sp
    startup_stm32f103xe.o(RESET) refers to startup_stm32f103xe.o(.text) for Reset_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.NMI_Handler) for NMI_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.MemManage_Handler) for MemManage_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.BusFault_Handler) for BusFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.UsageFault_Handler) for UsageFault_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.DebugMon_Handler) for DebugMon_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f103xe.o(RESET) refers to stm32f1xx_it.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f103xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f103xe.o(.text) refers to system_stm32f1xx.o(.text.SystemInit) for SystemInit
    startup_stm32f103xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f103xe.o(.text) refers to startup_stm32f103xe.o(HEAP) for Heap_Mem
    startup_stm32f103xe.o(.text) refers to startup_stm32f103xe.o(STACK) for Stack_Mem
    main.o(.text.main) refers to fifo.o(.text.testFifo) for testFifo
    main.o(.text.main) refers to spi_handler.o(.text.testSPIHandler) for testSPIHandler
    main.o(.text.main) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    main.o(.text.main) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    main.o(.text.main) refers to main.o(.text.__NVIC_SetPriorityGrouping) for __NVIC_SetPriorityGrouping
    main.o(.text.main) refers to main.o(.text.__NVIC_GetPriorityGrouping) for __NVIC_GetPriorityGrouping
    main.o(.text.main) refers to main.o(.text.NVIC_EncodePriority) for NVIC_EncodePriority
    main.o(.text.main) refers to main.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    main.o(.text.main) refers to main.o(.text.LL_GPIO_AF_Remap_SWJ_NOJTAG) for LL_GPIO_AF_Remap_SWJ_NOJTAG
    main.o(.text.main) refers to main.o(.text.SystemClock_Config) for SystemClock_Config
    main.o(.text.main) refers to gpio.o(.text.MX_GPIO_Init) for MX_GPIO_Init
    main.o(.text.main) refers to spi.o(.text.MX_SPI1_Init) for MX_SPI1_Init
    main.o(.text.main) refers to spi.o(.text.MX_SPI2_Init) for MX_SPI2_Init
    main.o(.text.main) refers to tim.o(.text.MX_TIM3_Init) for MX_TIM3_Init
    main.o(.text.main) refers to usart.o(.text.MX_USART1_UART_Init) for MX_USART1_UART_Init
    main.o(.text.main) refers to rtc.o(.text.MX_RTC_Init) for MX_RTC_Init
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to main.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to main.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping) refers to main.o(.text.__NVIC_SetPriorityGrouping) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_SetPriority) refers to main.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.NVIC_EncodePriority) refers to main.o(.text.NVIC_EncodePriority) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping) refers to main.o(.text.__NVIC_GetPriorityGrouping) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_GPIO_AF_Remap_SWJ_NOJTAG) refers to main.o(.text.LL_GPIO_AF_Remap_SWJ_NOJTAG) for [Anonymous Symbol]
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_HSE_Enable) for LL_RCC_HSE_Enable
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_PWR_EnableBkUpAccess) for LL_PWR_EnableBkUpAccess
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_GetRTCClockSource) for LL_RCC_GetRTCClockSource
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_ForceBackupDomainReset) for LL_RCC_ForceBackupDomainReset
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_ReleaseBackupDomainReset) for LL_RCC_ReleaseBackupDomainReset
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_LSE_Enable) for LL_RCC_LSE_Enable
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_LSE_IsReady) for LL_RCC_LSE_IsReady
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetRTCClockSource) for LL_RCC_SetRTCClockSource
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_EnableRTC) for LL_RCC_EnableRTC
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetAPB2Prescaler) for LL_RCC_SetAPB2Prescaler
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    main.o(.text.SystemClock_Config) refers to main.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    main.o(.text.SystemClock_Config) refers to stm32f1xx_ll_utils.o(.text.LL_Init1msTick) for LL_Init1msTick
    main.o(.text.SystemClock_Config) refers to stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    main.o(.ARM.exidx.text.SystemClock_Config) refers to main.o(.text.SystemClock_Config) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to main.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to main.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_HSE_Enable) refers to main.o(.text.LL_RCC_HSE_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to main.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess) refers to main.o(.text.LL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_GetRTCClockSource) refers to main.o(.text.LL_RCC_GetRTCClockSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_ForceBackupDomainReset) refers to main.o(.text.LL_RCC_ForceBackupDomainReset) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_ReleaseBackupDomainReset) refers to main.o(.text.LL_RCC_ReleaseBackupDomainReset) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_LSE_Enable) refers to main.o(.text.LL_RCC_LSE_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_LSE_IsReady) refers to main.o(.text.LL_RCC_LSE_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetRTCClockSource) refers to main.o(.text.LL_RCC_SetRTCClockSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_EnableRTC) refers to main.o(.text.LL_RCC_EnableRTC) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS) refers to main.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to main.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to main.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to main.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to main.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler) refers to main.o(.text.LL_RCC_SetAPB2Prescaler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to main.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to main.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Error_Handler) refers to main.o(.text.Error_Handler) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.assert_failed) refers to main.o(.text.assert_failed) for [Anonymous Symbol]
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    gpio.o(.text.MX_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_GPIO_AF_SetEXTISource) for LL_GPIO_AF_SetEXTISource
    gpio.o(.text.MX_GPIO_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) for LL_EXTI_Init
    gpio.o(.text.MX_GPIO_Init) refers to gpio.o(.text.LL_GPIO_SetPinMode) for LL_GPIO_SetPinMode
    gpio.o(.ARM.exidx.text.MX_GPIO_Init) refers to gpio.o(.text.MX_GPIO_Init) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to gpio.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin) refers to gpio.o(.text.LL_GPIO_ResetOutputPin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_GPIO_AF_SetEXTISource) refers to gpio.o(.text.LL_GPIO_AF_SetEXTISource) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode) refers to gpio.o(.text.LL_GPIO_SetPinMode) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.INIT_SPI_LCD) refers to gpio.o(.text.INIT_SPI_LCD) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.INIT_PARAL_LCD) refers to gpio.o(.text.INIT_PARAL_LCD) for [Anonymous Symbol]
    rtc.o(.text.MX_RTC_Init) refers to rtc.o(.text.LL_PWR_EnableBkUpAccess) for LL_PWR_EnableBkUpAccess
    rtc.o(.text.MX_RTC_Init) refers to rtc.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    rtc.o(.text.MX_RTC_Init) refers to rtc.o(.text.LL_RCC_EnableRTC) for LL_RCC_EnableRTC
    rtc.o(.text.MX_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) for LL_RTC_Init
    rtc.o(.text.MX_RTC_Init) refers to rtc.o(.text.LL_RTC_SetAsynchPrescaler) for LL_RTC_SetAsynchPrescaler
    rtc.o(.text.MX_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) for LL_RTC_TIME_Init
    rtc.o(.ARM.exidx.text.MX_RTC_Init) refers to rtc.o(.text.MX_RTC_Init) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess) refers to rtc.o(.text.LL_PWR_EnableBkUpAccess) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to rtc.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.LL_RCC_EnableRTC) refers to rtc.o(.text.LL_RCC_EnableRTC) for [Anonymous Symbol]
    rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler) refers to rtc.o(.text.LL_RTC_SetAsynchPrescaler) for [Anonymous Symbol]
    spi.o(.text.MX_SPI1_Init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    spi.o(.text.MX_SPI1_Init) refers to spi.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    spi.o(.text.MX_SPI1_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    spi.o(.text.MX_SPI1_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_Init) for LL_SPI_Init
    spi.o(.ARM.exidx.text.MX_SPI1_Init) refers to spi.o(.text.MX_SPI1_Init) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to spi.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    spi.o(.text.MX_SPI2_Init) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    spi.o(.text.MX_SPI2_Init) refers to spi.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    spi.o(.text.MX_SPI2_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    spi.o(.text.MX_SPI2_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_Init) for LL_SPI_Init
    spi.o(.ARM.exidx.text.MX_SPI2_Init) refers to spi.o(.text.MX_SPI2_Init) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to spi.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_APB1_GRP1_EnableClock) for LL_APB1_GRP1_EnableClock
    tim.o(.text.MX_TIM3_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_Init) for LL_TIM_Init
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_DisableARRPreload) for LL_TIM_DisableARRPreload
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_OC_EnablePreload) for LL_TIM_OC_EnablePreload
    tim.o(.text.MX_TIM3_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) for LL_TIM_OC_Init
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_OC_DisableFast) for LL_TIM_OC_DisableFast
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_SetTriggerOutput) for LL_TIM_SetTriggerOutput
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_TIM_DisableMasterSlaveMode) for LL_TIM_DisableMasterSlaveMode
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    tim.o(.text.MX_TIM3_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    tim.o(.text.MX_TIM3_Init) refers to tim.o(.text.LL_GPIO_AF_EnableRemap_TIM3) for LL_GPIO_AF_EnableRemap_TIM3
    tim.o(.ARM.exidx.text.MX_TIM3_Init) refers to tim.o(.text.MX_TIM3_Init) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock) refers to tim.o(.text.LL_APB1_GRP1_EnableClock) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_DisableARRPreload) refers to tim.o(.text.LL_TIM_DisableARRPreload) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_EnablePreload) refers to tim.o(.rodata.OFFSET_TAB_CCMRx) for OFFSET_TAB_CCMRx
    tim.o(.text.LL_TIM_OC_EnablePreload) refers to tim.o(.rodata.SHIFT_TAB_OCxx) for SHIFT_TAB_OCxx
    tim.o(.ARM.exidx.text.LL_TIM_OC_EnablePreload) refers to tim.o(.text.LL_TIM_OC_EnablePreload) for [Anonymous Symbol]
    tim.o(.text.LL_TIM_OC_DisableFast) refers to tim.o(.rodata.OFFSET_TAB_CCMRx) for OFFSET_TAB_CCMRx
    tim.o(.text.LL_TIM_OC_DisableFast) refers to tim.o(.rodata.SHIFT_TAB_OCxx) for SHIFT_TAB_OCxx
    tim.o(.ARM.exidx.text.LL_TIM_OC_DisableFast) refers to tim.o(.text.LL_TIM_OC_DisableFast) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput) refers to tim.o(.text.LL_TIM_SetTriggerOutput) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_TIM_DisableMasterSlaveMode) refers to tim.o(.text.LL_TIM_DisableMasterSlaveMode) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to tim.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    tim.o(.ARM.exidx.text.LL_GPIO_AF_EnableRemap_TIM3) refers to tim.o(.text.LL_GPIO_AF_EnableRemap_TIM3) for [Anonymous Symbol]
    usart.o(.text.MX_USART1_UART_Init) refers to usart.o(.text.LL_APB2_GRP1_EnableClock) for LL_APB2_GRP1_EnableClock
    usart.o(.text.MX_USART1_UART_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    usart.o(.text.MX_USART1_UART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_Init) for LL_USART_Init
    usart.o(.text.MX_USART1_UART_Init) refers to usart.o(.text.LL_USART_ConfigAsyncMode) for LL_USART_ConfigAsyncMode
    usart.o(.text.MX_USART1_UART_Init) refers to usart.o(.text.LL_USART_Enable) for LL_USART_Enable
    usart.o(.ARM.exidx.text.MX_USART1_UART_Init) refers to usart.o(.text.MX_USART1_UART_Init) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock) refers to usart.o(.text.LL_APB2_GRP1_EnableClock) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode) refers to usart.o(.text.LL_USART_ConfigAsyncMode) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.LL_USART_Enable) refers to usart.o(.text.LL_USART_Enable) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.NMI_Handler) refers to stm32f1xx_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.HardFault_Handler) refers to stm32f1xx_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.MemManage_Handler) refers to stm32f1xx_it.o(.text.MemManage_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.BusFault_Handler) refers to stm32f1xx_it.o(.text.BusFault_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.UsageFault_Handler) refers to stm32f1xx_it.o(.text.UsageFault_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.SVC_Handler) refers to stm32f1xx_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.DebugMon_Handler) refers to stm32f1xx_it.o(.text.DebugMon_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.PendSV_Handler) refers to stm32f1xx_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    stm32f1xx_it.o(.ARM.exidx.text.SysTick_Handler) refers to stm32f1xx_it.o(.text.SysTick_Handler) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32f1xx_ll_gpio.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) refers to stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for LL_GPIO_SetPinPull
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for LL_GPIO_SetPinMode
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for LL_GPIO_SetPinSpeed
    stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for LL_GPIO_SetPinOutputType
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinPull) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinMode) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType) for [Anonymous Symbol]
    stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for LL_RTC_WaitForSynchro
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for LL_RTC_ClearFlag_RS
    stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DeInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF) for LL_RTC_IsActiveFlag_RTOF
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection) for LL_RTC_DisableWriteProtection
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnterInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for LL_RTC_EnableWriteProtection
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF) for LL_RTC_IsActiveFlag_RTOF
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ExitInitMode) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for LL_RTC_ClearFlag_RS
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS) for LL_RTC_IsActiveFlag_RS
    stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for LL_SYSTICK_IsActiveCounterFlag
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_WaitForSynchro) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_RS) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro) for LL_RTC_WaitForSynchro
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR) for LL_RTC_ClearFlag_ALR
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW) for LL_RTC_ClearFlag_OW
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC) for LL_RTC_ClearFlag_SEC
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TAMPER_Disable) for LL_RTC_TAMPER_Disable
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_SetOutputSource) for LL_RTC_SetOutputSource
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler) for LL_RTC_SetAsynchPrescaler
    stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_Init) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_ALR) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_OW) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_SEC) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TAMPER_Disable) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TAMPER_Disable) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetOutputSource) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_SetOutputSource) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_StructInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Set) for LL_RTC_TIME_Set
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Set) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Set) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_StructInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Set) for LL_RTC_ALARM_Set
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Init) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Set) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Set) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_StructInit) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RTOF) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag) refers to stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Set) for LL_RTC_TIME_Set
    stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode) for LL_RTC_EnterInitMode
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Set) for LL_RTC_ALARM_Set
    stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode) for LL_RTC_ExitInitMode
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_SetCounter) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter) for [Anonymous Symbol]
    stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RS) refers to stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for LL_RCC_HSI_SetCalibTrimming
    stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_ClearResetFlags) for LL_RCC_ClearResetFlags
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_ClearResetFlags) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_ClearResetFlags) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for RCC_GetPCLK1ClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for LL_RCC_GetAPB1Prescaler
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) refers to system_stm32f1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for LL_RCC_GetAPB2Prescaler
    stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) refers to system_stm32f1xx.o(.rodata.APBPrescTable) for APBPrescTable
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource) for LL_RCC_GetUSBClockSource
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for RCC_PLL_GetFreqDomain_SYS
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for LL_RCC_PLL_GetMainSource
    stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetPrediv) for LL_RCC_PLL_GetPrediv
    stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator) for LL_RCC_PLL_GetMultiplicator
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS) refers to stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockSource) for LL_RCC_GetADCClockSource
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq) for RCC_GetSystemClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq) for RCC_GetHCLKClockFreq
    stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq) for RCC_GetPCLK2ClockFreq
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetPrediv) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetPrediv) for [Anonymous Symbol]
    stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMultiplicator) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_Init1msTick) refers to stm32f1xx_ll_utils.o(.text.LL_InitTick) for LL_InitTick
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick) refers to stm32f1xx_ll_utils.o(.text.LL_Init1msTick) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_InitTick) refers to stm32f1xx_ll_utils.o(.text.LL_InitTick) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_mDelay) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) refers to system_stm32f1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock) refers to stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f1xx_ll_utils.o(.text.LL_FLASH_SetLatency) for LL_FLASH_SetLatency
    stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency) refers to stm32f1xx_ll_utils.o(.text.LL_FLASH_GetLatency) for LL_FLASH_GetLatency
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency) refers to stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency) refers to stm32f1xx_ll_utils.o(.text.LL_FLASH_SetLatency) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency) refers to stm32f1xx_ll_utils.o(.text.LL_FLASH_GetLatency) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for LL_RCC_HSI_IsReady
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for LL_RCC_HSI_Enable
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI) refers to stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) refers to stm32f1xx_ll_utils.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency) refers to stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_Enable) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f1xx.o(.data.SystemCoreClock) for SystemCoreClock
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_GetAHBPrescaler) for LL_RCC_GetAHBPrescaler
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency) for LL_SetFlashLatency
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for LL_RCC_PLL_Enable
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for LL_RCC_PLL_IsReady
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for LL_RCC_SetAHBPrescaler
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for LL_RCC_SetSysClkSource
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for LL_RCC_GetSysClkSource
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for LL_RCC_SetAPB1Prescaler
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for LL_RCC_SetAPB2Prescaler
    stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock) for LL_SetSystemCoreClock
    stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem) refers to stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency) for UTILS_GetPLLOutputFrequency
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) for UTILS_PLL_HSE_ConfigSystemClock
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS) for LL_RCC_PLL_ConfigDomain_SYS
    stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem) for UTILS_EnablePLLAndSwitchSystem
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE) refers to stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy) for UTILS_PLL_IsBusy
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for LL_RCC_HSE_IsReady
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for LL_RCC_HSE_EnableBypass
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for LL_RCC_HSE_DisableBypass
    stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for LL_RCC_HSE_Enable
    stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_HSE_ConfigSystemClock) refers to stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_Enable) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_IsReady) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_GetAHBPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_Enable) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetSysClkSource) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_GetSysClkSource) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler) for [Anonymous Symbol]
    stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler) refers to stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31) for LL_EXTI_DisableEvent_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31) for LL_EXTI_EnableIT_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31) for LL_EXTI_DisableIT_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31) for LL_EXTI_EnableEvent_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31) for LL_EXTI_DisableFallingTrig_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31) for LL_EXTI_EnableRisingTrig_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31) for LL_EXTI_DisableRisingTrig_0_31
    stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31) for LL_EXTI_EnableFallingTrig_0_31
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_Init) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig_0_31) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31) for [Anonymous Symbol]
    stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit) refers to stm32f1xx_ll_exti.o(.text.LL_EXTI_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_SPI_Init) refers to stm32f1xx_ll_spi.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_spi.o(.text.LL_SPI_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_spi.o(.text.LL_SPI_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_IsEnabled) for LL_SPI_IsEnabled
    stm32f1xx_ll_spi.o(.text.LL_SPI_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial) for LL_SPI_SetCRCPolynomial
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_Init) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_Init) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_IsEnabled) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_IsEnabled) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_SetCRCPolynomial) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_StructInit) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_I2S_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit) for LL_SPI_DeInit
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_DeInit) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_I2S_Init) refers to stm32f1xx_ll_spi.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_spi.o(.text.LL_I2S_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_spi.o(.text.LL_I2S_Init) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_IsEnabled) for LL_I2S_IsEnabled
    stm32f1xx_ll_spi.o(.text.LL_I2S_Init) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_Init) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_Init) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_IsEnabled) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_IsEnabled) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_StructInit) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler) refers to stm32f1xx_ll_spi.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_ConfigPrescaler) refers to stm32f1xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for LL_DMA_ClearFlag_GI1
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for LL_DMA_ClearFlag_GI2
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for LL_DMA_ClearFlag_GI3
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4) for LL_DMA_ClearFlag_GI4
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5) for LL_DMA_ClearFlag_GI5
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI6) for LL_DMA_ClearFlag_GI6
    stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI7) for LL_DMA_ClearFlag_GI7
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI6) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI6) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI7) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI7) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for LL_DMA_ConfigTransfer
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for LL_DMA_SetMemoryAddress
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for LL_DMA_SetPeriphAddress
    stm32f1xx_ll_dma.o(.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetDataLength) for LL_DMA_SetDataLength
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_Init) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) refers to stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_ConfigTransfer) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) refers to stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) refers to stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.text.LL_DMA_SetDataLength) refers to stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB) for CHANNEL_OFFSET_TAB
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_SetDataLength) for [Anonymous Symbol]
    stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit) refers to stm32f1xx_ll_dma.o(.text.LL_DMA_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit) refers to stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit) refers to stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for LL_TIM_SetAutoReload
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for LL_TIM_SetPrescaler
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter) for LL_TIM_SetRepetitionCounter
    stm32f1xx_ll_tim.o(.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for LL_TIM_GenerateEvent_UPDATE
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetAutoReload) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetPrescaler) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetRepetitionCounter) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.OC1Config) for OC1Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.OC2Config) for OC2Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.OC3Config) for OC3Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.OC4Config) for OC4Config
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.OC1Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.OC1Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.OC1Config) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for LL_TIM_OC_SetCompareCH1
    stm32f1xx_ll_tim.o(.ARM.exidx.text.OC1Config) refers to stm32f1xx_ll_tim.o(.text.OC1Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.OC2Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.OC2Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.OC2Config) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    stm32f1xx_ll_tim.o(.ARM.exidx.text.OC2Config) refers to stm32f1xx_ll_tim.o(.text.OC2Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.OC3Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.OC3Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.OC3Config) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for LL_TIM_OC_SetCompareCH3
    stm32f1xx_ll_tim.o(.ARM.exidx.text.OC3Config) refers to stm32f1xx_ll_tim.o(.text.OC3Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.OC4Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.OC4Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.OC4Config) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for LL_TIM_OC_SetCompareCH4
    stm32f1xx_ll_tim.o(.ARM.exidx.text.OC4Config) refers to stm32f1xx_ll_tim.o(.text.OC4Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_IC_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.IC1Config) for IC1Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.IC2Config) for IC2Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.IC3Config) for IC3Config
    stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.IC4Config) for IC4Config
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.IC1Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.IC1Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.IC1Config) refers to stm32f1xx_ll_tim.o(.text.IC1Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.IC2Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.IC2Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.IC2Config) refers to stm32f1xx_ll_tim.o(.text.IC2Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.IC3Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.IC3Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.IC3Config) refers to stm32f1xx_ll_tim.o(.text.IC3Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.IC4Config) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.IC4Config) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.IC4Config) refers to stm32f1xx_ll_tim.o(.text.IC4Config) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for LL_TIM_SetEncoderMode
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_SetEncoderMode) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for LL_TIM_OC_SetCompareCH2
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_Init) refers to stm32f1xx_ll_tim.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_Init) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3) for [Anonymous Symbol]
    stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4) refers to stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ForceReset) for LL_APB2_GRP1_ForceReset
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ReleaseReset) for LL_APB2_GRP1_ReleaseReset
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset) for LL_APB1_GRP1_ForceReset
    stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset) for LL_APB1_GRP1_ReleaseReset
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_DeInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset) refers to stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset) refers to stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset) refers to stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset) refers to stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled) for LL_USART_IsEnabled
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetStopBitsLength) for LL_USART_SetStopBitsLength
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl) for LL_USART_SetHWFlowCtrl
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq) for LL_RCC_GetSystemClocksFreq
    stm32f1xx_ll_usart.o(.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetBaudRate) for LL_USART_SetBaudRate
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init) refers to stm32f1xx_ll_usart.o(.text.LL_USART_Init) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_IsEnabled) refers to stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetStopBitsLength) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetStopBitsLength) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetBaudRate) refers to stm32f1xx_ll_usart.o(.text.LL_USART_SetBaudRate) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_StructInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) refers to stm32f1xx_ll_usart.o(.rodata.str1.1) for .L.str
    stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) refers to main.o(.text.assert_failed) for assert_failed
    stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled) for LL_USART_IsEnabled
    stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput) for LL_USART_DisableSCLKOutput
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DisableSCLKOutput) refers to stm32f1xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput) for [Anonymous Symbol]
    stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit) refers to stm32f1xx_ll_usart.o(.text.LL_USART_ClockStructInit) for [Anonymous Symbol]
    system_stm32f1xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f1xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f1xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f1xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f1xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f1xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    tft.o(.text.initTFT) refers to fifo.o(.text.initFifo) for initFifo
    tft.o(.text.initTFT) refers to tft.o(.bss.msgFifo) for msgFifo
    tft.o(.text.initTFT) refers to tft.o(.bss.tftStatus) for tftStatus
    tft.o(.ARM.exidx.text.initTFT) refers to tft.o(.text.initTFT) for [Anonymous Symbol]
    tft.o(.text.processMsg) refers to h1_alloc.o(.text) for malloc
    tft.o(.text.processMsg) refers to tft.o(.bss.msgFifo) for msgFifo
    tft.o(.text.processMsg) refers to fifo.o(.text.push) for push
    tft.o(.text.processMsg) refers to tft.o(.text.tftSpiHandler) for tftSpiHandler
    tft.o(.text.processMsg) refers to spi_handler.o(.text.registerHandler) for registerHandler
    tft.o(.ARM.exidx.text.processMsg) refers to tft.o(.text.processMsg) for [Anonymous Symbol]
    tft.o(.text.tftSpiHandler) refers to tft.o(.bss.transResult) for transResult
    tft.o(.text.tftSpiHandler) refers to tft.o(.bss.msgFifo) for msgFifo
    tft.o(.text.tftSpiHandler) refers to fifo.o(.text.pop) for pop
    tft.o(.text.tftSpiHandler) refers to tft.o(.bss.curMsg) for curMsg
    tft.o(.text.tftSpiHandler) refers to tft.o(.text.sendCommand) for sendCommand
    tft.o(.text.tftSpiHandler) refers to tft.o(.text.receiveData) for receiveData
    tft.o(.ARM.exidx.text.tftSpiHandler) refers to tft.o(.text.tftSpiHandler) for [Anonymous Symbol]
    tft.o(.text.sendCommand) refers to tft.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft.o(.text.sendCommand) refers to tft.o(.text.selectCommand) for selectCommand
    tft.o(.text.sendCommand) refers to tft.o(.text.send) for send
    tft.o(.ARM.exidx.text.sendCommand) refers to tft.o(.text.sendCommand) for [Anonymous Symbol]
    tft.o(.text.receiveData) refers to tft.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft.o(.text.receiveData) refers to tft.o(.text.selectData) for selectData
    tft.o(.text.receiveData) refers to tft.o(.text.receive) for receive
    tft.o(.ARM.exidx.text.receiveData) refers to tft.o(.text.receiveData) for [Anonymous Symbol]
    tft.o(.text.enableTFTCommunication) refers to tft.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft.o(.ARM.exidx.text.enableTFTCommunication) refers to tft.o(.text.enableTFTCommunication) for [Anonymous Symbol]
    tft.o(.text.selectCommand) refers to tft.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft.o(.ARM.exidx.text.selectCommand) refers to tft.o(.text.selectCommand) for [Anonymous Symbol]
    tft.o(.text.send) refers to tft.o(.text.spiDMASend) for spiDMASend
    tft.o(.text.send) refers to tft.o(.text.spiITSend) for spiITSend
    tft.o(.ARM.exidx.text.send) refers to tft.o(.text.send) for [Anonymous Symbol]
    tft.o(.text.sendData) refers to tft.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft.o(.text.sendData) refers to tft.o(.text.selectData) for selectData
    tft.o(.text.sendData) refers to tft.o(.text.send) for send
    tft.o(.ARM.exidx.text.sendData) refers to tft.o(.text.sendData) for [Anonymous Symbol]
    tft.o(.text.selectData) refers to tft.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft.o(.ARM.exidx.text.selectData) refers to tft.o(.text.selectData) for [Anonymous Symbol]
    tft.o(.text.receive) refers to tft.o(.text.spiDMAReceive) for spiDMAReceive
    tft.o(.text.receive) refers to tft.o(.text.spiITReceive) for spiITReceive
    tft.o(.ARM.exidx.text.receive) refers to tft.o(.text.receive) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.spiDMASend) refers to tft.o(.text.spiDMASend) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.spiITSend) refers to tft.o(.text.spiITSend) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.spiDMAReceive) refers to tft.o(.text.spiDMAReceive) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.spiITReceive) refers to tft.o(.text.spiITReceive) for [Anonymous Symbol]
    tft.o(.text.spiManualSend) refers to tft.o(.bss.tftStatus) for tftStatus
    tft.o(.text.spiManualSend) refers to tft.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft.o(.text.spiManualSend) refers to tft.o(.text.LL_SPI_TransmitData8) for LL_SPI_TransmitData8
    tft.o(.text.spiManualSend) refers to tft.o(.text.LL_SPI_IsActiveFlag_BSY) for LL_SPI_IsActiveFlag_BSY
    tft.o(.text.spiManualSend) refers to tft.o(.text.disableTFTCommunication) for disableTFTCommunication
    tft.o(.ARM.exidx.text.spiManualSend) refers to tft.o(.text.spiManualSend) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.LL_SPI_TransmitData8) refers to tft.o(.text.LL_SPI_TransmitData8) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_BSY) refers to tft.o(.text.LL_SPI_IsActiveFlag_BSY) for [Anonymous Symbol]
    tft.o(.text.disableTFTCommunication) refers to tft.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft.o(.ARM.exidx.text.disableTFTCommunication) refers to tft.o(.text.disableTFTCommunication) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.spiManualReceive) refers to tft.o(.text.spiManualReceive) for [Anonymous Symbol]
    tft.o(.text.manualParalRead) refers to tft.o(.bss.tftStatus) for tftStatus
    tft.o(.text.manualParalRead) refers to tft.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft.o(.text.manualParalRead) refers to tft.o(.text.selectData) for selectData
    tft.o(.text.manualParalRead) refers to tft.o(.text.selectCommand) for selectCommand
    tft.o(.text.manualParalRead) refers to tft.o(.text.disableTFTCommunication) for disableTFTCommunication
    tft.o(.text.manualParalRead) refers to tft.o(.text.SetParalPortInput) for SetParalPortInput
    tft.o(.text.manualParalRead) refers to tft.o(.text.writeStrobe) for writeStrobe
    tft.o(.text.manualParalRead) refers to tft.o(.text.LL_GPIO_ReadInputPort) for LL_GPIO_ReadInputPort
    tft.o(.ARM.exidx.text.manualParalRead) refers to tft.o(.text.manualParalRead) for [Anonymous Symbol]
    tft.o(.text.SetParalPortInput) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    tft.o(.ARM.exidx.text.SetParalPortInput) refers to tft.o(.text.SetParalPortInput) for [Anonymous Symbol]
    tft.o(.text.writeStrobe) refers to tft.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft.o(.text.writeStrobe) refers to tft.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft.o(.ARM.exidx.text.writeStrobe) refers to tft.o(.text.writeStrobe) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.LL_GPIO_ReadInputPort) refers to tft.o(.text.LL_GPIO_ReadInputPort) for [Anonymous Symbol]
    tft.o(.text.manualParalSend) refers to tft.o(.bss.tftStatus) for tftStatus
    tft.o(.text.manualParalSend) refers to tft.o(.text.enableTFTCommunication) for enableTFTCommunication
    tft.o(.text.manualParalSend) refers to tft.o(.text.selectData) for selectData
    tft.o(.text.manualParalSend) refers to tft.o(.text.selectCommand) for selectCommand
    tft.o(.text.manualParalSend) refers to tft.o(.text.disableTFTCommunication) for disableTFTCommunication
    tft.o(.text.manualParalSend) refers to tft.o(.text.SetParalPortOutput) for SetParalPortOutput
    tft.o(.text.manualParalSend) refers to tft.o(.text.LL_GPIO_WriteOutputPort) for LL_GPIO_WriteOutputPort
    tft.o(.text.manualParalSend) refers to tft.o(.text.writeStrobe) for writeStrobe
    tft.o(.ARM.exidx.text.manualParalSend) refers to tft.o(.text.manualParalSend) for [Anonymous Symbol]
    tft.o(.text.SetParalPortOutput) refers to stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init) for LL_GPIO_Init
    tft.o(.ARM.exidx.text.SetParalPortOutput) refers to tft.o(.text.SetParalPortOutput) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.LL_GPIO_WriteOutputPort) refers to tft.o(.text.LL_GPIO_WriteOutputPort) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.paralItSend) refers to tft.o(.text.paralItSend) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.paralDMASend) refers to tft.o(.text.paralDMASend) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.paralItRead) refers to tft.o(.text.paralItRead) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.paralDMARead) refers to tft.o(.text.paralDMARead) for [Anonymous Symbol]
    tft.o(.text.rebootTFT) refers to tft.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft.o(.text.rebootTFT) refers to stm32f1xx_ll_utils.o(.text.LL_mDelay) for LL_mDelay
    tft.o(.text.rebootTFT) refers to tft.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft.o(.ARM.exidx.text.rebootTFT) refers to tft.o(.text.rebootTFT) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin) refers to tft.o(.text.LL_GPIO_ResetOutputPin) for [Anonymous Symbol]
    tft.o(.ARM.exidx.text.LL_GPIO_SetOutputPin) refers to tft.o(.text.LL_GPIO_SetOutputPin) for [Anonymous Symbol]
    tft.o(.text.readStrobe) refers to tft.o(.text.LL_GPIO_ResetOutputPin) for LL_GPIO_ResetOutputPin
    tft.o(.text.readStrobe) refers to tft.o(.text.LL_GPIO_SetOutputPin) for LL_GPIO_SetOutputPin
    tft.o(.ARM.exidx.text.readStrobe) refers to tft.o(.text.readStrobe) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.initHandler) refers to spi_handler.o(.text.initHandler) for [Anonymous Symbol]
    spi_handler.o(.text.findHandler) refers to spi_handler.o(.bss.handlerList) for handlerList
    spi_handler.o(.ARM.exidx.text.findHandler) refers to spi_handler.o(.text.findHandler) for [Anonymous Symbol]
    spi_handler.o(.text.findOrCreateHandler) refers to spi_handler.o(.bss.handlerList) for handlerList
    spi_handler.o(.text.findOrCreateHandler) refers to spi_handler.o(.text.createHandler) for createHandler
    spi_handler.o(.ARM.exidx.text.findOrCreateHandler) refers to spi_handler.o(.text.findOrCreateHandler) for [Anonymous Symbol]
    spi_handler.o(.text.createHandler) refers to h1_alloc.o(.text) for malloc
    spi_handler.o(.text.createHandler) refers to fifo.o(.text.initFifo) for initFifo
    spi_handler.o(.ARM.exidx.text.createHandler) refers to spi_handler.o(.text.createHandler) for [Anonymous Symbol]
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.text.findHandler) for findHandler
    spi_handler.o(.text.spiInterruptHandler) refers to spi_handler.o(.text.finishTransaction) for finishTransaction
    spi_handler.o(.text.spiInterruptHandler) refers to fifo.o(.text.pop) for pop
    spi_handler.o(.ARM.exidx.text.spiInterruptHandler) refers to spi_handler.o(.text.spiInterruptHandler) for [Anonymous Symbol]
    spi_handler.o(.text.finishTransaction) refers to spi_handler.o(.text.LL_SPI_DisableIT_ERR) for LL_SPI_DisableIT_ERR
    spi_handler.o(.text.finishTransaction) refers to spi_handler.o(.text.LL_SPI_DisableIT_RXNE) for LL_SPI_DisableIT_RXNE
    spi_handler.o(.text.finishTransaction) refers to spi_handler.o(.text.LL_SPI_DisableIT_TXE) for LL_SPI_DisableIT_TXE
    spi_handler.o(.ARM.exidx.text.finishTransaction) refers to spi_handler.o(.text.finishTransaction) for [Anonymous Symbol]
    spi_handler.o(.text.registerHandler) refers to spi_handler.o(.text.findOrCreateHandler) for findOrCreateHandler
    spi_handler.o(.text.registerHandler) refers to fifo.o(.text.push) for push
    spi_handler.o(.ARM.exidx.text.registerHandler) refers to spi_handler.o(.text.registerHandler) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_ERR) refers to spi_handler.o(.text.LL_SPI_DisableIT_ERR) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_RXNE) refers to spi_handler.o(.text.LL_SPI_DisableIT_RXNE) for [Anonymous Symbol]
    spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_TXE) refers to spi_handler.o(.text.LL_SPI_DisableIT_TXE) for [Anonymous Symbol]
    spi_handler.o(.text.testSPIHandler) refers to spi_handler.o(.text.testHandlerList) for testHandlerList
    spi_handler.o(.text.testSPIHandler) refers to spi_handler.o(.text.testRegistration) for testRegistration
    spi_handler.o(.ARM.exidx.text.testSPIHandler) refers to spi_handler.o(.text.testSPIHandler) for [Anonymous Symbol]
    spi_handler.o(.text.testHandlerList) refers to spi_handler.o(.text.findOrCreateHandler) for findOrCreateHandler
    spi_handler.o(.text.testHandlerList) refers to main.o(.text.Error_Handler) for Error_Handler
    spi_handler.o(.text.testHandlerList) refers to h1_free.o(.text) for free
    spi_handler.o(.ARM.exidx.text.testHandlerList) refers to spi_handler.o(.text.testHandlerList) for [Anonymous Symbol]
    spi_handler.o(.text.testRegistration) refers to spi_handler.o(.text.mockHandlerFunc) for mockHandlerFunc
    spi_handler.o(.text.testRegistration) refers to spi_handler.o(.text.registerHandler) for registerHandler
    spi_handler.o(.text.testRegistration) refers to spi_handler.o(.bss.cnt) for cnt
    spi_handler.o(.text.testRegistration) refers to main.o(.text.Error_Handler) for Error_Handler
    spi_handler.o(.ARM.exidx.text.testRegistration) refers to spi_handler.o(.text.testRegistration) for [Anonymous Symbol]
    spi_handler.o(.text.mockHandlerFunc) refers to spi_handler.o(.bss.cnt) for cnt
    spi_handler.o(.ARM.exidx.text.mockHandlerFunc) refers to spi_handler.o(.text.mockHandlerFunc) for [Anonymous Symbol]
    fifo.o(.text.pop) refers to h1_free.o(.text) for free
    fifo.o(.ARM.exidx.text.pop) refers to fifo.o(.text.pop) for [Anonymous Symbol]
    fifo.o(.text.push) refers to fifo.o(.text.initFifo) for initFifo
    fifo.o(.text.push) refers to h1_alloc.o(.text) for malloc
    fifo.o(.text.push) refers to fifo.o(.text.findTail) for findTail
    fifo.o(.ARM.exidx.text.push) refers to fifo.o(.text.push) for [Anonymous Symbol]
    fifo.o(.text.initFifo) refers to h1_alloc.o(.text) for malloc
    fifo.o(.ARM.exidx.text.initFifo) refers to fifo.o(.text.initFifo) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.findTail) refers to fifo.o(.text.findTail) for [Anonymous Symbol]
    fifo.o(.ARM.exidx.text.isEmpty) refers to fifo.o(.text.isEmpty) for [Anonymous Symbol]
    fifo.o(.text.testFifo) refers to fifo.o(.text.initFifo) for initFifo
    fifo.o(.text.testFifo) refers to main.o(.text.Error_Handler) for Error_Handler
    fifo.o(.text.testFifo) refers to fifo.o(.text.push) for push
    fifo.o(.text.testFifo) refers to fifo.o(.text.pop) for pop
    fifo.o(.ARM.exidx.text.testFifo) refers to fifo.o(.text.testFifo) for [Anonymous Symbol]
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_alloc.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_free.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_alloc_threads.o(.text) refers (Special) to h1_init.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to mutex_dummy.o(.text) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc1.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init.o(.text) for __Heap_Initialize
    h1_init_threads.o(.text) refers to mutex_dummy.o(.text) for _mutex_initialize
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free.o(.text) for free
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f103xe.o(.text) for __user_initial_stackheap
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_intlibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final.o(.text) for __Heap_Finalize
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_SetPriorityGrouping), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing main.o(.ARM.exidx.text.NVIC_EncodePriority), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_GetPriorityGrouping), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_GPIO_AF_Remap_SWJ_NOJTAG), (8 bytes).
    Removing main.o(.ARM.exidx.text.SystemClock_Config), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_HSE_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_GetRTCClockSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_ForceBackupDomainReset), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_ReleaseBackupDomainReset), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_LSE_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_LSE_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetRTCClockSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_EnableRTC), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing main.o(.ARM.exidx.text.Error_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.assert_failed), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.ARM.exidx.text.MX_GPIO_Init), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_GPIO_AF_SetEXTISource), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode), (8 bytes).
    Removing gpio.o(.text.INIT_SPI_LCD), (2 bytes).
    Removing gpio.o(.ARM.exidx.text.INIT_SPI_LCD), (8 bytes).
    Removing gpio.o(.text.INIT_PARAL_LCD), (2 bytes).
    Removing gpio.o(.ARM.exidx.text.INIT_PARAL_LCD), (8 bytes).
    Removing rtc.o(.text), (0 bytes).
    Removing rtc.o(.ARM.exidx.text.MX_RTC_Init), (8 bytes).
    Removing rtc.o(.ARM.exidx.text.LL_PWR_EnableBkUpAccess), (8 bytes).
    Removing rtc.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing rtc.o(.ARM.exidx.text.LL_RCC_EnableRTC), (8 bytes).
    Removing rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler), (8 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.ARM.exidx.text.MX_SPI1_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing spi.o(.ARM.exidx.text.MX_SPI2_Init), (8 bytes).
    Removing spi.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing tim.o(.text), (0 bytes).
    Removing tim.o(.ARM.exidx.text.MX_TIM3_Init), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_APB1_GRP1_EnableClock), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_DisableARRPreload), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_OC_EnablePreload), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_OC_DisableFast), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_SetTriggerOutput), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_TIM_DisableMasterSlaveMode), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing tim.o(.ARM.exidx.text.LL_GPIO_AF_EnableRemap_TIM3), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.MX_USART1_UART_Init), (8 bytes).
    Removing usart.o(.ARM.exidx.text.LL_APB2_GRP1_EnableClock), (8 bytes).
    Removing usart.o(.ARM.exidx.text.LL_USART_ConfigAsyncMode), (8 bytes).
    Removing usart.o(.ARM.exidx.text.LL_USART_Enable), (8 bytes).
    Removing stm32f1xx_it.o(.text), (0 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.MemManage_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.BusFault_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.UsageFault_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.DebugMon_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing stm32f1xx_it.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.text), (0 bytes).
    Removing stm32f1xx_ll_gpio.o(.text.LL_GPIO_DeInit), (396 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_DeInit), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.text.LL_APB2_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_Init), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinPull), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinMode), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinSpeed), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_SetPinOutputType), (8 bytes).
    Removing stm32f1xx_ll_gpio.o(.text.LL_GPIO_StructInit), (38 bytes).
    Removing stm32f1xx_ll_gpio.o(.ARM.exidx.text.LL_GPIO_StructInit), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text), (0 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_DeInit), (180 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DeInit), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_DisableWriteProtection), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnterInitMode), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ExitInitMode), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_WaitForSynchro), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_RS), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_EnableWriteProtection), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_Init), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_ALR), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_OW), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ClearFlag_SEC), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TAMPER_Disable), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetOutputSource), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_SetAsynchPrescaler), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_StructInit), (22 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_StructInit), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Init), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_Set), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_StructInit), (22 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_StructInit), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Init), (488 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Init), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_Set), (26 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_Set), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_StructInit), (22 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_StructInit), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RTOF), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_SYSTICK_IsActiveCounterFlag), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_SetCounter), (92 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_TIME_SetCounter), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.text.LL_RTC_ALARM_SetCounter), (92 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_ALARM_SetCounter), (8 bytes).
    Removing stm32f1xx_ll_rtc.o(.ARM.exidx.text.LL_RTC_IsActiveFlag_RS), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text), (0 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_DeInit), (126 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_DeInit), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_Enable), (18 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_SetSysClkSource), (28 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_IsReady), (16 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_HSI_SetCalibTrimming), (30 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_HSI_SetCalibTrimming), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_ClearResetFlags), (18 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_ClearResetFlags), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetSystemClocksFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetSystemClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetHCLKClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK1ClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_GetPCLK2ClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockFreq), (112 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetUSBClockSource), (22 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetUSBClockSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.RCC_PLL_GetFreqDomain_SYS), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockFreq), (96 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockFreq), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.text.LL_RCC_GetADCClockSource), (22 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetADCClockSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB1Prescaler), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_GetAPB2Prescaler), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMainSource), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetPrediv), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.ARM.exidx.text.LL_RCC_PLL_GetMultiplicator), (8 bytes).
    Removing stm32f1xx_ll_rcc.o(.rodata.str1.1), (55 bytes).
    Removing stm32f1xx_ll_utils.o(.text), (0 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_Init1msTick), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_InitTick), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_mDelay), (74 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_mDelay), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetSystemCoreClock), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_SetFlashLatency), (190 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_SetFlashLatency), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_FLASH_SetLatency), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_SetLatency), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_FLASH_GetLatency), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_FLASH_GetLatency), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSI), (118 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSI), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.UTILS_PLL_IsBusy), (34 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_IsBusy), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.UTILS_GetPLLOutputFrequency), (280 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_GetPLLOutputFrequency), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_IsReady), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_IsReady), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSI_Enable), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSI_Enable), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_ConfigDomain_SYS), (38 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_ConfigDomain_SYS), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.UTILS_EnablePLLAndSwitchSystem), (470 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_EnablePLLAndSwitchSystem), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_PLL_ConfigSystemClock_HSE), (216 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_PLL_ConfigSystemClock_HSE), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.UTILS_PLL_HSE_ConfigSystemClock), (94 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.UTILS_PLL_HSE_ConfigSystemClock), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_IsReady), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_IsReady), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_EnableBypass), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_EnableBypass), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_DisableBypass), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_DisableBypass), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_HSE_Enable), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_HSE_Enable), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_IsReady), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_IsReady), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_GetAHBPrescaler), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetAHBPrescaler), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_PLL_Enable), (18 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_PLL_Enable), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_SetAHBPrescaler), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAHBPrescaler), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_SetSysClkSource), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetSysClkSource), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_GetSysClkSource), (16 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_GetSysClkSource), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB1Prescaler), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB1Prescaler), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.text.LL_RCC_SetAPB2Prescaler), (28 bytes).
    Removing stm32f1xx_ll_utils.o(.ARM.exidx.text.LL_RCC_SetAPB2Prescaler), (8 bytes).
    Removing stm32f1xx_ll_utils.o(.rodata.str1.1), (57 bytes).
    Removing stm32f1xx_ll_exti.o(.text), (0 bytes).
    Removing stm32f1xx_ll_exti.o(.text.LL_EXTI_DeInit), (72 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DeInit), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_Init), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableEvent_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableIT_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableIT_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableEvent_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableFallingTrig_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableRisingTrig_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_DisableRisingTrig_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_EnableFallingTrig_0_31), (8 bytes).
    Removing stm32f1xx_ll_exti.o(.text.LL_EXTI_StructInit), (28 bytes).
    Removing stm32f1xx_ll_exti.o(.ARM.exidx.text.LL_EXTI_StructInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text), (0 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_SPI_DeInit), (206 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_DeInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_APB2_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_Init), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_IsEnabled), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_SetCRCPolynomial), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_SPI_StructInit), (52 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_SPI_StructInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_DeInit), (16 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_DeInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_Init), (662 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_Init), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_IsEnabled), (16 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_IsEnabled), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_StructInit), (36 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_StructInit), (8 bytes).
    Removing stm32f1xx_ll_spi.o(.text.LL_I2S_ConfigPrescaler), (152 bytes).
    Removing stm32f1xx_ll_spi.o(.ARM.exidx.text.LL_I2S_ConfigPrescaler), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text), (0 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_DeInit), (788 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_DeInit), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI1), (14 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI1), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI2), (14 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI2), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI3), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI3), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI4), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI4), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI5), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI5), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI6), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI6), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ClearFlag_GI7), (16 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ClearFlag_GI7), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_Init), (592 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_Init), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_ConfigTransfer), (54 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_ConfigTransfer), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_SetMemoryAddress), (36 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetMemoryAddress), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_SetPeriphAddress), (36 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetPeriphAddress), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_SetDataLength), (58 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_SetDataLength), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.text.LL_DMA_StructInit), (50 bytes).
    Removing stm32f1xx_ll_dma.o(.ARM.exidx.text.LL_DMA_StructInit), (8 bytes).
    Removing stm32f1xx_ll_dma.o(.rodata.str1.1), (55 bytes).
    Removing stm32f1xx_ll_dma.o(.rodata.CHANNEL_OFFSET_TAB), (7 bytes).
    Removing stm32f1xx_ll_pwr.o(.text), (0 bytes).
    Removing stm32f1xx_ll_pwr.o(.text.LL_PWR_DeInit), (26 bytes).
    Removing stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_PWR_DeInit), (8 bytes).
    Removing stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_pwr.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_pwr.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text), (0 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_DeInit), (436 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_DeInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_APB2_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_StructInit), (34 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetAutoReload), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetPrescaler), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetRepetitionCounter), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_GenerateEvent_UPDATE), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_OC_StructInit), (42 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.OC1Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.OC2Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.OC3Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.OC4Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_IC_StructInit), (30 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_IC_Init), (120 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_IC_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.IC1Config), (552 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.IC1Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.IC2Config), (554 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.IC2Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.IC3Config), (554 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.IC3Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.IC4Config), (554 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.IC4Config), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_StructInit), (52 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_ENCODER_Init), (1074 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_ENCODER_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_SetEncoderMode), (26 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_SetEncoderMode), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_StructInit), (26 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_HALLSENSOR_Init), (622 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_HALLSENSOR_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH2), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_StructInit), (38 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_StructInit), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.text.LL_TIM_BDTR_Init), (446 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_BDTR_Init), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH1), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH3), (8 bytes).
    Removing stm32f1xx_ll_tim.o(.ARM.exidx.text.LL_TIM_OC_SetCompareCH4), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text), (0 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_DeInit), (304 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DeInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_APB2_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB2_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ForceReset), (24 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ForceReset), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_APB1_GRP1_ReleaseReset), (24 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_APB1_GRP1_ReleaseReset), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_Init), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_IsEnabled), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetStopBitsLength), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetHWFlowCtrl), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_SetBaudRate), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_StructInit), (40 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_StructInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_ClockInit), (420 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockInit), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_DisableSCLKOutput), (18 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_DisableSCLKOutput), (8 bytes).
    Removing stm32f1xx_ll_usart.o(.text.LL_USART_ClockStructInit), (26 bytes).
    Removing stm32f1xx_ll_usart.o(.ARM.exidx.text.LL_USART_ClockStructInit), (8 bytes).
    Removing system_stm32f1xx.o(.text), (0 bytes).
    Removing system_stm32f1xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f1xx.o(.text.SystemCoreClockUpdate), (290 bytes).
    Removing system_stm32f1xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing tft.o(.text), (0 bytes).
    Removing tft.o(.text.initTFT), (36 bytes).
    Removing tft.o(.ARM.exidx.text.initTFT), (8 bytes).
    Removing tft.o(.text.processMsg), (250 bytes).
    Removing tft.o(.ARM.exidx.text.processMsg), (8 bytes).
    Removing tft.o(.text.tftSpiHandler), (404 bytes).
    Removing tft.o(.ARM.exidx.text.tftSpiHandler), (8 bytes).
    Removing tft.o(.text.sendCommand), (32 bytes).
    Removing tft.o(.ARM.exidx.text.sendCommand), (8 bytes).
    Removing tft.o(.text.receiveData), (32 bytes).
    Removing tft.o(.ARM.exidx.text.receiveData), (8 bytes).
    Removing tft.o(.text.enableTFTCommunication), (20 bytes).
    Removing tft.o(.ARM.exidx.text.enableTFTCommunication), (8 bytes).
    Removing tft.o(.text.selectCommand), (20 bytes).
    Removing tft.o(.ARM.exidx.text.selectCommand), (8 bytes).
    Removing tft.o(.text.send), (64 bytes).
    Removing tft.o(.ARM.exidx.text.send), (8 bytes).
    Removing tft.o(.text.sendData), (32 bytes).
    Removing tft.o(.ARM.exidx.text.sendData), (8 bytes).
    Removing tft.o(.text.selectData), (20 bytes).
    Removing tft.o(.ARM.exidx.text.selectData), (8 bytes).
    Removing tft.o(.text.receive), (64 bytes).
    Removing tft.o(.ARM.exidx.text.receive), (8 bytes).
    Removing tft.o(.text.spiDMASend), (12 bytes).
    Removing tft.o(.ARM.exidx.text.spiDMASend), (8 bytes).
    Removing tft.o(.text.spiITSend), (12 bytes).
    Removing tft.o(.ARM.exidx.text.spiITSend), (8 bytes).
    Removing tft.o(.text.spiDMAReceive), (12 bytes).
    Removing tft.o(.ARM.exidx.text.spiDMAReceive), (8 bytes).
    Removing tft.o(.text.spiITReceive), (12 bytes).
    Removing tft.o(.ARM.exidx.text.spiITReceive), (8 bytes).
    Removing tft.o(.text.spiManualSend), (190 bytes).
    Removing tft.o(.ARM.exidx.text.spiManualSend), (8 bytes).
    Removing tft.o(.text.LL_SPI_TransmitData8), (26 bytes).
    Removing tft.o(.ARM.exidx.text.LL_SPI_TransmitData8), (8 bytes).
    Removing tft.o(.text.LL_SPI_IsActiveFlag_BSY), (16 bytes).
    Removing tft.o(.ARM.exidx.text.LL_SPI_IsActiveFlag_BSY), (8 bytes).
    Removing tft.o(.text.disableTFTCommunication), (20 bytes).
    Removing tft.o(.ARM.exidx.text.disableTFTCommunication), (8 bytes).
    Removing tft.o(.text.spiManualReceive), (12 bytes).
    Removing tft.o(.ARM.exidx.text.spiManualReceive), (8 bytes).
    Removing tft.o(.text.manualParalRead), (194 bytes).
    Removing tft.o(.ARM.exidx.text.manualParalRead), (8 bytes).
    Removing tft.o(.text.SetParalPortInput), (48 bytes).
    Removing tft.o(.ARM.exidx.text.SetParalPortInput), (8 bytes).
    Removing tft.o(.text.writeStrobe), (38 bytes).
    Removing tft.o(.ARM.exidx.text.writeStrobe), (8 bytes).
    Removing tft.o(.text.LL_GPIO_ReadInputPort), (12 bytes).
    Removing tft.o(.ARM.exidx.text.LL_GPIO_ReadInputPort), (8 bytes).
    Removing tft.o(.text.manualParalSend), (230 bytes).
    Removing tft.o(.ARM.exidx.text.manualParalSend), (8 bytes).
    Removing tft.o(.text.SetParalPortOutput), (50 bytes).
    Removing tft.o(.ARM.exidx.text.SetParalPortOutput), (8 bytes).
    Removing tft.o(.text.LL_GPIO_WriteOutputPort), (16 bytes).
    Removing tft.o(.ARM.exidx.text.LL_GPIO_WriteOutputPort), (8 bytes).
    Removing tft.o(.text.paralItSend), (14 bytes).
    Removing tft.o(.ARM.exidx.text.paralItSend), (8 bytes).
    Removing tft.o(.text.paralDMASend), (14 bytes).
    Removing tft.o(.ARM.exidx.text.paralDMASend), (8 bytes).
    Removing tft.o(.text.paralItRead), (14 bytes).
    Removing tft.o(.ARM.exidx.text.paralItRead), (8 bytes).
    Removing tft.o(.text.paralDMARead), (14 bytes).
    Removing tft.o(.ARM.exidx.text.paralDMARead), (8 bytes).
    Removing tft.o(.text.rebootTFT), (42 bytes).
    Removing tft.o(.ARM.exidx.text.rebootTFT), (8 bytes).
    Removing tft.o(.text.LL_GPIO_ResetOutputPin), (18 bytes).
    Removing tft.o(.ARM.exidx.text.LL_GPIO_ResetOutputPin), (8 bytes).
    Removing tft.o(.text.LL_GPIO_SetOutputPin), (18 bytes).
    Removing tft.o(.ARM.exidx.text.LL_GPIO_SetOutputPin), (8 bytes).
    Removing tft.o(.text.readStrobe), (38 bytes).
    Removing tft.o(.ARM.exidx.text.readStrobe), (8 bytes).
    Removing tft.o(.bss.msgFifo), (4 bytes).
    Removing tft.o(.bss.tftStatus), (4 bytes).
    Removing tft.o(.bss.transResult), (4 bytes).
    Removing tft.o(.bss.curMsg), (4 bytes).
    Removing tft.o(.bss.curEl), (2 bytes).
    Removing spi_handler.o(.text), (0 bytes).
    Removing spi_handler.o(.text.initHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.initHandler), (8 bytes).
    Removing spi_handler.o(.text.findHandler), (82 bytes).
    Removing spi_handler.o(.ARM.exidx.text.findHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.findOrCreateHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.createHandler), (8 bytes).
    Removing spi_handler.o(.text.spiInterruptHandler), (158 bytes).
    Removing spi_handler.o(.ARM.exidx.text.spiInterruptHandler), (8 bytes).
    Removing spi_handler.o(.text.finishTransaction), (34 bytes).
    Removing spi_handler.o(.ARM.exidx.text.finishTransaction), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.registerHandler), (8 bytes).
    Removing spi_handler.o(.text.LL_SPI_DisableIT_ERR), (18 bytes).
    Removing spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_ERR), (8 bytes).
    Removing spi_handler.o(.text.LL_SPI_DisableIT_RXNE), (18 bytes).
    Removing spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_RXNE), (8 bytes).
    Removing spi_handler.o(.text.LL_SPI_DisableIT_TXE), (18 bytes).
    Removing spi_handler.o(.ARM.exidx.text.LL_SPI_DisableIT_TXE), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.testSPIHandler), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.testHandlerList), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.testRegistration), (8 bytes).
    Removing spi_handler.o(.ARM.exidx.text.mockHandlerFunc), (8 bytes).
    Removing fifo.o(.text), (0 bytes).
    Removing fifo.o(.ARM.exidx.text.pop), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.push), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.initFifo), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.findTail), (8 bytes).
    Removing fifo.o(.text.isEmpty), (38 bytes).
    Removing fifo.o(.ARM.exidx.text.isEmpty), (8 bytes).
    Removing fifo.o(.ARM.exidx.text.testFifo), (8 bytes).
    Removing fifo.o(.rodata..L__const.testFifo.fBuf), (5 bytes).
    Removing fifo.o(.rodata..L__const.testFifo.tBuf), (6 bytes).
    Removing wtc_logic.o(.text), (0 bytes).

490 unused section(s) (total 18407 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  mutex_dummy.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    FIFO.c                                   0x00000000   Number         0  fifo.o ABSOLUTE
    SPI_Handler.c                            0x00000000   Number         0  spi_handler.o ABSOLUTE
    TFT.c                                    0x00000000   Number         0  tft.o ABSOLUTE
    WTC_Logic.c                              0x00000000   Number         0  wtc_logic.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    rtc.c                                    0x00000000   Number         0  rtc.o ABSOLUTE
    spi.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    startup_stm32f103xe.s                    0x00000000   Number         0  startup_stm32f103xe.o ABSOLUTE
    stm32f1xx_it.c                           0x00000000   Number         0  stm32f1xx_it.o ABSOLUTE
    stm32f1xx_ll_dma.c                       0x00000000   Number         0  stm32f1xx_ll_dma.o ABSOLUTE
    stm32f1xx_ll_exti.c                      0x00000000   Number         0  stm32f1xx_ll_exti.o ABSOLUTE
    stm32f1xx_ll_gpio.c                      0x00000000   Number         0  stm32f1xx_ll_gpio.o ABSOLUTE
    stm32f1xx_ll_pwr.c                       0x00000000   Number         0  stm32f1xx_ll_pwr.o ABSOLUTE
    stm32f1xx_ll_rcc.c                       0x00000000   Number         0  stm32f1xx_ll_rcc.o ABSOLUTE
    stm32f1xx_ll_rtc.c                       0x00000000   Number         0  stm32f1xx_ll_rtc.o ABSOLUTE
    stm32f1xx_ll_spi.c                       0x00000000   Number         0  stm32f1xx_ll_spi.o ABSOLUTE
    stm32f1xx_ll_tim.c                       0x00000000   Number         0  stm32f1xx_ll_tim.o ABSOLUTE
    stm32f1xx_ll_usart.c                     0x00000000   Number         0  stm32f1xx_ll_usart.o ABSOLUTE
    stm32f1xx_ll_utils.c                     0x00000000   Number         0  stm32f1xx_ll_utils.o ABSOLUTE
    system_stm32f1xx.c                       0x00000000   Number         0  system_stm32f1xx.o ABSOLUTE
    tim.c                                    0x00000000   Number         0  tim.o ABSOLUTE
    usart.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    RESET                                    0x08000000   Section      304  startup_stm32f103xe.o(RESET)
    !!!main                                  0x08000130   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000138   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x0800016c   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000188   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x080001a4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x080001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x080001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x080001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000007          0x080001a6   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000007)
    .ARM.Collect$$libinit$$0000000C          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x080001ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x080001ae   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x080001b0   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x080001b2   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x080001b2   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x080001b4   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x080001b4   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x080001b4   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x080001ba   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x080001ba   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x080001be   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x080001be   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x080001c6   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x080001c8   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x080001c8   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x080001cc   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x080001d4   Section       64  startup_stm32f103xe.o(.text)
    .text                                    0x08000214   Section        0  h1_alloc.o(.text)
    .text                                    0x08000272   Section        0  h1_free.o(.text)
    .text                                    0x080002c0   Section       78  rt_memclr_w.o(.text)
    .text                                    0x0800030e   Section        0  heapauxi.o(.text)
    .text                                    0x08000314   Section        8  rt_heap_descriptor_intlibspace.o(.text)
    .text                                    0x0800031c   Section        0  hguard.o(.text)
    .text                                    0x08000320   Section        0  init_alloc.o(.text)
    .text                                    0x080003aa   Section        0  h1_init.o(.text)
    .text                                    0x080003b8   Section        8  libspace.o(.text)
    .text                                    0x080003c0   Section        0  maybetermalloc1.o(.text)
    .text                                    0x080003c0   Section        0  h1_extend.o(.text)
    .text                                    0x080003f4   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x08000402   Section        2  use_no_semi.o(.text)
    .text                                    0x08000404   Section        0  indicate_semi.o(.text)
    .text                                    0x08000404   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800044e   Section        0  exit.o(.text)
    .text                                    0x08000460   Section        0  defsig_exit.o(.text)
    .text                                    0x0800046c   Section        0  defsig_rtmem_inner.o(.text)
    .text                                    0x080004bc   Section        0  sys_exit.o(.text)
    .text                                    0x080004c8   Section        0  defsig_general.o(.text)
    .text                                    0x080004fa   Section        0  sys_wrch.o(.text)
    [Anonymous Symbol]                       0x08000508   Section        0  stm32f1xx_it.o(.text.BusFault_Handler)
    [Anonymous Symbol]                       0x0800050c   Section        0  stm32f1xx_it.o(.text.DebugMon_Handler)
    [Anonymous Symbol]                       0x08000510   Section        0  main.o(.text.Error_Handler)
    [Anonymous Symbol]                       0x08000520   Section        0  stm32f1xx_it.o(.text.HardFault_Handler)
    LL_APB1_GRP1_EnableClock                 0x08000525   Thumb Code    34  main.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000524   Section        0  main.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB1_GRP1_EnableClock                 0x08000549   Thumb Code    34  rtc.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000548   Section        0  rtc.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB1_GRP1_EnableClock                 0x0800056d   Thumb Code    34  spi.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x0800056c   Section        0  spi.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB1_GRP1_EnableClock                 0x08000591   Thumb Code    34  tim.o(.text.LL_APB1_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000590   Section        0  tim.o(.text.LL_APB1_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x080005b5   Thumb Code    34  main.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x080005b4   Section        0  main.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x080005d9   Thumb Code    34  gpio.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x080005d8   Section        0  gpio.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x080005fd   Thumb Code    34  spi.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x080005fc   Section        0  spi.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08000621   Thumb Code    34  tim.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000620   Section        0  tim.o(.text.LL_APB2_GRP1_EnableClock)
    LL_APB2_GRP1_EnableClock                 0x08000645   Thumb Code    34  usart.o(.text.LL_APB2_GRP1_EnableClock)
    [Anonymous Symbol]                       0x08000644   Section        0  usart.o(.text.LL_APB2_GRP1_EnableClock)
    LL_EXTI_DisableEvent_0_31                0x08000669   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31)
    [Anonymous Symbol]                       0x08000668   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableEvent_0_31)
    LL_EXTI_DisableFallingTrig_0_31          0x08000681   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31)
    [Anonymous Symbol]                       0x08000680   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableFallingTrig_0_31)
    LL_EXTI_DisableIT_0_31                   0x08000699   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31)
    [Anonymous Symbol]                       0x08000698   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableIT_0_31)
    LL_EXTI_DisableRisingTrig_0_31           0x080006b1   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31)
    [Anonymous Symbol]                       0x080006b0   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_DisableRisingTrig_0_31)
    LL_EXTI_EnableEvent_0_31                 0x080006c9   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31)
    [Anonymous Symbol]                       0x080006c8   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableEvent_0_31)
    LL_EXTI_EnableFallingTrig_0_31           0x080006e1   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31)
    [Anonymous Symbol]                       0x080006e0   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableFallingTrig_0_31)
    LL_EXTI_EnableIT_0_31                    0x080006f9   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31)
    [Anonymous Symbol]                       0x080006f8   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableIT_0_31)
    LL_EXTI_EnableRisingTrig_0_31            0x08000711   Thumb Code    24  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31)
    [Anonymous Symbol]                       0x08000710   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_EnableRisingTrig_0_31)
    [Anonymous Symbol]                       0x08000728   Section        0  stm32f1xx_ll_exti.o(.text.LL_EXTI_Init)
    LL_FLASH_GetLatency                      0x080008d1   Thumb Code    16  main.o(.text.LL_FLASH_GetLatency)
    [Anonymous Symbol]                       0x080008d0   Section        0  main.o(.text.LL_FLASH_GetLatency)
    LL_FLASH_SetLatency                      0x080008e1   Thumb Code    28  main.o(.text.LL_FLASH_SetLatency)
    [Anonymous Symbol]                       0x080008e0   Section        0  main.o(.text.LL_FLASH_SetLatency)
    LL_GPIO_AF_EnableRemap_TIM3              0x080008fd   Thumb Code    22  tim.o(.text.LL_GPIO_AF_EnableRemap_TIM3)
    [Anonymous Symbol]                       0x080008fc   Section        0  tim.o(.text.LL_GPIO_AF_EnableRemap_TIM3)
    LL_GPIO_AF_Remap_SWJ_NOJTAG              0x08000915   Thumb Code    24  main.o(.text.LL_GPIO_AF_Remap_SWJ_NOJTAG)
    [Anonymous Symbol]                       0x08000914   Section        0  main.o(.text.LL_GPIO_AF_Remap_SWJ_NOJTAG)
    LL_GPIO_AF_SetEXTISource                 0x0800092d   Thumb Code    56  gpio.o(.text.LL_GPIO_AF_SetEXTISource)
    [Anonymous Symbol]                       0x0800092c   Section        0  gpio.o(.text.LL_GPIO_AF_SetEXTISource)
    [Anonymous Symbol]                       0x08000964   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_GPIO_ResetOutputPin                   0x08000b95   Thumb Code    18  gpio.o(.text.LL_GPIO_ResetOutputPin)
    [Anonymous Symbol]                       0x08000b94   Section        0  gpio.o(.text.LL_GPIO_ResetOutputPin)
    LL_GPIO_SetPinMode                       0x08000ba9   Thumb Code    52  gpio.o(.text.LL_GPIO_SetPinMode)
    [Anonymous Symbol]                       0x08000ba8   Section        0  gpio.o(.text.LL_GPIO_SetPinMode)
    LL_GPIO_SetPinMode                       0x08000bdd   Thumb Code    52  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    [Anonymous Symbol]                       0x08000bdc   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinMode)
    LL_GPIO_SetPinOutputType                 0x08000c11   Thumb Code    52  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    [Anonymous Symbol]                       0x08000c10   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinOutputType)
    LL_GPIO_SetPinPull                       0x08000c45   Thumb Code    42  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    [Anonymous Symbol]                       0x08000c44   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinPull)
    LL_GPIO_SetPinSpeed                      0x08000c71   Thumb Code    52  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    [Anonymous Symbol]                       0x08000c70   Section        0  stm32f1xx_ll_gpio.o(.text.LL_GPIO_SetPinSpeed)
    [Anonymous Symbol]                       0x08000ca4   Section        0  stm32f1xx_ll_utils.o(.text.LL_Init1msTick)
    LL_InitTick                              0x08000cb9   Thumb Code    54  stm32f1xx_ll_utils.o(.text.LL_InitTick)
    [Anonymous Symbol]                       0x08000cb8   Section        0  stm32f1xx_ll_utils.o(.text.LL_InitTick)
    LL_PWR_EnableBkUpAccess                  0x08000cf1   Thumb Code    18  main.o(.text.LL_PWR_EnableBkUpAccess)
    [Anonymous Symbol]                       0x08000cf0   Section        0  main.o(.text.LL_PWR_EnableBkUpAccess)
    LL_PWR_EnableBkUpAccess                  0x08000d05   Thumb Code    18  rtc.o(.text.LL_PWR_EnableBkUpAccess)
    [Anonymous Symbol]                       0x08000d04   Section        0  rtc.o(.text.LL_PWR_EnableBkUpAccess)
    LL_RCC_EnableRTC                         0x08000d19   Thumb Code    18  main.o(.text.LL_RCC_EnableRTC)
    [Anonymous Symbol]                       0x08000d18   Section        0  main.o(.text.LL_RCC_EnableRTC)
    LL_RCC_EnableRTC                         0x08000d2d   Thumb Code    18  rtc.o(.text.LL_RCC_EnableRTC)
    [Anonymous Symbol]                       0x08000d2c   Section        0  rtc.o(.text.LL_RCC_EnableRTC)
    LL_RCC_ForceBackupDomainReset            0x08000d41   Thumb Code    18  main.o(.text.LL_RCC_ForceBackupDomainReset)
    [Anonymous Symbol]                       0x08000d40   Section        0  main.o(.text.LL_RCC_ForceBackupDomainReset)
    LL_RCC_GetAHBPrescaler                   0x08000d55   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler)
    [Anonymous Symbol]                       0x08000d54   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAHBPrescaler)
    LL_RCC_GetAPB1Prescaler                  0x08000d65   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler)
    [Anonymous Symbol]                       0x08000d64   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB1Prescaler)
    LL_RCC_GetAPB2Prescaler                  0x08000d75   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler)
    [Anonymous Symbol]                       0x08000d74   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetAPB2Prescaler)
    LL_RCC_GetRTCClockSource                 0x08000d85   Thumb Code    16  main.o(.text.LL_RCC_GetRTCClockSource)
    [Anonymous Symbol]                       0x08000d84   Section        0  main.o(.text.LL_RCC_GetRTCClockSource)
    LL_RCC_GetSysClkSource                   0x08000d95   Thumb Code    16  main.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08000d94   Section        0  main.o(.text.LL_RCC_GetSysClkSource)
    LL_RCC_GetSysClkSource                   0x08000da5   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08000da4   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSysClkSource)
    [Anonymous Symbol]                       0x08000db4   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_RCC_HSE_Enable                        0x08000ded   Thumb Code    18  main.o(.text.LL_RCC_HSE_Enable)
    [Anonymous Symbol]                       0x08000dec   Section        0  main.o(.text.LL_RCC_HSE_Enable)
    LL_RCC_HSE_IsReady                       0x08000e01   Thumb Code    16  main.o(.text.LL_RCC_HSE_IsReady)
    [Anonymous Symbol]                       0x08000e00   Section        0  main.o(.text.LL_RCC_HSE_IsReady)
    LL_RCC_LSE_Enable                        0x08000e11   Thumb Code    18  main.o(.text.LL_RCC_LSE_Enable)
    [Anonymous Symbol]                       0x08000e10   Section        0  main.o(.text.LL_RCC_LSE_Enable)
    LL_RCC_LSE_IsReady                       0x08000e25   Thumb Code    16  main.o(.text.LL_RCC_LSE_IsReady)
    [Anonymous Symbol]                       0x08000e24   Section        0  main.o(.text.LL_RCC_LSE_IsReady)
    LL_RCC_PLL_ConfigDomain_SYS              0x08000e35   Thumb Code    38  main.o(.text.LL_RCC_PLL_ConfigDomain_SYS)
    [Anonymous Symbol]                       0x08000e34   Section        0  main.o(.text.LL_RCC_PLL_ConfigDomain_SYS)
    LL_RCC_PLL_Enable                        0x08000e5d   Thumb Code    18  main.o(.text.LL_RCC_PLL_Enable)
    [Anonymous Symbol]                       0x08000e5c   Section        0  main.o(.text.LL_RCC_PLL_Enable)
    LL_RCC_PLL_GetMainSource                 0x08000e71   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource)
    [Anonymous Symbol]                       0x08000e70   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMainSource)
    LL_RCC_PLL_GetMultiplicator              0x08000e81   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator)
    [Anonymous Symbol]                       0x08000e80   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetMultiplicator)
    LL_RCC_PLL_GetPrediv                     0x08000e91   Thumb Code    16  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetPrediv)
    [Anonymous Symbol]                       0x08000e90   Section        0  stm32f1xx_ll_rcc.o(.text.LL_RCC_PLL_GetPrediv)
    LL_RCC_PLL_IsReady                       0x08000ea1   Thumb Code    16  main.o(.text.LL_RCC_PLL_IsReady)
    [Anonymous Symbol]                       0x08000ea0   Section        0  main.o(.text.LL_RCC_PLL_IsReady)
    LL_RCC_ReleaseBackupDomainReset          0x08000eb1   Thumb Code    18  main.o(.text.LL_RCC_ReleaseBackupDomainReset)
    [Anonymous Symbol]                       0x08000eb0   Section        0  main.o(.text.LL_RCC_ReleaseBackupDomainReset)
    LL_RCC_SetAHBPrescaler                   0x08000ec5   Thumb Code    28  main.o(.text.LL_RCC_SetAHBPrescaler)
    [Anonymous Symbol]                       0x08000ec4   Section        0  main.o(.text.LL_RCC_SetAHBPrescaler)
    LL_RCC_SetAPB1Prescaler                  0x08000ee1   Thumb Code    28  main.o(.text.LL_RCC_SetAPB1Prescaler)
    [Anonymous Symbol]                       0x08000ee0   Section        0  main.o(.text.LL_RCC_SetAPB1Prescaler)
    LL_RCC_SetAPB2Prescaler                  0x08000efd   Thumb Code    28  main.o(.text.LL_RCC_SetAPB2Prescaler)
    [Anonymous Symbol]                       0x08000efc   Section        0  main.o(.text.LL_RCC_SetAPB2Prescaler)
    LL_RCC_SetRTCClockSource                 0x08000f19   Thumb Code    28  main.o(.text.LL_RCC_SetRTCClockSource)
    [Anonymous Symbol]                       0x08000f18   Section        0  main.o(.text.LL_RCC_SetRTCClockSource)
    LL_RCC_SetSysClkSource                   0x08000f35   Thumb Code    28  main.o(.text.LL_RCC_SetSysClkSource)
    [Anonymous Symbol]                       0x08000f34   Section        0  main.o(.text.LL_RCC_SetSysClkSource)
    LL_RTC_ClearFlag_ALR                     0x08000f51   Thumb Code    18  stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR)
    [Anonymous Symbol]                       0x08000f50   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_ALR)
    LL_RTC_ClearFlag_OW                      0x08000f65   Thumb Code    18  stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW)
    [Anonymous Symbol]                       0x08000f64   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_OW)
    LL_RTC_ClearFlag_RS                      0x08000f79   Thumb Code    18  stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS)
    [Anonymous Symbol]                       0x08000f78   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_RS)
    LL_RTC_ClearFlag_SEC                     0x08000f8d   Thumb Code    18  stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC)
    [Anonymous Symbol]                       0x08000f8c   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_ClearFlag_SEC)
    LL_RTC_DisableWriteProtection            0x08000fa1   Thumb Code    18  stm32f1xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection)
    [Anonymous Symbol]                       0x08000fa0   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_DisableWriteProtection)
    LL_RTC_EnableWriteProtection             0x08000fb5   Thumb Code    18  stm32f1xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection)
    [Anonymous Symbol]                       0x08000fb4   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_EnableWriteProtection)
    [Anonymous Symbol]                       0x08000fc8   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode)
    [Anonymous Symbol]                       0x08001060   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode)
    [Anonymous Symbol]                       0x080010f8   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_Init)
    LL_RTC_IsActiveFlag_RS                   0x080011f9   Thumb Code    16  stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS)
    [Anonymous Symbol]                       0x080011f8   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RS)
    LL_RTC_IsActiveFlag_RTOF                 0x08001209   Thumb Code    16  stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF)
    [Anonymous Symbol]                       0x08001208   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_IsActiveFlag_RTOF)
    LL_RTC_SetAsynchPrescaler                0x08001219   Thumb Code    42  rtc.o(.text.LL_RTC_SetAsynchPrescaler)
    [Anonymous Symbol]                       0x08001218   Section        0  rtc.o(.text.LL_RTC_SetAsynchPrescaler)
    LL_RTC_SetAsynchPrescaler                0x08001245   Thumb Code    42  stm32f1xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler)
    [Anonymous Symbol]                       0x08001244   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_SetAsynchPrescaler)
    LL_RTC_SetOutputSource                   0x08001271   Thumb Code    26  stm32f1xx_ll_rtc.o(.text.LL_RTC_SetOutputSource)
    [Anonymous Symbol]                       0x08001270   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_SetOutputSource)
    LL_RTC_TAMPER_Disable                    0x0800128d   Thumb Code    24  stm32f1xx_ll_rtc.o(.text.LL_RTC_TAMPER_Disable)
    [Anonymous Symbol]                       0x0800128c   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_TAMPER_Disable)
    [Anonymous Symbol]                       0x080012a4   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init)
    LL_RTC_TIME_Set                          0x0800147d   Thumb Code    26  stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Set)
    [Anonymous Symbol]                       0x0800147c   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Set)
    [Anonymous Symbol]                       0x08001498   Section        0  stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro)
    [Anonymous Symbol]                       0x08001530   Section        0  stm32f1xx_ll_spi.o(.text.LL_SPI_Init)
    LL_SPI_IsEnabled                         0x080017d9   Thumb Code    16  stm32f1xx_ll_spi.o(.text.LL_SPI_IsEnabled)
    [Anonymous Symbol]                       0x080017d8   Section        0  stm32f1xx_ll_spi.o(.text.LL_SPI_IsEnabled)
    LL_SPI_SetCRCPolynomial                  0x080017e9   Thumb Code    18  stm32f1xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial)
    [Anonymous Symbol]                       0x080017e8   Section        0  stm32f1xx_ll_spi.o(.text.LL_SPI_SetCRCPolynomial)
    LL_SYSTICK_IsActiveCounterFlag           0x080017fd   Thumb Code    16  stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag)
    [Anonymous Symbol]                       0x080017fc   Section        0  stm32f1xx_ll_rtc.o(.text.LL_SYSTICK_IsActiveCounterFlag)
    [Anonymous Symbol]                       0x0800180c   Section        0  stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_TIM_DisableARRPreload                 0x08001821   Thumb Code    18  tim.o(.text.LL_TIM_DisableARRPreload)
    [Anonymous Symbol]                       0x08001820   Section        0  tim.o(.text.LL_TIM_DisableARRPreload)
    LL_TIM_DisableMasterSlaveMode            0x08001835   Thumb Code    18  tim.o(.text.LL_TIM_DisableMasterSlaveMode)
    [Anonymous Symbol]                       0x08001834   Section        0  tim.o(.text.LL_TIM_DisableMasterSlaveMode)
    LL_TIM_GenerateEvent_UPDATE              0x08001849   Thumb Code    18  stm32f1xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE)
    [Anonymous Symbol]                       0x08001848   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_GenerateEvent_UPDATE)
    [Anonymous Symbol]                       0x0800185c   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_Init)
    LL_TIM_OC_DisableFast                    0x08001a99   Thumb Code   178  tim.o(.text.LL_TIM_OC_DisableFast)
    [Anonymous Symbol]                       0x08001a98   Section        0  tim.o(.text.LL_TIM_OC_DisableFast)
    LL_TIM_OC_EnablePreload                  0x08001b4d   Thumb Code   178  tim.o(.text.LL_TIM_OC_EnablePreload)
    [Anonymous Symbol]                       0x08001b4c   Section        0  tim.o(.text.LL_TIM_OC_EnablePreload)
    [Anonymous Symbol]                       0x08001c00   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init)
    LL_TIM_OC_SetCompareCH1                  0x08001c79   Thumb Code    16  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1)
    [Anonymous Symbol]                       0x08001c78   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH1)
    LL_TIM_OC_SetCompareCH2                  0x08001c89   Thumb Code    16  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2)
    [Anonymous Symbol]                       0x08001c88   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH2)
    LL_TIM_OC_SetCompareCH3                  0x08001c99   Thumb Code    16  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3)
    [Anonymous Symbol]                       0x08001c98   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH3)
    LL_TIM_OC_SetCompareCH4                  0x08001ca9   Thumb Code    16  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4)
    [Anonymous Symbol]                       0x08001ca8   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_SetCompareCH4)
    LL_TIM_SetAutoReload                     0x08001cb9   Thumb Code    16  stm32f1xx_ll_tim.o(.text.LL_TIM_SetAutoReload)
    [Anonymous Symbol]                       0x08001cb8   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_SetAutoReload)
    LL_TIM_SetPrescaler                      0x08001cc9   Thumb Code    16  stm32f1xx_ll_tim.o(.text.LL_TIM_SetPrescaler)
    [Anonymous Symbol]                       0x08001cc8   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_SetPrescaler)
    LL_TIM_SetRepetitionCounter              0x08001cd9   Thumb Code    16  stm32f1xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter)
    [Anonymous Symbol]                       0x08001cd8   Section        0  stm32f1xx_ll_tim.o(.text.LL_TIM_SetRepetitionCounter)
    LL_TIM_SetTriggerOutput                  0x08001ce9   Thumb Code    26  tim.o(.text.LL_TIM_SetTriggerOutput)
    [Anonymous Symbol]                       0x08001ce8   Section        0  tim.o(.text.LL_TIM_SetTriggerOutput)
    LL_USART_ConfigAsyncMode                 0x08001d05   Thumb Code    28  usart.o(.text.LL_USART_ConfigAsyncMode)
    [Anonymous Symbol]                       0x08001d04   Section        0  usart.o(.text.LL_USART_ConfigAsyncMode)
    LL_USART_Enable                          0x08001d21   Thumb Code    18  usart.o(.text.LL_USART_Enable)
    [Anonymous Symbol]                       0x08001d20   Section        0  usart.o(.text.LL_USART_Enable)
    [Anonymous Symbol]                       0x08001d34   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_Init)
    LL_USART_IsEnabled                       0x08001fdd   Thumb Code    16  stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled)
    [Anonymous Symbol]                       0x08001fdc   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_IsEnabled)
    LL_USART_SetBaudRate                     0x08001fed   Thumb Code    78  stm32f1xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    [Anonymous Symbol]                       0x08001fec   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_SetBaudRate)
    LL_USART_SetHWFlowCtrl                   0x0800203d   Thumb Code    26  stm32f1xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl)
    [Anonymous Symbol]                       0x0800203c   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_SetHWFlowCtrl)
    LL_USART_SetStopBitsLength               0x08002059   Thumb Code    26  stm32f1xx_ll_usart.o(.text.LL_USART_SetStopBitsLength)
    [Anonymous Symbol]                       0x08002058   Section        0  stm32f1xx_ll_usart.o(.text.LL_USART_SetStopBitsLength)
    [Anonymous Symbol]                       0x08002074   Section        0  gpio.o(.text.MX_GPIO_Init)
    [Anonymous Symbol]                       0x08002214   Section        0  rtc.o(.text.MX_RTC_Init)
    [Anonymous Symbol]                       0x08002278   Section        0  spi.o(.text.MX_SPI1_Init)
    [Anonymous Symbol]                       0x08002310   Section        0  spi.o(.text.MX_SPI2_Init)
    [Anonymous Symbol]                       0x080023a8   Section        0  tim.o(.text.MX_TIM3_Init)
    [Anonymous Symbol]                       0x08002468   Section        0  usart.o(.text.MX_USART1_UART_Init)
    [Anonymous Symbol]                       0x08002508   Section        0  stm32f1xx_it.o(.text.MemManage_Handler)
    [Anonymous Symbol]                       0x0800250c   Section        0  stm32f1xx_it.o(.text.NMI_Handler)
    NVIC_EncodePriority                      0x08002511   Thumb Code   108  main.o(.text.NVIC_EncodePriority)
    [Anonymous Symbol]                       0x08002510   Section        0  main.o(.text.NVIC_EncodePriority)
    OC1Config                                0x0800257d   Thumb Code   656  stm32f1xx_ll_tim.o(.text.OC1Config)
    [Anonymous Symbol]                       0x0800257c   Section        0  stm32f1xx_ll_tim.o(.text.OC1Config)
    OC2Config                                0x0800280d   Thumb Code   664  stm32f1xx_ll_tim.o(.text.OC2Config)
    [Anonymous Symbol]                       0x0800280c   Section        0  stm32f1xx_ll_tim.o(.text.OC2Config)
    OC3Config                                0x08002aa5   Thumb Code   662  stm32f1xx_ll_tim.o(.text.OC3Config)
    [Anonymous Symbol]                       0x08002aa4   Section        0  stm32f1xx_ll_tim.o(.text.OC3Config)
    OC4Config                                0x08002d3d   Thumb Code   616  stm32f1xx_ll_tim.o(.text.OC4Config)
    [Anonymous Symbol]                       0x08002d3c   Section        0  stm32f1xx_ll_tim.o(.text.OC4Config)
    [Anonymous Symbol]                       0x08002fa4   Section        0  stm32f1xx_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08002fa8   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    [Anonymous Symbol]                       0x08002fd0   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq)
    [Anonymous Symbol]                       0x08002ff4   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq)
    [Anonymous Symbol]                       0x08003018   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq)
    [Anonymous Symbol]                       0x08003070   Section        0  stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    [Anonymous Symbol]                       0x080030d8   Section        0  stm32f1xx_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080030dc   Section        0  stm32f1xx_it.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080030e0   Section        0  main.o(.text.SystemClock_Config)
    [Anonymous Symbol]                       0x080031b0   Section        0  system_stm32f1xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080031b4   Section        0  stm32f1xx_it.o(.text.UsageFault_Handler)
    __NVIC_GetPriorityGrouping               0x080031b9   Thumb Code    16  main.o(.text.__NVIC_GetPriorityGrouping)
    [Anonymous Symbol]                       0x080031b8   Section        0  main.o(.text.__NVIC_GetPriorityGrouping)
    __NVIC_SetPriority                       0x080031c9   Thumb Code    66  main.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x080031c8   Section        0  main.o(.text.__NVIC_SetPriority)
    __NVIC_SetPriorityGrouping               0x0800320d   Thumb Code    60  main.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x0800320c   Section        0  main.o(.text.__NVIC_SetPriorityGrouping)
    [Anonymous Symbol]                       0x08003248   Section        0  main.o(.text.assert_failed)
    [Anonymous Symbol]                       0x08003254   Section        0  spi_handler.o(.text.createHandler)
    [Anonymous Symbol]                       0x08003290   Section        0  spi_handler.o(.text.findOrCreateHandler)
    [Anonymous Symbol]                       0x08003320   Section        0  fifo.o(.text.findTail)
    [Anonymous Symbol]                       0x0800333c   Section        0  fifo.o(.text.initFifo)
    [Anonymous Symbol]                       0x0800336c   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x080033cc   Section        0  spi_handler.o(.text.mockHandlerFunc)
    [Anonymous Symbol]                       0x080033f0   Section        0  fifo.o(.text.pop)
    [Anonymous Symbol]                       0x0800342c   Section        0  fifo.o(.text.push)
    [Anonymous Symbol]                       0x0800349c   Section        0  spi_handler.o(.text.registerHandler)
    [Anonymous Symbol]                       0x08003510   Section        0  fifo.o(.text.testFifo)
    [Anonymous Symbol]                       0x0800363c   Section        0  spi_handler.o(.text.testHandlerList)
    [Anonymous Symbol]                       0x08003724   Section        0  spi_handler.o(.text.testRegistration)
    [Anonymous Symbol]                       0x080037d4   Section        0  spi_handler.o(.text.testSPIHandler)
    OFFSET_TAB_CCMRx                         0x080037f8   Data           7  tim.o(.rodata.OFFSET_TAB_CCMRx)
    [Anonymous Symbol]                       0x080037f8   Section        0  tim.o(.rodata.OFFSET_TAB_CCMRx)
    SHIFT_TAB_OCxx                           0x080037ff   Data           7  tim.o(.rodata.SHIFT_TAB_OCxx)
    [Anonymous Symbol]                       0x080037ff   Section        0  tim.o(.rodata.SHIFT_TAB_OCxx)
    .L.str                                   0x08003806   Data          56  stm32f1xx_ll_gpio.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003806   Section        0  stm32f1xx_ll_gpio.o(.rodata.str1.1)
    .L.str                                   0x0800383e   Data          55  stm32f1xx_ll_rtc.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800383e   Section        0  stm32f1xx_ll_rtc.o(.rodata.str1.1)
    .L.str                                   0x08003875   Data          56  stm32f1xx_ll_exti.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08003875   Section        0  stm32f1xx_ll_exti.o(.rodata.str1.1)
    .L.str                                   0x080038ad   Data          55  stm32f1xx_ll_spi.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080038ad   Section        0  stm32f1xx_ll_spi.o(.rodata.str1.1)
    .L.str                                   0x080038e4   Data          55  stm32f1xx_ll_tim.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x080038e4   Section        0  stm32f1xx_ll_tim.o(.rodata.str1.1)
    .L.str                                   0x0800391b   Data          57  stm32f1xx_ll_usart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0800391b   Section        0  stm32f1xx_ll_usart.o(.rodata.str1.1)
    .bss                                     0x20000008   Section       96  libspace.o(.bss)
    Heap_Mem                                 0x20000070   Data         512  startup_stm32f103xe.o(HEAP)
    HEAP                                     0x20000070   Section      512  startup_stm32f103xe.o(HEAP)
    Stack_Mem                                0x20000270   Data        1024  startup_stm32f103xe.o(STACK)
    STACK                                    0x20000270   Section     1024  startup_stm32f103xe.o(STACK)
    __initial_sp                             0x20000670   Data           0  startup_stm32f103xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _mutex_acquire                            - Undefined Weak Reference
    _mutex_free                               - Undefined Weak Reference
    _mutex_release                            - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000130   Number         0  startup_stm32f103xe.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f103xe.o(RESET)
    __Vectors_End                            0x08000130   Data           0  startup_stm32f103xe.o(RESET)
    __main                                   0x08000131   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000139   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000139   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000147   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x0800016d   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000189   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x080001a5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_2                     0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000007)
    __rt_lib_init_preinit_1                  0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_relocate_pie_1             0x080001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_alloca_1                   0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_rand_1                     0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_return                     0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x080001af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x080001b1   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x080001b3   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x080001b5   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x080001b5   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x080001b5   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x080001bb   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x080001bb   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x080001bf   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x080001bf   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x080001c7   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x080001c9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x080001c9   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x080001cd   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x080001d5   Thumb Code     8  startup_stm32f103xe.o(.text)
    ADC1_2_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    ADC3_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    CAN1_RX1_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    CAN1_SCE_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel1_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel2_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel3_IRQHandler                 0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    DMA2_Channel4_5_IRQHandler               0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI0_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI15_10_IRQHandler                     0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI1_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI2_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI3_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI4_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    EXTI9_5_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    FLASH_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    FSMC_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C1_ER_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C1_EV_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C2_ER_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    I2C2_EV_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    PVD_IRQHandler                           0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    RCC_IRQHandler                           0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    RTC_Alarm_IRQHandler                     0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    RTC_IRQHandler                           0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    SDIO_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    SPI1_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    SPI2_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    SPI3_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TAMPER_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_BRK_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_CC_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM1_UP_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM2_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM3_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM4_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM5_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM6_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM7_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_BRK_IRQHandler                      0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_CC_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    TIM8_UP_IRQHandler                       0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    UART4_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    UART5_IRQHandler                         0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USART1_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USART2_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USART3_IRQHandler                        0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USBWakeUp_IRQHandler                     0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    WWDG_IRQHandler                          0x080001ef   Thumb Code     0  startup_stm32f103xe.o(.text)
    __user_initial_stackheap                 0x080001f1   Thumb Code     0  startup_stm32f103xe.o(.text)
    malloc                                   0x08000215   Thumb Code    94  h1_alloc.o(.text)
    free                                     0x08000273   Thumb Code    78  h1_free.o(.text)
    __aeabi_memclr4                          0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080002c1   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080002c5   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x0800030f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x08000311   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x08000313   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_descriptor                     0x08000315   Thumb Code     8  rt_heap_descriptor_intlibspace.o(.text)
    __use_no_heap                            0x0800031d   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x0800031f   Thumb Code     2  hguard.o(.text)
    _terminate_user_alloc                    0x08000321   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x08000323   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x08000325   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x08000347   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x0800034d   Thumb Code    94  init_alloc.o(.text)
    __Heap_Initialize                        0x080003ab   Thumb Code    10  h1_init.o(.text)
    __Heap_DescSize                          0x080003b5   Thumb Code     4  h1_init.o(.text)
    __user_libspace                          0x080003b9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080003b9   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x080003b9   Thumb Code     0  libspace.o(.text)
    __Heap_ProvideMemory                     0x080003c1   Thumb Code    52  h1_extend.o(.text)
    _maybe_terminate_alloc                   0x080003c1   Thumb Code     0  maybetermalloc1.o(.text)
    __rt_SIGRTMEM                            0x080003f5   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __I$use$semihosting                      0x08000403   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000403   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000405   Thumb Code     0  indicate_semi.o(.text)
    __user_setup_stackheap                   0x08000405   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800044f   Thumb Code    18  exit.o(.text)
    __sig_exit                               0x08000461   Thumb Code    10  defsig_exit.o(.text)
    __rt_SIGRTMEM_inner                      0x0800046d   Thumb Code    22  defsig_rtmem_inner.o(.text)
    _sys_exit                                0x080004bd   Thumb Code     8  sys_exit.o(.text)
    __default_signal_display                 0x080004c9   Thumb Code    50  defsig_general.o(.text)
    _ttywrch                                 0x080004fb   Thumb Code    14  sys_wrch.o(.text)
    BusFault_Handler                         0x08000509   Thumb Code     4  stm32f1xx_it.o(.text.BusFault_Handler)
    DebugMon_Handler                         0x0800050d   Thumb Code     2  stm32f1xx_it.o(.text.DebugMon_Handler)
    Error_Handler                            0x08000511   Thumb Code    14  main.o(.text.Error_Handler)
    HardFault_Handler                        0x08000521   Thumb Code     4  stm32f1xx_it.o(.text.HardFault_Handler)
    LL_EXTI_Init                             0x08000729   Thumb Code   422  stm32f1xx_ll_exti.o(.text.LL_EXTI_Init)
    LL_GPIO_Init                             0x08000965   Thumb Code   560  stm32f1xx_ll_gpio.o(.text.LL_GPIO_Init)
    LL_Init1msTick                           0x08000ca5   Thumb Code    20  stm32f1xx_ll_utils.o(.text.LL_Init1msTick)
    LL_RCC_GetSystemClocksFreq               0x08000db5   Thumb Code    54  stm32f1xx_ll_rcc.o(.text.LL_RCC_GetSystemClocksFreq)
    LL_RTC_EnterInitMode                     0x08000fc9   Thumb Code   152  stm32f1xx_ll_rtc.o(.text.LL_RTC_EnterInitMode)
    LL_RTC_ExitInitMode                      0x08001061   Thumb Code   152  stm32f1xx_ll_rtc.o(.text.LL_RTC_ExitInitMode)
    LL_RTC_Init                              0x080010f9   Thumb Code   254  stm32f1xx_ll_rtc.o(.text.LL_RTC_Init)
    LL_RTC_TIME_Init                         0x080012a5   Thumb Code   472  stm32f1xx_ll_rtc.o(.text.LL_RTC_TIME_Init)
    LL_RTC_WaitForSynchro                    0x08001499   Thumb Code   152  stm32f1xx_ll_rtc.o(.text.LL_RTC_WaitForSynchro)
    LL_SPI_Init                              0x08001531   Thumb Code   678  stm32f1xx_ll_spi.o(.text.LL_SPI_Init)
    LL_SetSystemCoreClock                    0x0800180d   Thumb Code    20  stm32f1xx_ll_utils.o(.text.LL_SetSystemCoreClock)
    LL_TIM_Init                              0x0800185d   Thumb Code   570  stm32f1xx_ll_tim.o(.text.LL_TIM_Init)
    LL_TIM_OC_Init                           0x08001c01   Thumb Code   120  stm32f1xx_ll_tim.o(.text.LL_TIM_OC_Init)
    LL_USART_Init                            0x08001d35   Thumb Code   680  stm32f1xx_ll_usart.o(.text.LL_USART_Init)
    MX_GPIO_Init                             0x08002075   Thumb Code   416  gpio.o(.text.MX_GPIO_Init)
    MX_RTC_Init                              0x08002215   Thumb Code    98  rtc.o(.text.MX_RTC_Init)
    MX_SPI1_Init                             0x08002279   Thumb Code   150  spi.o(.text.MX_SPI1_Init)
    MX_SPI2_Init                             0x08002311   Thumb Code   150  spi.o(.text.MX_SPI2_Init)
    MX_TIM3_Init                             0x080023a9   Thumb Code   192  tim.o(.text.MX_TIM3_Init)
    MX_USART1_UART_Init                      0x08002469   Thumb Code   160  usart.o(.text.MX_USART1_UART_Init)
    MemManage_Handler                        0x08002509   Thumb Code     4  stm32f1xx_it.o(.text.MemManage_Handler)
    NMI_Handler                              0x0800250d   Thumb Code     4  stm32f1xx_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x08002fa5   Thumb Code     2  stm32f1xx_it.o(.text.PendSV_Handler)
    RCC_GetHCLKClockFreq                     0x08002fa9   Thumb Code    38  stm32f1xx_ll_rcc.o(.text.RCC_GetHCLKClockFreq)
    RCC_GetPCLK1ClockFreq                    0x08002fd1   Thumb Code    36  stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK1ClockFreq)
    RCC_GetPCLK2ClockFreq                    0x08002ff5   Thumb Code    36  stm32f1xx_ll_rcc.o(.text.RCC_GetPCLK2ClockFreq)
    RCC_GetSystemClockFreq                   0x08003019   Thumb Code    86  stm32f1xx_ll_rcc.o(.text.RCC_GetSystemClockFreq)
    RCC_PLL_GetFreqDomain_SYS                0x08003071   Thumb Code   104  stm32f1xx_ll_rcc.o(.text.RCC_PLL_GetFreqDomain_SYS)
    SVC_Handler                              0x080030d9   Thumb Code     2  stm32f1xx_it.o(.text.SVC_Handler)
    SysTick_Handler                          0x080030dd   Thumb Code     2  stm32f1xx_it.o(.text.SysTick_Handler)
    SystemClock_Config                       0x080030e1   Thumb Code   208  main.o(.text.SystemClock_Config)
    SystemInit                               0x080031b1   Thumb Code     2  system_stm32f1xx.o(.text.SystemInit)
    UsageFault_Handler                       0x080031b5   Thumb Code     4  stm32f1xx_it.o(.text.UsageFault_Handler)
    assert_failed                            0x08003249   Thumb Code    10  main.o(.text.assert_failed)
    createHandler                            0x08003255   Thumb Code    58  spi_handler.o(.text.createHandler)
    findOrCreateHandler                      0x08003291   Thumb Code   142  spi_handler.o(.text.findOrCreateHandler)
    findTail                                 0x08003321   Thumb Code    28  fifo.o(.text.findTail)
    initFifo                                 0x0800333d   Thumb Code    46  fifo.o(.text.initFifo)
    main                                     0x0800336d   Thumb Code    96  main.o(.text.main)
    mockHandlerFunc                          0x080033cd   Thumb Code    34  spi_handler.o(.text.mockHandlerFunc)
    pop                                      0x080033f1   Thumb Code    60  fifo.o(.text.pop)
    push                                     0x0800342d   Thumb Code   112  fifo.o(.text.push)
    registerHandler                          0x0800349d   Thumb Code   114  spi_handler.o(.text.registerHandler)
    testFifo                                 0x08003511   Thumb Code   298  fifo.o(.text.testFifo)
    testHandlerList                          0x0800363d   Thumb Code   230  spi_handler.o(.text.testHandlerList)
    testRegistration                         0x08003725   Thumb Code   176  spi_handler.o(.text.testRegistration)
    testSPIHandler                           0x080037d5   Thumb Code    12  spi_handler.o(.text.testSPIHandler)
    AHBPrescTable                            0x080037e0   Data          16  system_stm32f1xx.o(.rodata.AHBPrescTable)
    APBPrescTable                            0x080037f0   Data           8  system_stm32f1xx.o(.rodata.APBPrescTable)
    Region$$Table$$Base                      0x08003954   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08003974   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f1xx.o(.data.SystemCoreClock)
    __libspace_start                         0x20000008   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20000068   Data           0  libspace.o(.bss)
    cnt                                      0x20000068   Data           1  spi_handler.o(.bss.cnt)
    handlerList                              0x2000006c   Data           4  spi_handler.o(.bss.handlerList)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000131

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00003980, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00003974, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000130   Data   RO            3    RESET               startup_stm32f103xe.o
    0x08000130   0x08000130   0x00000008   Code   RO          857  * !!!main             c_w.l(__main.o)
    0x08000138   0x08000138   0x00000034   Code   RO         1066    !!!scatter          c_w.l(__scatter.o)
    0x0800016c   0x0800016c   0x0000001a   Code   RO         1068    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000186   0x08000186   0x00000002   PAD
    0x08000188   0x08000188   0x0000001c   Code   RO         1070    !!handler_zi        c_w.l(__scatter_zi.o)
    0x080001a4   0x080001a4   0x00000002   Code   RO         1001    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO          890    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO          892    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x080001a6   0x080001a6   0x00000000   Code   RO          894    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x080001a6   0x080001a6   0x00000008   Code   RO          895    .ARM.Collect$$libinit$$00000007  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          897    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          899    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          901    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          904    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          906    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          908    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          910    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          912    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          914    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          916    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          918    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          920    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          922    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          924    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          928    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          930    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          932    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000000   Code   RO          934    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x080001ae   0x080001ae   0x00000002   Code   RO          935    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x080001b0   0x080001b0   0x00000002   Code   RO         1063    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1017    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1019    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1022    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1025    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1027    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000000   Code   RO         1030    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x080001b2   0x080001b2   0x00000002   Code   RO         1031    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x080001b4   0x080001b4   0x00000000   Code   RO          861    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x080001b4   0x080001b4   0x00000000   Code   RO          944    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x080001b4   0x080001b4   0x00000006   Code   RO          956    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x080001ba   0x080001ba   0x00000000   Code   RO          946    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x080001ba   0x080001ba   0x00000004   Code   RO          947    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x080001be   0x080001be   0x00000000   Code   RO          949    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x080001be   0x080001be   0x00000008   Code   RO          950    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x080001c6   0x080001c6   0x00000002   Code   RO         1006    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x080001c8   0x080001c8   0x00000000   Code   RO         1037    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x080001c8   0x080001c8   0x00000004   Code   RO         1038    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x080001cc   0x080001cc   0x00000006   Code   RO         1039    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x080001d2   0x080001d2   0x00000002   PAD
    0x080001d4   0x080001d4   0x00000040   Code   RO            4    .text               startup_stm32f103xe.o
    0x08000214   0x08000214   0x0000005e   Code   RO          795    .text               c_w.l(h1_alloc.o)
    0x08000272   0x08000272   0x0000004e   Code   RO          797    .text               c_w.l(h1_free.o)
    0x080002c0   0x080002c0   0x0000004e   Code   RO          853    .text               c_w.l(rt_memclr_w.o)
    0x0800030e   0x0800030e   0x00000006   Code   RO          855    .text               c_w.l(heapauxi.o)
    0x08000314   0x08000314   0x00000008   Code   RO          865    .text               c_w.l(rt_heap_descriptor_intlibspace.o)
    0x0800031c   0x0800031c   0x00000004   Code   RO          867    .text               c_w.l(hguard.o)
    0x08000320   0x08000320   0x0000008a   Code   RO          869    .text               c_w.l(init_alloc.o)
    0x080003aa   0x080003aa   0x0000000e   Code   RO          873    .text               c_w.l(h1_init.o)
    0x080003b8   0x080003b8   0x00000008   Code   RO          940    .text               c_w.l(libspace.o)
    0x080003c0   0x080003c0   0x00000000   Code   RO          960    .text               c_w.l(maybetermalloc1.o)
    0x080003c0   0x080003c0   0x00000034   Code   RO          962    .text               c_w.l(h1_extend.o)
    0x080003f4   0x080003f4   0x0000000e   Code   RO          966    .text               c_w.l(defsig_rtmem_outer.o)
    0x08000402   0x08000402   0x00000002   Code   RO          977    .text               c_w.l(use_no_semi.o)
    0x08000404   0x08000404   0x00000000   Code   RO          979    .text               c_w.l(indicate_semi.o)
    0x08000404   0x08000404   0x0000004a   Code   RO          980    .text               c_w.l(sys_stackheap_outer.o)
    0x0800044e   0x0800044e   0x00000012   Code   RO          986    .text               c_w.l(exit.o)
    0x08000460   0x08000460   0x0000000a   Code   RO          988    .text               c_w.l(defsig_exit.o)
    0x0800046a   0x0800046a   0x00000002   PAD
    0x0800046c   0x0800046c   0x00000050   Code   RO          990    .text               c_w.l(defsig_rtmem_inner.o)
    0x080004bc   0x080004bc   0x0000000c   Code   RO         1002    .text               c_w.l(sys_exit.o)
    0x080004c8   0x080004c8   0x00000032   Code   RO         1014    .text               c_w.l(defsig_general.o)
    0x080004fa   0x080004fa   0x0000000e   Code   RO         1032    .text               c_w.l(sys_wrch.o)
    0x08000508   0x08000508   0x00000004   Code   RO          182    .text.BusFault_Handler  stm32f1xx_it.o
    0x0800050c   0x0800050c   0x00000002   Code   RO          188    .text.DebugMon_Handler  stm32f1xx_it.o
    0x0800050e   0x0800050e   0x00000002   PAD
    0x08000510   0x08000510   0x0000000e   Code   RO           69    .text.Error_Handler  main.o
    0x0800051e   0x0800051e   0x00000002   PAD
    0x08000520   0x08000520   0x00000004   Code   RO          178    .text.HardFault_Handler  stm32f1xx_it.o
    0x08000524   0x08000524   0x00000022   Code   RO           15    .text.LL_APB1_GRP1_EnableClock  main.o
    0x08000546   0x08000546   0x00000002   PAD
    0x08000548   0x08000548   0x00000022   Code   RO          106    .text.LL_APB1_GRP1_EnableClock  rtc.o
    0x0800056a   0x0800056a   0x00000002   PAD
    0x0800056c   0x0800056c   0x00000022   Code   RO          125    .text.LL_APB1_GRP1_EnableClock  spi.o
    0x0800058e   0x0800058e   0x00000002   PAD
    0x08000590   0x08000590   0x00000022   Code   RO          136    .text.LL_APB1_GRP1_EnableClock  tim.o
    0x080005b2   0x080005b2   0x00000002   PAD
    0x080005b4   0x080005b4   0x00000022   Code   RO           13    .text.LL_APB2_GRP1_EnableClock  main.o
    0x080005d6   0x080005d6   0x00000002   PAD
    0x080005d8   0x080005d8   0x00000022   Code   RO           83    .text.LL_APB2_GRP1_EnableClock  gpio.o
    0x080005fa   0x080005fa   0x00000002   PAD
    0x080005fc   0x080005fc   0x00000022   Code   RO          121    .text.LL_APB2_GRP1_EnableClock  spi.o
    0x0800061e   0x0800061e   0x00000002   PAD
    0x08000620   0x08000620   0x00000022   Code   RO          148    .text.LL_APB2_GRP1_EnableClock  tim.o
    0x08000642   0x08000642   0x00000002   PAD
    0x08000644   0x08000644   0x00000022   Code   RO          163    .text.LL_APB2_GRP1_EnableClock  usart.o
    0x08000666   0x08000666   0x00000002   PAD
    0x08000668   0x08000668   0x00000018   Code   RO          411    .text.LL_EXTI_DisableEvent_0_31  stm32f1xx_ll_exti.o
    0x08000680   0x08000680   0x00000018   Code   RO          419    .text.LL_EXTI_DisableFallingTrig_0_31  stm32f1xx_ll_exti.o
    0x08000698   0x08000698   0x00000018   Code   RO          415    .text.LL_EXTI_DisableIT_0_31  stm32f1xx_ll_exti.o
    0x080006b0   0x080006b0   0x00000018   Code   RO          423    .text.LL_EXTI_DisableRisingTrig_0_31  stm32f1xx_ll_exti.o
    0x080006c8   0x080006c8   0x00000018   Code   RO          417    .text.LL_EXTI_EnableEvent_0_31  stm32f1xx_ll_exti.o
    0x080006e0   0x080006e0   0x00000018   Code   RO          425    .text.LL_EXTI_EnableFallingTrig_0_31  stm32f1xx_ll_exti.o
    0x080006f8   0x080006f8   0x00000018   Code   RO          413    .text.LL_EXTI_EnableIT_0_31  stm32f1xx_ll_exti.o
    0x08000710   0x08000710   0x00000018   Code   RO          421    .text.LL_EXTI_EnableRisingTrig_0_31  stm32f1xx_ll_exti.o
    0x08000728   0x08000728   0x000001a6   Code   RO          409    .text.LL_EXTI_Init  stm32f1xx_ll_exti.o
    0x080008ce   0x080008ce   0x00000002   PAD
    0x080008d0   0x080008d0   0x00000010   Code   RO           31    .text.LL_FLASH_GetLatency  main.o
    0x080008e0   0x080008e0   0x0000001c   Code   RO           29    .text.LL_FLASH_SetLatency  main.o
    0x080008fc   0x080008fc   0x00000016   Code   RO          150    .text.LL_GPIO_AF_EnableRemap_TIM3  tim.o
    0x08000912   0x08000912   0x00000002   PAD
    0x08000914   0x08000914   0x00000018   Code   RO           25    .text.LL_GPIO_AF_Remap_SWJ_NOJTAG  main.o
    0x0800092c   0x0800092c   0x00000038   Code   RO           87    .text.LL_GPIO_AF_SetEXTISource  gpio.o
    0x08000964   0x08000964   0x00000230   Code   RO          207    .text.LL_GPIO_Init  stm32f1xx_ll_gpio.o
    0x08000b94   0x08000b94   0x00000012   Code   RO           85    .text.LL_GPIO_ResetOutputPin  gpio.o
    0x08000ba6   0x08000ba6   0x00000002   PAD
    0x08000ba8   0x08000ba8   0x00000034   Code   RO           89    .text.LL_GPIO_SetPinMode  gpio.o
    0x08000bdc   0x08000bdc   0x00000034   Code   RO          211    .text.LL_GPIO_SetPinMode  stm32f1xx_ll_gpio.o
    0x08000c10   0x08000c10   0x00000034   Code   RO          215    .text.LL_GPIO_SetPinOutputType  stm32f1xx_ll_gpio.o
    0x08000c44   0x08000c44   0x0000002a   Code   RO          209    .text.LL_GPIO_SetPinPull  stm32f1xx_ll_gpio.o
    0x08000c6e   0x08000c6e   0x00000002   PAD
    0x08000c70   0x08000c70   0x00000034   Code   RO          213    .text.LL_GPIO_SetPinSpeed  stm32f1xx_ll_gpio.o
    0x08000ca4   0x08000ca4   0x00000014   Code   RO          343    .text.LL_Init1msTick  stm32f1xx_ll_utils.o
    0x08000cb8   0x08000cb8   0x00000036   Code   RO          345    .text.LL_InitTick   stm32f1xx_ll_utils.o
    0x08000cee   0x08000cee   0x00000002   PAD
    0x08000cf0   0x08000cf0   0x00000012   Code   RO           37    .text.LL_PWR_EnableBkUpAccess  main.o
    0x08000d02   0x08000d02   0x00000002   PAD
    0x08000d04   0x08000d04   0x00000012   Code   RO          104    .text.LL_PWR_EnableBkUpAccess  rtc.o
    0x08000d16   0x08000d16   0x00000002   PAD
    0x08000d18   0x08000d18   0x00000012   Code   RO           51    .text.LL_RCC_EnableRTC  main.o
    0x08000d2a   0x08000d2a   0x00000002   PAD
    0x08000d2c   0x08000d2c   0x00000012   Code   RO          108    .text.LL_RCC_EnableRTC  rtc.o
    0x08000d3e   0x08000d3e   0x00000002   PAD
    0x08000d40   0x08000d40   0x00000012   Code   RO           41    .text.LL_RCC_ForceBackupDomainReset  main.o
    0x08000d52   0x08000d52   0x00000002   PAD
    0x08000d54   0x08000d54   0x00000010   Code   RO          323    .text.LL_RCC_GetAHBPrescaler  stm32f1xx_ll_rcc.o
    0x08000d64   0x08000d64   0x00000010   Code   RO          325    .text.LL_RCC_GetAPB1Prescaler  stm32f1xx_ll_rcc.o
    0x08000d74   0x08000d74   0x00000010   Code   RO          327    .text.LL_RCC_GetAPB2Prescaler  stm32f1xx_ll_rcc.o
    0x08000d84   0x08000d84   0x00000010   Code   RO           39    .text.LL_RCC_GetRTCClockSource  main.o
    0x08000d94   0x08000d94   0x00000010   Code   RO           67    .text.LL_RCC_GetSysClkSource  main.o
    0x08000da4   0x08000da4   0x00000010   Code   RO          295    .text.LL_RCC_GetSysClkSource  stm32f1xx_ll_rcc.o
    0x08000db4   0x08000db4   0x00000036   Code   RO          303    .text.LL_RCC_GetSystemClocksFreq  stm32f1xx_ll_rcc.o
    0x08000dea   0x08000dea   0x00000002   PAD
    0x08000dec   0x08000dec   0x00000012   Code   RO           33    .text.LL_RCC_HSE_Enable  main.o
    0x08000dfe   0x08000dfe   0x00000002   PAD
    0x08000e00   0x08000e00   0x00000010   Code   RO           35    .text.LL_RCC_HSE_IsReady  main.o
    0x08000e10   0x08000e10   0x00000012   Code   RO           45    .text.LL_RCC_LSE_Enable  main.o
    0x08000e22   0x08000e22   0x00000002   PAD
    0x08000e24   0x08000e24   0x00000010   Code   RO           47    .text.LL_RCC_LSE_IsReady  main.o
    0x08000e34   0x08000e34   0x00000026   Code   RO           53    .text.LL_RCC_PLL_ConfigDomain_SYS  main.o
    0x08000e5a   0x08000e5a   0x00000002   PAD
    0x08000e5c   0x08000e5c   0x00000012   Code   RO           55    .text.LL_RCC_PLL_Enable  main.o
    0x08000e6e   0x08000e6e   0x00000002   PAD
    0x08000e70   0x08000e70   0x00000010   Code   RO          329    .text.LL_RCC_PLL_GetMainSource  stm32f1xx_ll_rcc.o
    0x08000e80   0x08000e80   0x00000010   Code   RO          333    .text.LL_RCC_PLL_GetMultiplicator  stm32f1xx_ll_rcc.o
    0x08000e90   0x08000e90   0x00000010   Code   RO          331    .text.LL_RCC_PLL_GetPrediv  stm32f1xx_ll_rcc.o
    0x08000ea0   0x08000ea0   0x00000010   Code   RO           57    .text.LL_RCC_PLL_IsReady  main.o
    0x08000eb0   0x08000eb0   0x00000012   Code   RO           43    .text.LL_RCC_ReleaseBackupDomainReset  main.o
    0x08000ec2   0x08000ec2   0x00000002   PAD
    0x08000ec4   0x08000ec4   0x0000001c   Code   RO           59    .text.LL_RCC_SetAHBPrescaler  main.o
    0x08000ee0   0x08000ee0   0x0000001c   Code   RO           61    .text.LL_RCC_SetAPB1Prescaler  main.o
    0x08000efc   0x08000efc   0x0000001c   Code   RO           63    .text.LL_RCC_SetAPB2Prescaler  main.o
    0x08000f18   0x08000f18   0x0000001c   Code   RO           49    .text.LL_RCC_SetRTCClockSource  main.o
    0x08000f34   0x08000f34   0x0000001c   Code   RO           65    .text.LL_RCC_SetSysClkSource  main.o
    0x08000f50   0x08000f50   0x00000012   Code   RO          243    .text.LL_RTC_ClearFlag_ALR  stm32f1xx_ll_rtc.o
    0x08000f62   0x08000f62   0x00000002   PAD
    0x08000f64   0x08000f64   0x00000012   Code   RO          245    .text.LL_RTC_ClearFlag_OW  stm32f1xx_ll_rtc.o
    0x08000f76   0x08000f76   0x00000002   PAD
    0x08000f78   0x08000f78   0x00000012   Code   RO          237    .text.LL_RTC_ClearFlag_RS  stm32f1xx_ll_rtc.o
    0x08000f8a   0x08000f8a   0x00000002   PAD
    0x08000f8c   0x08000f8c   0x00000012   Code   RO          247    .text.LL_RTC_ClearFlag_SEC  stm32f1xx_ll_rtc.o
    0x08000f9e   0x08000f9e   0x00000002   PAD
    0x08000fa0   0x08000fa0   0x00000012   Code   RO          229    .text.LL_RTC_DisableWriteProtection  stm32f1xx_ll_rtc.o
    0x08000fb2   0x08000fb2   0x00000002   PAD
    0x08000fb4   0x08000fb4   0x00000012   Code   RO          239    .text.LL_RTC_EnableWriteProtection  stm32f1xx_ll_rtc.o
    0x08000fc6   0x08000fc6   0x00000002   PAD
    0x08000fc8   0x08000fc8   0x00000098   Code   RO          231    .text.LL_RTC_EnterInitMode  stm32f1xx_ll_rtc.o
    0x08001060   0x08001060   0x00000098   Code   RO          233    .text.LL_RTC_ExitInitMode  stm32f1xx_ll_rtc.o
    0x080010f8   0x080010f8   0x000000fe   Code   RO          241    .text.LL_RTC_Init   stm32f1xx_ll_rtc.o
    0x080011f6   0x080011f6   0x00000002   PAD
    0x080011f8   0x080011f8   0x00000010   Code   RO          277    .text.LL_RTC_IsActiveFlag_RS  stm32f1xx_ll_rtc.o
    0x08001208   0x08001208   0x00000010   Code   RO          269    .text.LL_RTC_IsActiveFlag_RTOF  stm32f1xx_ll_rtc.o
    0x08001218   0x08001218   0x0000002a   Code   RO          110    .text.LL_RTC_SetAsynchPrescaler  rtc.o
    0x08001242   0x08001242   0x00000002   PAD
    0x08001244   0x08001244   0x0000002a   Code   RO          253    .text.LL_RTC_SetAsynchPrescaler  stm32f1xx_ll_rtc.o
    0x0800126e   0x0800126e   0x00000002   PAD
    0x08001270   0x08001270   0x0000001a   Code   RO          251    .text.LL_RTC_SetOutputSource  stm32f1xx_ll_rtc.o
    0x0800128a   0x0800128a   0x00000002   PAD
    0x0800128c   0x0800128c   0x00000018   Code   RO          249    .text.LL_RTC_TAMPER_Disable  stm32f1xx_ll_rtc.o
    0x080012a4   0x080012a4   0x000001d8   Code   RO          257    .text.LL_RTC_TIME_Init  stm32f1xx_ll_rtc.o
    0x0800147c   0x0800147c   0x0000001a   Code   RO          259    .text.LL_RTC_TIME_Set  stm32f1xx_ll_rtc.o
    0x08001496   0x08001496   0x00000002   PAD
    0x08001498   0x08001498   0x00000098   Code   RO          235    .text.LL_RTC_WaitForSynchro  stm32f1xx_ll_rtc.o
    0x08001530   0x08001530   0x000002a6   Code   RO          447    .text.LL_SPI_Init   stm32f1xx_ll_spi.o
    0x080017d6   0x080017d6   0x00000002   PAD
    0x080017d8   0x080017d8   0x00000010   Code   RO          449    .text.LL_SPI_IsEnabled  stm32f1xx_ll_spi.o
    0x080017e8   0x080017e8   0x00000012   Code   RO          451    .text.LL_SPI_SetCRCPolynomial  stm32f1xx_ll_spi.o
    0x080017fa   0x080017fa   0x00000002   PAD
    0x080017fc   0x080017fc   0x00000010   Code   RO          271    .text.LL_SYSTICK_IsActiveCounterFlag  stm32f1xx_ll_rtc.o
    0x0800180c   0x0800180c   0x00000014   Code   RO          349    .text.LL_SetSystemCoreClock  stm32f1xx_ll_utils.o
    0x08001820   0x08001820   0x00000012   Code   RO          138    .text.LL_TIM_DisableARRPreload  tim.o
    0x08001832   0x08001832   0x00000002   PAD
    0x08001834   0x08001834   0x00000012   Code   RO          146    .text.LL_TIM_DisableMasterSlaveMode  tim.o
    0x08001846   0x08001846   0x00000002   PAD
    0x08001848   0x08001848   0x00000012   Code   RO          543    .text.LL_TIM_GenerateEvent_UPDATE  stm32f1xx_ll_tim.o
    0x0800185a   0x0800185a   0x00000002   PAD
    0x0800185c   0x0800185c   0x0000023a   Code   RO          535    .text.LL_TIM_Init   stm32f1xx_ll_tim.o
    0x08001a96   0x08001a96   0x00000002   PAD
    0x08001a98   0x08001a98   0x000000b2   Code   RO          142    .text.LL_TIM_OC_DisableFast  tim.o
    0x08001b4a   0x08001b4a   0x00000002   PAD
    0x08001b4c   0x08001b4c   0x000000b2   Code   RO          140    .text.LL_TIM_OC_EnablePreload  tim.o
    0x08001bfe   0x08001bfe   0x00000002   PAD
    0x08001c00   0x08001c00   0x00000078   Code   RO          547    .text.LL_TIM_OC_Init  stm32f1xx_ll_tim.o
    0x08001c78   0x08001c78   0x00000010   Code   RO          585    .text.LL_TIM_OC_SetCompareCH1  stm32f1xx_ll_tim.o
    0x08001c88   0x08001c88   0x00000010   Code   RO          579    .text.LL_TIM_OC_SetCompareCH2  stm32f1xx_ll_tim.o
    0x08001c98   0x08001c98   0x00000010   Code   RO          587    .text.LL_TIM_OC_SetCompareCH3  stm32f1xx_ll_tim.o
    0x08001ca8   0x08001ca8   0x00000010   Code   RO          589    .text.LL_TIM_OC_SetCompareCH4  stm32f1xx_ll_tim.o
    0x08001cb8   0x08001cb8   0x00000010   Code   RO          537    .text.LL_TIM_SetAutoReload  stm32f1xx_ll_tim.o
    0x08001cc8   0x08001cc8   0x00000010   Code   RO          539    .text.LL_TIM_SetPrescaler  stm32f1xx_ll_tim.o
    0x08001cd8   0x08001cd8   0x00000010   Code   RO          541    .text.LL_TIM_SetRepetitionCounter  stm32f1xx_ll_tim.o
    0x08001ce8   0x08001ce8   0x0000001a   Code   RO          144    .text.LL_TIM_SetTriggerOutput  tim.o
    0x08001d02   0x08001d02   0x00000002   PAD
    0x08001d04   0x08001d04   0x0000001c   Code   RO          165    .text.LL_USART_ConfigAsyncMode  usart.o
    0x08001d20   0x08001d20   0x00000012   Code   RO          167    .text.LL_USART_Enable  usart.o
    0x08001d32   0x08001d32   0x00000002   PAD
    0x08001d34   0x08001d34   0x000002a8   Code   RO          609    .text.LL_USART_Init  stm32f1xx_ll_usart.o
    0x08001fdc   0x08001fdc   0x00000010   Code   RO          611    .text.LL_USART_IsEnabled  stm32f1xx_ll_usart.o
    0x08001fec   0x08001fec   0x0000004e   Code   RO          617    .text.LL_USART_SetBaudRate  stm32f1xx_ll_usart.o
    0x0800203a   0x0800203a   0x00000002   PAD
    0x0800203c   0x0800203c   0x0000001a   Code   RO          615    .text.LL_USART_SetHWFlowCtrl  stm32f1xx_ll_usart.o
    0x08002056   0x08002056   0x00000002   PAD
    0x08002058   0x08002058   0x0000001a   Code   RO          613    .text.LL_USART_SetStopBitsLength  stm32f1xx_ll_usart.o
    0x08002072   0x08002072   0x00000002   PAD
    0x08002074   0x08002074   0x000001a0   Code   RO           81    .text.MX_GPIO_Init  gpio.o
    0x08002214   0x08002214   0x00000062   Code   RO          102    .text.MX_RTC_Init   rtc.o
    0x08002276   0x08002276   0x00000002   PAD
    0x08002278   0x08002278   0x00000096   Code   RO          119    .text.MX_SPI1_Init  spi.o
    0x0800230e   0x0800230e   0x00000002   PAD
    0x08002310   0x08002310   0x00000096   Code   RO          123    .text.MX_SPI2_Init  spi.o
    0x080023a6   0x080023a6   0x00000002   PAD
    0x080023a8   0x080023a8   0x000000c0   Code   RO          134    .text.MX_TIM3_Init  tim.o
    0x08002468   0x08002468   0x000000a0   Code   RO          161    .text.MX_USART1_UART_Init  usart.o
    0x08002508   0x08002508   0x00000004   Code   RO          180    .text.MemManage_Handler  stm32f1xx_it.o
    0x0800250c   0x0800250c   0x00000004   Code   RO          176    .text.NMI_Handler   stm32f1xx_it.o
    0x08002510   0x08002510   0x0000006c   Code   RO           21    .text.NVIC_EncodePriority  main.o
    0x0800257c   0x0800257c   0x00000290   Code   RO          549    .text.OC1Config     stm32f1xx_ll_tim.o
    0x0800280c   0x0800280c   0x00000298   Code   RO          551    .text.OC2Config     stm32f1xx_ll_tim.o
    0x08002aa4   0x08002aa4   0x00000296   Code   RO          553    .text.OC3Config     stm32f1xx_ll_tim.o
    0x08002d3a   0x08002d3a   0x00000002   PAD
    0x08002d3c   0x08002d3c   0x00000268   Code   RO          555    .text.OC4Config     stm32f1xx_ll_tim.o
    0x08002fa4   0x08002fa4   0x00000002   Code   RO          190    .text.PendSV_Handler  stm32f1xx_it.o
    0x08002fa6   0x08002fa6   0x00000002   PAD
    0x08002fa8   0x08002fa8   0x00000026   Code   RO          307    .text.RCC_GetHCLKClockFreq  stm32f1xx_ll_rcc.o
    0x08002fce   0x08002fce   0x00000002   PAD
    0x08002fd0   0x08002fd0   0x00000024   Code   RO          309    .text.RCC_GetPCLK1ClockFreq  stm32f1xx_ll_rcc.o
    0x08002ff4   0x08002ff4   0x00000024   Code   RO          311    .text.RCC_GetPCLK2ClockFreq  stm32f1xx_ll_rcc.o
    0x08003018   0x08003018   0x00000056   Code   RO          305    .text.RCC_GetSystemClockFreq  stm32f1xx_ll_rcc.o
    0x0800306e   0x0800306e   0x00000002   PAD
    0x08003070   0x08003070   0x00000068   Code   RO          317    .text.RCC_PLL_GetFreqDomain_SYS  stm32f1xx_ll_rcc.o
    0x080030d8   0x080030d8   0x00000002   Code   RO          186    .text.SVC_Handler   stm32f1xx_it.o
    0x080030da   0x080030da   0x00000002   PAD
    0x080030dc   0x080030dc   0x00000002   Code   RO          192    .text.SysTick_Handler  stm32f1xx_it.o
    0x080030de   0x080030de   0x00000002   PAD
    0x080030e0   0x080030e0   0x000000d0   Code   RO           27    .text.SystemClock_Config  main.o
    0x080031b0   0x080031b0   0x00000002   Code   RO          635    .text.SystemInit    system_stm32f1xx.o
    0x080031b2   0x080031b2   0x00000002   PAD
    0x080031b4   0x080031b4   0x00000004   Code   RO          184    .text.UsageFault_Handler  stm32f1xx_it.o
    0x080031b8   0x080031b8   0x00000010   Code   RO           23    .text.__NVIC_GetPriorityGrouping  main.o
    0x080031c8   0x080031c8   0x00000042   Code   RO           19    .text.__NVIC_SetPriority  main.o
    0x0800320a   0x0800320a   0x00000002   PAD
    0x0800320c   0x0800320c   0x0000003c   Code   RO           17    .text.__NVIC_SetPriorityGrouping  main.o
    0x08003248   0x08003248   0x0000000a   Code   RO           71    .text.assert_failed  main.o
    0x08003252   0x08003252   0x00000002   PAD
    0x08003254   0x08003254   0x0000003a   Code   RO          737    .text.createHandler  spi_handler.o
    0x0800328e   0x0800328e   0x00000002   PAD
    0x08003290   0x08003290   0x0000008e   Code   RO          735    .text.findOrCreateHandler  spi_handler.o
    0x0800331e   0x0800331e   0x00000002   PAD
    0x08003320   0x08003320   0x0000001c   Code   RO          774    .text.findTail      fifo.o
    0x0800333c   0x0800333c   0x0000002e   Code   RO          772    .text.initFifo      fifo.o
    0x0800336a   0x0800336a   0x00000002   PAD
    0x0800336c   0x0800336c   0x00000060   Code   RO           11    .text.main          main.o
    0x080033cc   0x080033cc   0x00000022   Code   RO          757    .text.mockHandlerFunc  spi_handler.o
    0x080033ee   0x080033ee   0x00000002   PAD
    0x080033f0   0x080033f0   0x0000003c   Code   RO          768    .text.pop           fifo.o
    0x0800342c   0x0800342c   0x00000070   Code   RO          770    .text.push          fifo.o
    0x0800349c   0x0800349c   0x00000072   Code   RO          743    .text.registerHandler  spi_handler.o
    0x0800350e   0x0800350e   0x00000002   PAD
    0x08003510   0x08003510   0x0000012a   Code   RO          778    .text.testFifo      fifo.o
    0x0800363a   0x0800363a   0x00000002   PAD
    0x0800363c   0x0800363c   0x000000e6   Code   RO          753    .text.testHandlerList  spi_handler.o
    0x08003722   0x08003722   0x00000002   PAD
    0x08003724   0x08003724   0x000000b0   Code   RO          755    .text.testRegistration  spi_handler.o
    0x080037d4   0x080037d4   0x0000000c   Code   RO          751    .text.testSPIHandler  spi_handler.o
    0x080037e0   0x080037e0   0x00000010   Data   RO          640    .rodata.AHBPrescTable  system_stm32f1xx.o
    0x080037f0   0x080037f0   0x00000008   Data   RO          641    .rodata.APBPrescTable  system_stm32f1xx.o
    0x080037f8   0x080037f8   0x00000007   Data   RO          152    .rodata.OFFSET_TAB_CCMRx  tim.o
    0x080037ff   0x080037ff   0x00000007   Data   RO          153    .rodata.SHIFT_TAB_OCxx  tim.o
    0x08003806   0x08003806   0x00000038   Data   RO          219    .rodata.str1.1      stm32f1xx_ll_gpio.o
    0x0800383e   0x0800383e   0x00000037   Data   RO          279    .rodata.str1.1      stm32f1xx_ll_rtc.o
    0x08003875   0x08003875   0x00000038   Data   RO          429    .rodata.str1.1      stm32f1xx_ll_exti.o
    0x080038ad   0x080038ad   0x00000037   Data   RO          465    .rodata.str1.1      stm32f1xx_ll_spi.o
    0x080038e4   0x080038e4   0x00000037   Data   RO          591    .rodata.str1.1      stm32f1xx_ll_tim.o
    0x0800391b   0x0800391b   0x00000039   Data   RO          627    .rodata.str1.1      stm32f1xx_ll_usart.o
    0x08003954   0x08003954   0x00000020   Data   RO         1065    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08003978, Size: 0x00000670, Max: 0x0000c000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08003978   0x00000004   Data   RW          639    .data.SystemCoreClock  system_stm32f1xx.o
    0x20000004   0x0800397c   0x00000004   PAD
    0x20000008        -       0x00000060   Zero   RW          941    .bss                c_w.l(libspace.o)
    0x20000068        -       0x00000001   Zero   RW          760    .bss.cnt            spi_handler.o
    0x20000069   0x0800397c   0x00000003   PAD
    0x2000006c        -       0x00000004   Zero   RW          759    .bss.handlerList    spi_handler.o
    0x20000070        -       0x00000200   Zero   RW            2    HEAP                startup_stm32f103xe.o
    0x20000270        -       0x00000400   Zero   RW            1    STACK               startup_stm32f103xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       544          0          0          0          0       2027   fifo.o
       576          0          0          0          0       2766   gpio.o
      1098          0          0          0          0       7765   main.o
       210          0          0          0          0       2148   rtc.o
       368          0          0          0          0       2381   spi.o
       766          0          0          0          5       4176   spi_handler.o
        64         26        304          0       1536        784   startup_stm32f103xe.o
        28          0          0          0          0        995   stm32f1xx_it.o
       614          0         56          0          0       2845   stm32f1xx_ll_exti.o
       758          0         56          0          0       3255   stm32f1xx_ll_gpio.o
       466          0          0          0          0       4557   stm32f1xx_ll_rcc.o
      1456          0         55          0          0       7102   stm32f1xx_ll_rtc.o
       712          0         55          0          0       4565   stm32f1xx_ll_spi.o
      3418          0         55          0          0       9054   stm32f1xx_ll_tim.o
       826          0         57          0          0       4302   stm32f1xx_ll_usart.o
        94          0          0          0          0       6182   stm32f1xx_ll_utils.o
         2          0         24          4          0       1570   system_stm32f1xx.o
       700          0         14          0          0       3928   tim.o
       240          0          0          0          0       2200   usart.o

    ----------------------------------------------------------------------
     13080         26        708          4       1548      72602   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       140          0          0          0          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        18          0          0          0          0         80   exit.o
        94          0          0          0          0         80   h1_alloc.o
        52          0          0          0          0         68   h1_extend.o
        78          0          0          0          0         80   h1_free.o
        14          0          0          0          0         84   h1_init.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
       138          0          0          0          0        168   init_alloc.o
         2          0          0          0          0          0   libinit.o
        10          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
         0          0          0          0          0          0   maybetermalloc1.o
         8          4          0          0          0         68   rt_heap_descriptor_intlibspace.o
        78          0          0          0          0         80   rt_memclr_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       920         78          0          0         96       1736   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       914         78          0          0         96       1736   c_w.l

    ----------------------------------------------------------------------
       920         78          0          0         96       1736   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     14000        104        708          4       1644      73162   Grand Totals
     14000        104        708          4       1644      73162   ELF Image Totals
     14000        104        708          4          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                14708 (  14.36kB)
    Total RW  Size (RW Data + ZI Data)              1648 (   1.61kB)
    Total ROM Size (Code + RO Data + RW Data)      14712 (  14.37kB)

==============================================================================

